[1,["1d7r+0OdtCO7qplXecwEuP@f9941","c5AIPShKtL1r8Q9CpD6F2o@f9941","1brw/JvvpFnIvdrxpFCgMZ","2bczX18ENC/oHXZBjkRCb3@f9941","7875ru/4xIt4UaMXHHwnwh@f9941","bdfmA+qZ5GxatQHRIdxrla@f9941","047v2RYMpBkaSKgOzevDXI@6c48a","7egKw10rVDDpS/QLnaSp1G","24xBnqY6hOoanQf8RpSJu8@6c48a","4dT4xIXsNKN6QvkBFAAnBS@f9941","51CMtpJu9FnLmlkijGv4Tr@f9941","dfTxuQRN5F3ba/mzoxP8QD@f9941","75YPh2v9ZOhLS+aCIMIYnW","d9YZcHa7hP8LwybB92aQdy@f9941","0aY2QYA1RAEYHSaZPHrza7@f9941","0dtT+AY+hGdq4Zc7yOPc66@f9941","82N/LyACBOt5F24cA73O1T@f9941","62qeCrES1Js6Krned73ESy@99380","62qeCrES1Js6Krned73ESy@41ac8","62qeCrES1Js6Krned73ESy@e736c","62qeCrES1Js6Krned73ESy@2e7eb","ad3S6tY7ZIs5PN10DX1dJ9","88A5+88A5BpI37ICDGJXCD","edikmctndEO5HCkWK+/5ma","8bINSo5qFDCqulSQO8J7DP@8a187","d9wa41fOBK9Jz7osgwl42H@6c48a","276hjzZ5VDOrRuDe7QpMgu@6c48a","9ch8J2l7tBTpkkRP1UyVD+@6c48a","a0JGQNgDpBSqxBLKceBDiV@6c48a","3cYbh3Me1BGLmQhHHYxsbV","26SBm5MXRI27XBo/6GnylX","d9ACETrLlAMr3FSYORqVkH@2bd43","65yGjgv/1DZZay0a3cTy+0","a32DmLJPRENa6ngAO8WGp1","57ijqNFuVDJYVa3/xUepOv@6c48a","1b1jhaxY9AzZThl2X4t9hn@6c48a","d1NGQ2rJZCcbhjH0/erZWw","16yA+aBQ5KGpWXOck9Y1y7@f9941","0bBiutCWtFX6w1uCwCpZpC@f9941","2ahrx7LTNPIpH6W7vn8nh5@f9941","dbVwSOokpK7aXiJ7piX2Mj@f9941","a8M7WuDK1Gxaya9uIQQvfV@f9941","30kL+dW9hJoKjinkxDQe4m@f9941","5fIDUDTyJDi4nAZKPXrKaT@f9941","d7M8zDqnBAxaPJ03q9e5VY@f9941","a5KxAjOF1L/6lZygR4IyCt@f9941","38DlMZk0ZJ3q3ESh4QJ7i8@f9941","c6NdVK8VlC1490q2dSF3jm@f9941","b8W9POVVxGCa0DR1uRrxgG","53NB8MXdNAy5sLGNOFI07N@f9941","28mgtP/olDeob/mBnh+4wJ@f9941","c2a3hNmqhINIkG2RdNwehf@f9941","cc3E68utFN2Jv338P3dlSg@f9941","96u6R0DmJKprafV5XtzClz@8a8e2","02dK9ZMAVKc7jdZ0XP5AH/@68025","30inL7Yi9GZpYla3ftTb7Y@f4113","30inL7Yi9GZpYla3ftTb7Y@b9330","30inL7Yi9GZpYla3ftTb7Y@ee350","bclmRFD+9DpJDJpHHEvU48@6496a","a2iDSl2EBGmYrFHEV22XZU@035b5","63GDGwHUBDSpSb+lWt2u6n","b5McRomfhMNIJllvaG/ON3","7a4DoD7DdOi5B/rgyt0qWa","62qeCrES1Js6Krned73ESy@7d6ab","6auTh/UMBF8pK/e+GJRojx@6c48a","1dfElOcBlCk5p1mEcXGyv4@6c48a","b9tX1UGm9K8ppxRV3gUUuI@6c48a","43O4ekeLhFtoYkk5wwUN8H@6c48a","7eM5L0MhtEkYKhk3bCBuGg@f9941","3fS3ptMZlK37M9byuDz21z@f9941","7eM5L0MhtEkYKhk3bCBuGg@6c48a","96u6R0DmJKprafV5XtzClz@c0351","96u6R0DmJKprafV5XtzClz@9cd16","96u6R0DmJKprafV5XtzClz@438fe","31qIT9b5tNd4jEdXbBEpgm@f9941","d9WW5Bk+pH+agjgnKr3UE4@e736c","d9WW5Bk+pH+agjgnKr3UE4@8fac0","8evsLSfUNBC7EsS2oJiq1E@6c48a","23l4kbK1BEOLAnZKh+3tZG@6c48a","12P8HzpbFLw69B2zWf38gH@6c48a","dajAypHD5NC5t8fuz5ZKqe@6c48a","f4of4ixA5E6phcN+MVW2wG@6c48a","58K3fkTAFOg467UMwdLeMP@6c48a","3bpJXoUoRDY7I8TmijfbvU@6c48a","cdaoSP1kNMOLXNGKJCYndS@f9941","f4dAvv0D9L+Yu0deebjznK"],["node","_spriteFrame","_parent","value","_normalSprite","_effectAsset","_font","_mesh","_target","mainTexture","root","spriteFrame","targetInfo","data","mangosteen","pbrMap","scoreLabel","highSocreLabel","errorGrp","exitGrp","resultGrp","settingGrp","ticketBanner","banner","descriptionPopup","titlePopup","_cameraComponent","exitBtn","settingBtn","backBtn","gameCamera","comboText","highScoreText","scoreText","footer","header","tutorial","resultScreen","platformGrp","effect","_particleSystem","scene","asset","_cpuMaterial","_mainTexture","platformPref","decoPref","_textureSource","_skeleton"],[["cc.Node",["_name","_layer","_id","_active","_objFlags","__editorExtras__","_parent","_components","_lpos","_children","_lrot","_euler","_prefab","_lscale"],-3,1,9,5,2,5,5,4,5],["cc.Label",["_string","_actualFontSize","_fontSize","_enableWrapText","_isBold","_isSystemFontUsed","_lineHeight","_spacingX","_horizontalAlign","_overflow","node","_color","_font"],-7,1,5,6],["cc.Widget",["_alignFlags","_originalWidth","_left","_top","_bottom","_originalHeight","_right","node"],-4,1],["cc.Node",["_name","_layer","_objFlags","_active","_parent","_components","_lpos","_children","_lrot","_euler"],-1,1,12,5,2,5,5],["cc.Button",["_transition","_zoomScale","node","_normalSprite","clickEvents","_normalColor","_target"],1,1,6,9,5,1],["cc.Sprite",["_sizeMode","_type","node","_spriteFrame","_color"],1,1,6,5],["cc.Material",["_states","_defines","_name","_techIdx","_props"],-1,12],["cc.Node",["_name","_layer","_lpos","_parent","_components","_lrot","_euler","_lscale","_children","_prefab"],1,5,1,2,5,5,5,12,4],["cc.CurveRange",["constant","multiplier","mode","spline"],0,4],["cc.MeshRenderer",["_shadowReceivingMode","node","_materials","lightmapSettings","_mesh","__prefab"],2,1,3,4,6,4],["cc.Camera",["_projection","_orthoHeight","_visibility","_far","_priority","_clearFlags","_fov","_fovAxis","node","_color"],-5,1,5],["cc.UITransform",["node","_contentSize","_anchorPoint"],3,1,5,5],["cc.PrefabInfo",["fileId","nestedPrefabInstanceRoots","root","instance","asset"],2,2,1,4,6],["aa662R2hhZHYbOUqJXoXfrO",["node","textures","mangosteen","__prefab","emoTextures"],3,1,3,1,4,3],["cc.GradientRange",["_mode","colorMin","colorMax"],2,5,5],["cc.RealKeyframeValue",["value","rightTangent","rightTangentWeight","leftTangent","leftTangentWeight","interpolationMode"],-3],["cc.Prefab",["_name"],2],"cc.SpriteFrame",["cc.SceneAsset",["_name"],2],["cc.Node",["_name","_parent","_children","_prefab","_lpos","_lrot","_euler"],2,1,9,4,5,5,5],["cc.BlockInputEvents",["node"],3,1],["5b6adTciJlBt7LYQtEg8Gyd",["node","titlePopup","descriptionPopup","banner","ticketBanner","settingGrp","resultGrp","exitGrp","errorGrp","highSocreLabel","scoreLabel"],3,1,1,1,1,1,1,1,1,1,1,1],["cc.UIOpacity",["_opacity","node"],2,1],["cc.Canvas",["node","_cameraComponent"],3,1,1],["f76cfCfWGNMVYIhH5q4T4aX",["node","actionPhase","resultScreen","popup","tutorial","header","footer","scoreText","highScoreText","comboText","combo","floatScores","gameCamera","backBtn","settingBtn","exitBtn"],3,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1],["cc.Scene",["_name","_children","_prefab","_globals"],2,2,4,4],["cc.PrefabInfo",["fileId","root","asset"],2,1,1],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree"],3,4,4,4,4,4],["cc.AmbientInfo",["_skyIllumLDR","_skyColorHDR","_groundAlbedoHDR","_skyColorLDR","_groundAlbedoLDR"],2,5,5,5,5],["cc.ShadowsInfo",["_shadowColor"],3,5],["cc.SkyboxInfo",["_useHDR"],2],["cc.FogInfo",[],3],["cc.OctreeInfo",[],3],["cc.Layout",["_enabled","_resizeMode","_layoutType","_paddingLeft","_paddingRight","_spacingX","_affectedByScale","node"],-4,1],["cc.ClickEvent",["_componentId","handler","target"],1,1],["cc.PrefabInstance",["fileId","prefabRootNode","mountedChildren","propertyOverrides"],1,9,9],["cc.MountedChildrenInfo",["targetInfo","nodes"],3,4,2],["cc.TargetInfo",["localID"],2],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,4],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,8],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,6],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,1],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,1],["cc.LabelOutline",["_width","node","_color"],2,1,5],["664b0UYiuRI1IhA6zRZTnqT",["node","cameras","mags"],3,1,2,12],["cc.ModelLightmapSettings",[],3],["c5662BXjChGp6sRVGXOQfNq",["node","config","effect","platformGrp","platformPref"],3,1,5,1,1,6],["cc.ParticleSystem",["scaleSpace","_simulationSpace","_materials","startColor","startSizeX","startSizeY","startSizeZ","startSpeed","startRotationX","startRotationY","startRotationZ","startDelay","startLifetime","gravityModifier","rateOverTime","rateOverDistance","_colorOverLifetimeModule","_shapeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule","_noiseModule","_trailModule","renderer"],1,12,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],["cc.ColorOvertimeModule",["color"],3,4],["cc.ShapeModule",["_enable","_shapeType","emitFrom","radius","radiusThickness","arcSpeed"],-2,4],["cc.SizeOvertimeModule",["_enable","size","x","y","z"],2,4,4,4,4],["cc.RealCurve",["_times","_values"],2,9],["cc.VelocityOvertimeModule",["space","x","y","z","speedModifier"],2,4,4,4,4],["cc.ForceOvertimeModule",["x","y","z"],3,4,4,4],["cc.LimitVelocityOvertimeModule",["limitX","limitY","limitZ","limit"],3,4,4,4,4],["cc.RotationOvertimeModule",["x","y","z"],3,4,4,4],["cc.TextureAnimationModule",["frameOverTime","startFrame"],3,4,4],["cc.NoiseModule",[],3],["cc.TrailModule",["lifeTime","widthRatio","colorOverTrail","colorOvertime","_particleSystem"],3,4,4,4,4,1],["cc.ParticleSystemRenderer",["_cpuMaterial","_mainTexture"],3,6,6],["cc.DirectionalLight",["_illuminanceHDR","_illuminanceLDR","_shadowSaturation","_shadowDistance","_csmLevel","node","_staticSettings"],-2,1,4],["cc.StaticLightSettings",["_castShadow"],2],["4ce2ehJWxBKgprcSpsWHcq0",["node"],3,1],["88d1f3GVqRFhK47jjjLl607",["node","decoPref"],3,1,6],["cc.Mesh",["_native","_hash","_struct"],1,11],["cc.CompPrefabInfo",["fileId"],2],["cc.BitmapFont",["_name","fontSize","fntConfig"],0],["cc.TTFFont",["_name","_native"],1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Skeleton",["_name","_hash","_joints","_bindposes"],0,12],["cc.SkeletalAnimation",["node","__prefab"],3,1,4],["cc.SkinnedMeshRenderer",["node","__prefab","_materials","lightmapSettings","_skinningRoot","_mesh","_skeleton"],3,1,4,3,4,1,6,6],["80888qP3oxKfo5v1Ss5O55g",["node","__prefab","textures"],3,1,4,3]],[[11,0,1,1],[0,0,1,6,7,8,3],[26,0,1,2,2],[5,0,2,3,2],[8,1],[37,0,2],[0,0,1,6,9,7,8,3],[1,0,1,2,3,7,4,10,7],[11,0,1,2,1],[40,0,1,2,2],[34,0,1,2,3],[3,0,1,4,5,6,3],[5,2,3,1],[45,1],[65,0,2],[0,0,6,12,8,10,11,2],[0,0,6,9,12,8,10,11,2],[4,0,1,2,4,5,6,3,3],[1,0,1,2,4,10,5],[8,0,2],[19,0,1,2,3,4,5,6,2],[64,0,1,2,3],[0,0,3,1,6,9,7,8,4],[2,0,1,5,7,4],[38,0,1,2,3],[39,0,1,2,2],[66,0,1,2,4],[6,0,1,4,3],[6,2,0,1,4,4],[0,0,1,9,7,3],[0,0,3,1,6,9,7,4],[0,0,3,1,6,7,4],[0,0,4,1,6,9,7,8,4],[5,1,0,2,3,3],[5,2,1],[42,0,1,2,3],[9,0,1,2,3,4,2],[9,0,1,5,2,3,4,2],[14,1],[6,2,3,0,1,4,5],[0,0,2,6,9,7,8,3],[0,0,1,6,7,8,10,11,3],[0,0,2,6,7,3],[0,0,6,9,12,8,10,13,11,2],[2,0,3,7,3],[2,0,2,1,7,4],[5,0,2,4,3,2],[33,0,1,2,3,4,5,6,7,8],[4,0,2,4,3,2],[41,0,1,2,2],[1,0,1,2,3,4,10,11,6],[1,0,1,2,4,10,11,5],[1,0,8,1,2,6,9,5,10,11,8],[8,2,3,2],[51,0,1,2],[15,0,1,2,3,4,6],[15,5,0,3],[16,0,2],[68,0,1,2,4],[6,3,0,1,4,4],[18,0,2],[0,0,1,2,9,7,8,4],[0,4,5,12,3],[0,0,1,6,7,3],[0,0,1,6,9,8,3],[0,0,3,1,6,7,8,4],[0,0,2,6,9,7,3],[0,0,3,6,7,8,10,13,11,3],[0,0,2,6,7,10,11,3],[0,0,6,7,10,13,11,2],[0,0,6,7,8,10,13,11,2],[0,0,2,6,3],[0,0,9,7,12,8,2],[0,0,3,6,7,12,8,10,13,11,3],[0,0,6,7,12,10,13,11,2],[0,0,6,7,12,8,10,13,11,2],[0,0,9,7,12,2],[0,0,9,12,8,10,11,2],[0,0,6,9,12,10,13,11,2],[0,0,6,7,12,13,2],[0,0,7,12,10,13,11,2],[3,0,1,4,7,5,6,3],[3,0,1,4,5,6,8,9,3],[3,0,2,1,4,7,5,6,4],[3,0,1,4,5,3],[3,0,3,1,4,5,6,4],[3,0,2,3,1,4,5,6,5],[7,0,1,3,4,2,3],[7,0,4,2,5,6,2],[7,0,3,4,2,5,7,6,2],[7,0,3,8,9,2,2],[2,0,2,6,3,4,7,6],[2,0,4,1,5,7,5],[2,0,2,6,3,7,5],[2,0,2,3,7,4],[2,0,1,7,3],[2,0,4,1,7,4],[20,0,1],[21,0,1,2,3,4,5,6,7,8,9,10,1],[22,0,1,2],[23,0,1,1],[24,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1],[25,0,1,2,3,2],[12,0,1,2],[12,0,2,3,4,2],[27,0,1,2,3,4,1],[28,0,1,2,3,4,2],[29,0,1],[30,0,2],[31,1],[32,1],[4,0,1,2,5,6,3,3],[4,0,1,2,4,3,3],[4,0,2,2],[4,0,1,2,3],[35,0,1,2,3,3],[36,0,1,1],[1,0,1,2,6,3,5,7,10,11,12,8],[1,0,1,2,6,3,7,4,10,8],[1,0,1,2,3,5,10,12,6],[1,0,1,2,3,4,10,6],[1,0,1,3,5,10,5],[1,0,1,3,5,10,11,5],[1,0,1,2,6,3,5,10,11,7],[1,0,1,2,6,3,5,4,10,11,8],[1,0,1,2,6,4,10,11,6],[13,0,1,2,1],[13,0,3,1,4,2,1],[43,0,1,2,2],[44,0,1,2,1],[9,1,5,2,3,4,1],[46,0,1,2,3,4,1],[47,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,3],[14,0,1,2,2],[8,0,1,3],[48,0,1],[49,0,1,2,3,4,5,6],[50,0,1,2,3,4,2],[52,0,1,2,3,4,2],[53,0,1,2,1],[54,0,1,2,3,1],[55,0,1,2,1],[56,0,1,1],[57,1],[58,0,1,2,3,4,1],[59,0,1,1],[60,0,1,2,3,4,5,6,6],[61,0,2],[62,0,1],[10,0,1,3,2,8,9,5],[10,0,4,1,3,5,2,8,9,7],[10,0,4,6,7,1,5,2,8,9,8],[63,0,1,1],[16,1],[67,0,1,3],[69,0,1,2,3,4],[70,0,1,1],[71,0,1,2,3,4,5,6,1],[72,0,1,2,1]],[[[[39,"platform2","1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"HAS_SECOND_UV":true,"USE_ALBEDO_MAP":true,"PBR_UV":"v_uv1","USE_PBR_MAP":true,"USE_ALPHA_TEST":true},{},{}],[[[{"alphaThreshold":0,"occlusion":0.4,"roughness":0,"metallic":0.2},"mainColor",8,[4,4282245375],"emissive",8,[4,4280440190],"mainTexture",6,0,"pbrMap",6,1],{},{}],11,0,0]]],0,0,[0,0,0],[9,15,5],[6,35,7]],[[[39,"particle","0",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"tintColor",8,[4,4294967295],"mainTexture",6,0]],11]]],0,0,[0,0],[9,5],[8,36]],[[[60,"scene"],[29,"popup",33554432,[-15,-16,-17,-18,-19,-20,-21,-22,-23,-24],[[0,-1,[5,750,1334]],[23,45,100,100,-2],[97,-3],[98,-14,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4]]],[29,"actionPhase",33554432,[-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39],[[0,-25,[5,750,1334]],[23,45,100,100,-26],[99,1,-27]]],[61,"Canvas",33554432,"eahDdX0ctPIZe99L75hK4t",[-61,-62,2,1],[[0,-40,[5,750,1334]],[100,-42,-41],[91,45,-5.684341886080802e-14,-5.684341886080802e-14,-1.1368683772161603e-13,-1.1368683772161603e-13,-43],[101,-60,2,-59,1,-58,-57,-56,-55,-54,-53,[-50,-51,-52],[-48,-49],-47,-46,-45,-44]],[1,374.99999999999994,666.9999999999999,0]],[102,"scene",[-64,-65,3,-66,-67,-68,-69,-70],[103,"4d14e99a-796d-49bc-9773-53287caa51c4",[-63]],[105,[106,2,[2,0.242613,0.362617,0.798746,0.520833125],[2,0.241814,0.361945,0.798799,0],[2,0.9686274509803922,0.9254901960784314,0.8235294117647058,2],[2,0.8862745098039215,0.6431372549019607,0.48627450980392156,1]],[107,[4,4286621412]],[108,false],[109],[110]]],[30,"setting_grp",false,33554432,1,[-72,-73,-74,-75,-76],[[0,-71,[5,600,500]]]],[6,"result_grp",33554432,1,[-78,-79,-80,-81],[[0,-77,[5,600,500]]],[1,0,-37.45,0]],[6,"score_grp",33554432,2,[-86,-87],[[0,-82,[5,200,90]],[33,1,0,-83,6],[47,false,1,1,20,15,5,true,-84],[44,1,98.14699999999999,-85]],[1,0,523.8530000000001,0]],[6,"best_score",33554432,2,[-92,-93],[[0,-88,[5,200,40]],[33,1,0,-89,7],[47,false,1,1,20,15,5,true,-90],[44,1,185.88099999999997,-91]],[1,8.662,461.119,0]],[22,"count-banner",false,33554432,1,[-96,-97],[[0,-94,[5,493,38]],[12,-95,21]],[1,0,-74,0]],[6,"feature-sound",33554432,5,[-100,-101,-102],[[0,-98,[5,46,41]],[34,-99]],[1,-171.682,74.396,0]],[6,"switch_btn",33554432,10,[-106,-107],[[0,-103,[5,130,60]],[3,0,-104,26],[48,3,-105,[[10,"5b6adTciJlBt7LYQtEg8Gyd","onSwitchSoundClick",1]],27]],[1,323.929,0,0]],[6,"feature-music",33554432,5,[-110,-111,-112],[[0,-108,[5,46,41]],[34,-109]],[1,-171.682,-24.964,0]],[6,"switch_btn",33554432,12,[-116,-117],[[0,-113,[5,130,60]],[3,0,-114,31],[48,3,-115,[[10,"5b6adTciJlBt7LYQtEg8Gyd","onSwitchMusicClick",1]],32]],[1,323.929,0,0]],[6,"reject",33554432,5,[-122],[[0,-118,[5,270,80]],[3,0,-119,33],[17,3,1.1,-121,[[10,"5b6adTciJlBt7LYQtEg8Gyd","onClosePopupClick",1]],[4,4292269782],-120,34]],[1,-150,-194.13300000000004,0]],[6,"accept",33554432,5,[-127],[[0,-123,[5,270,80]],[3,0,-124,35],[17,3,1.1,-126,[[10,"5b6adTciJlBt7LYQtEg8Gyd","onClosePopupClick",1]],[4,4292269782],-125,36]],[1,150.00000000000006,-194.13300000000004,0]],[6,"continue",33554432,6,[-132],[[0,-128,[5,270,80]],[3,0,-129,40],[17,3,1.1,-131,[[10,"f76cfCfWGNMVYIhH5q4T4aX","replay",3]],[4,4292269782],-130,41]],[1,150,-200,0]],[30,"exit_grp",false,33554432,1,[-134,-135,-136],[[0,-133,[5,600,500]]]],[6,"reject",33554432,17,[-141],[[0,-137,[5,270,80]],[3,0,-138,43],[17,3,1.1,-140,[[10,"5b6adTciJlBt7LYQtEg8Gyd","onCloseGame",1]],[4,4292269782],-139,44]],[1,-150,-194.13300000000004,0]],[6,"accept",33554432,17,[-146],[[0,-142,[5,270,80]],[3,0,-143,45],[17,3,1.1,-145,[[10,"f76cfCfWGNMVYIhH5q4T4aX","resume",3]],[4,4292269782],-144,46]],[1,150.00000000000006,-194.13300000000004,0]],[30,"error_grp",false,33554432,1,[-148,-149,-150],[[0,-147,[5,600,500]]]],[6,"reject",33554432,20,[-155],[[0,-151,[5,270,80]],[3,0,-152,48],[111,3,1.1,-154,[4,4292269782],-153,49]],[1,-150,-194.13300000000004,0]],[6,"accept",33554432,20,[-160],[[0,-156,[5,270,80]],[3,0,-157,50],[17,3,1.1,-159,[[10,"f76cfCfWGNMVYIhH5q4T4aX","resume",3]],[4,4292269782],-158,51]],[1,150.00000000000006,-194.13300000000004,0]],[62,0,null,[104,"efm9gKLqBdZoJ0fWrBSMWn",-167,[115,"28SxmUfa1Nkajg9eu+qoHj",null,[[116,[5,["efm9gKLqBdZoJ0fWrBSMWn"]],[-166]]],[[24,"meo",["_name"],[5,["efm9gKLqBdZoJ0fWrBSMWn"]]],[25,["_lpos"],[5,["efm9gKLqBdZoJ0fWrBSMWn"]],[1,0,0,0]],[25,["_lrot"],[5,["efm9gKLqBdZoJ0fWrBSMWn"]],[3,0,0,0,1]],[25,["_euler"],[5,["efm9gKLqBdZoJ0fWrBSMWn"]],[1,0,0,0]],[9,["_materials","0"],[5,["91MYs7Dx1cfLpZj8KMnwf+"]],68],[49,["_skinningRoot"],[5,["91MYs7Dx1cfLpZj8KMnwf+"]],-161],[24,true,["_active"],[5,["efm9gKLqBdZoJ0fWrBSMWn"]]],[25,["_lscale"],[5,["efm9gKLqBdZoJ0fWrBSMWn"]],[1,0.7,0.7,0.7]],[24,7,["_clips","length"],[5,["9cyYalR9VX56Kq2cVGLXMi"]]],[9,["_clips","0"],[5,["9cyYalR9VX56Kq2cVGLXMi"]],69],[9,["_clips","1"],[5,["9cyYalR9VX56Kq2cVGLXMi"]],70],[9,["_clips","2"],[5,["9cyYalR9VX56Kq2cVGLXMi"]],71],[9,["_clips","3"],[5,["9cyYalR9VX56Kq2cVGLXMi"]],72],[9,["_clips","4"],[5,["9cyYalR9VX56Kq2cVGLXMi"]],73],[9,["_clips","5"],[5,["9cyYalR9VX56Kq2cVGLXMi"]],74],[9,["_clips","6"],[5,["9cyYalR9VX56Kq2cVGLXMi"]],75],[9,["_clips","7"],[5,["9cyYalR9VX56Kq2cVGLXMi"]],76],[35,false,["_useBakedAnimation"],-162],[24,0,["_shadowReceivingMode"],[5,["9azQtVrlBZAZpKxAnsJyeF"]]],[49,["_skinningRoot"],[5,["9azQtVrlBZAZpKxAnsJyeF"]],-163],[9,["_materials","0"],[5,["9azQtVrlBZAZpKxAnsJyeF"]],77],[35,null,["_defaultClip"],-164],[35,false,["playOnLoad"],-165]]],64]],[6,"bg",8388608,3,[-171],[[8,-168,[5,750,1624],[0,0.5,1]],[46,0,-169,[4,4289575661],0],[92,41,-145,750,1624,-170]],[1,0,667,0]],[22,"level_tag",false,33554432,7,[-174,-175],[[0,-172,[5,147.61,50.4]],[7,"LEVEL 03",32,32,false,-2,true,-173]],[1,0,67.107,0]],[29,"perfect",33554432,[-178],[[0,-176,[5,498,353]],[12,-177,9]]],[6,"box",33554432,2,[-181,-182],[[0,-179,[5,524,161]],[12,-180,11]],[1,0,-450,0]],[6,"tutorialText",33554432,2,[-185],[[0,-183,[5,385.38,30]],[117,"Nhấn giữ lấy đà, thả ra để nhảy",28,28,30,false,false,-2,-184,[4,4281413293],13]],[1,0,-500,0]],[11,"setting_btn",33554432,2,[[[0,-186,[5,92,78]],[3,0,-187,14],-188,[93,33,642.9970000000001,50,103,-189]],4,4,1,4],[1,279,525,0]],[11,"back_btn",33554432,2,[[[0,-190,[5,92,78]],[3,0,-191,15],-192,[94,9,50,103,-193]],4,4,1,4],[1,-279,525,0]],[6,"replay",33554432,6,[-197],[[0,-194,[5,270,80]],[3,0,-195,38],[112,3,1.1,-196,[[10,"f76cfCfWGNMVYIhH5q4T4aX","replay",3]],39]],[1,-150,-200,0]],[81,"score",33554432,6,[-200,-201],[[[0,-198,[5,222.46,126]],-199],4,1],[1,0,64.622,0]],[40,"platform","6cE/suh5hMbJxqGPN8Fhme",4,[-204,-205,-206],[[126,-203,[60,61,62,63],-202]],[1,0,50,0]],[63,"bg-skybox",33554432,2,[[0,-207,[5,750,1334]],[3,0,-208,1],[23,45,411,750,-209]]],[1,"decoTop",33554432,2,[[8,-210,[5,750,242],[0,0.5,1]],[3,0,-211,2],[95,41,40,-212]],[1,0,667,0]],[41,"decoBot",33554432,2,[[8,-213,[5,750,242],[0,0.5,1]],[3,0,-214,3],[96,44,-310,40,-215]],[1,0,-735,0],[3,0,0,1,6.123233995736766e-17],[1,0,0,180]],[1,"deco_left",33554432,25,[[8,-216,[5,100,2],[0,1,0.5]],[3,0,-217,4],[45,8,-100,100,-218]],[1,-73.805,0.06899999999995998,0]],[41,"deco_right",33554432,25,[[8,-219,[5,100,2],[0,1,0.5]],[3,0,-220,5],[45,32,50.352000000000004,100,-221]],[1,73.805,0.069,0],[3,0,0,1,6.123233995736766e-17],[1,0,0,180]],[64,"combo",33554432,2,[-222,26,-223],[1,0,210,0]],[31,"good",false,33554432,39,[[0,-224,[5,372,358]],[12,-225,8]]],[82,"combo",33554432,26,[[[0,-226,[5,92.48,146]],-227,[128,10,-228,[4,4280096420]]],4,1,4],[1,200,-100,0],[3,0,0,0.13052619222005157,0.9914448613738104],[1,0,0,15]],[31,"cool",false,33554432,39,[[0,-229,[5,415,204]],[12,-230,10]]],[31,"bg",false,33554432,1,[[0,-231,[5,750,1334]],[46,0,-232,[4,2533359616],16],[23,45,2,2,-233]]],[83,"title",512,33554432,5,[-236],[[[0,-234,[5,145.99,50.4]],-235],4,1],[1,0,175.03700000000003,0]],[6,"on",33554432,11,[-239],[[0,-237,[5,55,43]],[3,0,-238,24]],[1,-28.416,0,0]],[22,"off",false,33554432,11,[-242],[[0,-240,[5,55,43]],[3,0,-241,25]],[1,28.735,0,0]],[6,"on",33554432,13,[-245],[[0,-243,[5,55,43]],[3,0,-244,29]],[1,-28.416,0,0]],[22,"off",false,33554432,13,[-248],[[0,-246,[5,55,43]],[3,0,-247,30]],[1,28.735,0,0]],[32,"title_score",512,33554432,6,[-251],[[0,-249,[5,225,63]],[118,"KẾT QUẢ",50,50,50,false,-2,true,-250]],[1,0,201.888,0]],[32,"title",512,33554432,17,[-254],[[0,-252,[5,323.98,50.4]],[7,"XÁC NHẬN THOÁT",36,36,false,-2,true,-253]],[1,0,175.03700000000003,0]],[32,"title",512,33554432,20,[-257],[[0,-255,[5,134,50.4]],[7,"LỖI RỒI",36,36,false,-2,true,-256]],[1,0,175.03700000000003,0]],[87,"Camera",33554432,3,[-258],[1,0,0,1000]],[11,"sum",33554432,7,[[[0,-259,[5,150.16,50.4]],-260],4,1],[1,0,2.343,0]],[1,"best",33554432,8,[[0,-261,[5,53.34,50.4]],[50,"BEST",20,20,false,true,-262,[4,4282835455]]],[1,-49.151,1.015,0]],[11,"num",33554432,8,[[[0,-263,[5,15.57,50.4]],-264],4,1],[1,26.568,1.015,0]],[84,"score0",33554432,2,[[[0,-265,[5,80.07,40]],-266],4,1]],[11,"score1",33554432,2,[[[0,-267,[5,80.07,40]],-268],4,1],[1,0,-100.389,0]],[11,"header",33554432,27,[[[8,-269,[5,176.25,25],[0,0,0.5]],-270],4,1],[1,-110,35,0]],[11,"footer",33554432,27,[[[8,-271,[5,350,69],[0,0,1]],-272],4,1],[1,-110,15,0]],[1,"hand@2x",33554432,28,[[0,-273,[5,125,141]],[12,-274,12]],[1,0,100,0]],[113,3,30],[65,"box",false,33554432,1,[[8,-275,[5,654,110],[0,0.5,-2.5]],[12,-276,17]],[1,0,-50,0]],[1,"popup_bg",33554432,1,[[0,-277,[5,622,570]],[33,1,0,-278,18]],[1,0,-50,0]],[85,"banner",false,33554432,1,[[[0,-279,[5,558,288]],-280],4,1],[1,0,70,0]],[1,"ticket-big",33554432,9,[[0,-281,[5,193,191]],[12,-282,19]],[1,0,150,0]],[1,"amount",33554432,9,[[0,-283,[5,65.33,40]],[119,"Số lượng: 1",20,20,false,false,-284,20]],[1,0,7,0]],[86,"body",512,false,33554432,1,[[[8,-285,[5,570,132],[0,0,1]],-286],4,1],[1,-280,-90,0]],[1,"dec_bot",33554432,44,[[0,-287,[5,250,2]],[3,0,-288,22]],[1,0,-24.016,0]],[1,"sound_icon",33554432,10,[[0,-289,[5,69,61.5]],[3,0,-290,23]],[1,-12,0,0]],[1,"feature_text",33554432,10,[[8,-291,[5,159.98,50.4],[0,0,0.5]],[18,"ÂM THANH",30,30,true,-292]],[1,39.996,0,0]],[1,"label_on",33554432,45,[[0,-293,[5,37.5,50.4]],[18,"bật",25,25,true,-294]],[1,57.008,0,0]],[1,"label_off",33554432,46,[[0,-295,[5,30.55,50.4]],[18,"tắt",25,25,true,-296]],[1,-50.188,0,0]],[1,"sound_icon",33554432,12,[[0,-297,[5,40,61.5]],[3,0,-298,28]],[1,-12,0,0]],[1,"feature_text",33554432,12,[[8,-299,[5,158.33,50.4],[0,0,0.5]],[18,"NHẠC NỀN",30,30,true,-300]],[1,39.996,0,0]],[1,"label_on",33554432,47,[[0,-301,[5,37.5,50.4]],[18,"bật",25,25,true,-302]],[1,57.008,0,0]],[1,"label_off",33554432,48,[[0,-303,[5,30.55,50.4]],[18,"tắt",25,25,true,-304]],[1,-50.188,0,0]],[1,"Label",33554432,14,[[0,-305,[5,108.44,50.4]],[7,"Bỏ qua",32,32,false,-2,true,-306]],[1,0,3.5,0]],[1,"Label-001",33554432,15,[[0,-307,[5,108.44,50.4]],[7,"Đồng ý",32,32,false,-2,true,-308]],[1,0,3.5,0]],[1,"dec_bot",33554432,49,[[0,-309,[5,400,110]],[3,0,-310,37]],[1,0,6.334,0]],[1,"Label",33554432,31,[[0,-311,[5,142.84,50.4]],[7,"CHƠI LẠI",32,32,false,-2,true,-312]],[1,0,3,0]],[1,"Label",33554432,16,[[0,-313,[5,145.78,50.4]],[7,"TIẾP TỤC",32,32,false,-2,true,-314]],[1,0,3,0]],[1,"best",33554432,32,[[0,-315,[5,53.34,50.4]],[51,"BEST",20,20,true,-316,[4,4285852159]]],[1,-44.339,-70,0]],[11,"hight_score",33554432,32,[[[0,-317,[5,83.42,50.4]],-318],4,1],[1,30.802,-70,0]],[1,"dec_bot",33554432,50,[[0,-319,[5,250,2]],[3,0,-320,42]],[1,0,-24.016,0]],[1,"Label",33554432,18,[[0,-321,[5,87.09,50.4]],[7,"Thoát",32,32,false,-2,true,-322]],[1,0,3.5,0]],[1,"Label-001",33554432,19,[[0,-323,[5,140.08,50.4]],[7,"Chơi tiếp",32,32,false,-2,true,-324]],[1,0,3.5,0]],[1,"dec_bot",33554432,51,[[0,-325,[5,250,2]],[3,0,-326,47]],[1,0,-24.016,0]],[1,"Label",33554432,21,[[0,-327,[5,87.09,50.4]],[7,"Thoát",32,32,false,-2,true,-328]],[1,0,3.5,0]],[1,"Label-001",33554432,22,[[0,-329,[5,140.08,50.4]],[7,"Chơi tiếp",32,32,false,-2,true,-330]],[1,0,3.5,0]],[88,"Main Camera",[-331],[1,-4.559,7.968,-4.654],[3,-0.10868796695565139,-0.8858339284126221,-0.26239596389109193,0.36692442715874546],[1,-33,-135,1.5902773407317584e-14]],[66,"CameraHolder","50irZ7YEpE17vWZVOgOBBY",4,[90],[[129,-332,[90,52],[[[1,0.1,0.1,0.1],[1,10,10,10]],8,8]]]],[67,"mangosteen",false,33,[[36,0,-333,[56,57,58],[13],59]],[1,0,1.15,0],[3,-0.42261826174069944,0,0,0.9063077870366499],[1,20,20,20],[1,-50,0,0]],[40,"player","b9atebMHVKXpYlrkR3/UFa",4,[23],[[131,-336,[1,1,3,2],-335,-334,78]],[1,0,1,0]],[132,0,0,[[65,null],6,0],[133,2,[4,4281808895],[4,4281859895]],[19,1],[4],[4],[134,-1.3,5],[4],[4],[4],[4],[19,0.5],[4],[19,20],[4],[135,[38]],[136,true,4,2,3,0,[19,1]],[137,true,[53,1,[54,[0,1],[[55,1,-1,1,-1,1],[55,0.4703703703703704,-0.5296296296296297,1,-0.5296296296296297,1]]]],[4],[4],[4]],[138,0,[4],[4],[4],[19,1]],[139,[4],[4],[4]],[140,[4],[4],[4],[4]],[141,[4],[4],[4]],[142,[53,1,[54,[0,1],[[56,2,1],[56,2,1]]]],[4]],[143],[144,[19,1],[4],[38],[38],-337],[145,66,67]],[5,["9cyYalR9VX56Kq2cVGLXMi"]],[68,"Main Light","c0y6F5f+pAvI805TdmxIjx",4,[[146,100000,2.604167,0.75,100,1,-338,[147,true]]],[3,-0.7697511313200572,-0.19617469496901108,-0.2801664995932355,0.5389855446957562],[1,-110,-40,0]],[42,"GameMgr","d3SfsEW91JSr3LAi2hu1nz",4,[[148,-339]]],[1,"Camera",8388608,24,[[149,0,667,2000,8388608,-340,[4,4290234615]]],[1,0,-667,1000]],[150,0,1073741824,667,2000,6,33554432,52,[4,4278190080]],[120,"999999",45,45,false,true,53],[50,"0",28,28,false,true,55,[4,4282835455]],[121,"+10",40,false,false,56],[122,"+10",40,false,false,57,[4,4294967154]],[123,"x2",60,60,100,false,false,41,[4,4294571007]],[124,"Lực nhảy quá nhẹ",20,20,25,false,false,true,58,[4,4281413293]],[52,"Chạm và giữ tay trên màn hình để lấy đà, giữ càng lâu nhảy càng xa. Thả ra để nhảy.",0,20,20,23,3,false,59,[4,4281413293]],[114,3,1.1,29],[34,64],[52,"Chơi trò chơi trong Khu Săn Măng Cụt không tốn tí \"vốn\" Măng Cụt nào, mỗi Vé được 1 lượt chơi miễn phí. Bạn có thể kiếm thêm Vé bằng cách lắc xúc xắc.",0,26,26,33,3,false,67,[4,4281081968]],[7,"CÀI ĐẶT",36,36,false,-2,true,44],[51,"999999",25,25,true,83,[4,4285852159]],[125,"3600",100,100,100,true,32,[4,4285852159]],[151,0,1,33.387888707037646,1,5.5,6,1073741824,90,[4,4278190080]],[69,"Cube",33,[[36,0,-341,[52],[13],53]],[3,6.617444900424222e-24,1,4.052016357919249e-40,6.123233995736766e-17],[1,50,50,50],[1,0,180,7.583033279093544e-22]],[70,"shadow",33,[[36,0,-342,[54],[13],55]],[1,0.204,-0.493,-0.009],[3,-0.5000000000000001,0.4999999999999999,-0.5,-0.5],[1,50,50,50],[1,-270,-90,0]],[89,"Particle",23,[94],[1,0,0.5,0],[3,0.25881904510252074,0,0,0.9659258262890683],[1,0.3,0.3,0.3],[1,30,0,0]],[71,"PlatformGrp","f9sELZ8D5BnrcJo59nblHv",4],[42,"DecoMgr","9fOobR26hEZ5VHqmOyRQJ8",4,[[152,-343,79]]]],0,[0,0,1,0,0,1,0,0,1,0,16,112,0,17,111,0,18,20,0,19,17,0,20,6,0,21,5,0,22,9,0,23,108,0,24,109,0,25,110,0,0,1,0,-1,43,0,-2,62,0,-3,63,0,-4,64,0,-5,9,0,-6,67,0,-7,5,0,-8,6,0,-9,17,0,-10,20,0,0,2,0,0,2,0,0,2,0,-1,34,0,-2,35,0,-3,36,0,-4,7,0,-5,8,0,-6,56,0,-7,57,0,-8,39,0,-9,27,0,-10,28,0,-11,29,0,-12,30,0,0,3,0,26,99,0,0,3,0,0,3,0,27,61,0,28,107,0,29,61,0,30,113,0,-1,102,0,-2,103,0,-1,26,0,-2,40,0,-3,42,0,31,104,0,32,101,0,33,100,0,34,106,0,35,105,0,36,28,0,37,6,0,0,3,0,-1,24,0,-2,52,0,-1,23,0,-1,96,0,-2,97,0,-4,91,0,-5,33,0,-6,93,0,-7,118,0,-8,117,0,0,5,0,-1,44,0,-2,10,0,-3,12,0,-4,14,0,-5,15,0,0,6,0,-1,49,0,-2,31,0,-3,16,0,-4,32,0,0,7,0,0,7,0,0,7,0,0,7,0,-1,53,0,-2,25,0,0,8,0,0,8,0,0,8,0,0,8,0,-1,54,0,-2,55,0,0,9,0,0,9,0,-1,65,0,-2,66,0,0,10,0,0,10,0,-1,69,0,-2,70,0,-3,11,0,0,11,0,0,11,0,0,11,0,-1,45,0,-2,46,0,0,12,0,0,12,0,-1,73,0,-2,74,0,-3,13,0,0,13,0,0,13,0,0,13,0,-1,47,0,-2,48,0,0,14,0,0,14,0,8,14,0,0,14,0,-1,77,0,0,15,0,0,15,0,8,15,0,0,15,0,-1,78,0,0,16,0,0,16,0,8,16,0,0,16,0,-1,81,0,0,17,0,-1,50,0,-2,18,0,-3,19,0,0,18,0,0,18,0,8,18,0,0,18,0,-1,85,0,0,19,0,0,19,0,8,19,0,0,19,0,-1,86,0,0,20,0,-1,51,0,-2,21,0,-3,22,0,0,21,0,0,21,0,8,21,0,0,21,0,-1,88,0,0,22,0,0,22,0,8,22,0,0,22,0,-1,89,0,3,23,0,12,95,0,3,23,0,12,95,0,12,95,0,-1,116,0,10,23,0,0,24,0,0,24,0,0,24,0,-1,98,0,0,25,0,0,25,0,-1,37,0,-2,38,0,0,26,0,0,26,0,-1,41,0,0,27,0,0,27,0,-1,58,0,-2,59,0,0,28,0,0,28,0,-1,60,0,0,29,0,0,29,0,-3,107,0,0,29,0,0,30,0,0,30,0,-3,61,0,0,30,0,0,31,0,0,31,0,0,31,0,-1,80,0,0,32,0,-2,112,0,-1,82,0,-2,83,0,14,92,0,0,33,0,-1,114,0,-2,115,0,-3,92,0,0,34,0,0,34,0,0,34,0,0,35,0,0,35,0,0,35,0,0,36,0,0,36,0,0,36,0,0,37,0,0,37,0,0,37,0,0,38,0,0,38,0,0,38,0,-1,40,0,-3,42,0,0,40,0,0,40,0,0,41,0,-2,104,0,0,41,0,0,42,0,0,42,0,0,43,0,0,43,0,0,43,0,0,44,0,-2,110,0,-1,68,0,0,45,0,0,45,0,-1,71,0,0,46,0,0,46,0,-1,72,0,0,47,0,0,47,0,-1,75,0,0,48,0,0,48,0,-1,76,0,0,49,0,0,49,0,-1,79,0,0,50,0,0,50,0,-1,84,0,0,51,0,0,51,0,-1,87,0,-1,99,0,0,53,0,-2,100,0,0,54,0,0,54,0,0,55,0,-2,101,0,0,56,0,-2,102,0,0,57,0,-2,103,0,0,58,0,-2,105,0,0,59,0,-2,106,0,0,60,0,0,60,0,0,62,0,0,62,0,0,63,0,0,63,0,0,64,0,-2,108,0,0,65,0,0,65,0,0,66,0,0,66,0,0,67,0,-2,109,0,0,68,0,0,68,0,0,69,0,0,69,0,0,70,0,0,70,0,0,71,0,0,71,0,0,72,0,0,72,0,0,73,0,0,73,0,0,74,0,0,74,0,0,75,0,0,75,0,0,76,0,0,76,0,0,77,0,0,77,0,0,78,0,0,78,0,0,79,0,0,79,0,0,80,0,0,80,0,0,81,0,0,81,0,0,82,0,0,82,0,0,83,0,-2,111,0,0,84,0,0,84,0,0,85,0,0,85,0,0,86,0,0,86,0,0,87,0,0,87,0,0,88,0,0,88,0,0,89,0,0,89,0,-1,113,0,0,91,0,0,92,0,38,117,0,39,94,0,0,93,0,40,94,0,0,96,0,0,97,0,0,98,0,0,114,0,0,115,0,0,118,0,41,4,1,2,3,2,2,3,3,2,4,23,2,93,26,2,39,90,2,91,94,0,116,343],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,103,104,105,106,107,61,109],[1,1,1,1,1,1,1,1,1,1,1,1,1,6,1,1,1,1,1,1,6,1,1,1,1,1,1,4,1,1,1,1,4,1,4,1,4,1,1,4,1,4,1,1,4,1,4,1,1,4,1,4,-1,7,-1,7,-1,-2,-3,7,-1,-2,-3,-4,42,-1,43,44,3,3,3,3,3,3,3,3,3,3,45,46,6,6,6,6,6,4,4,6],[9,37,10,10,11,11,38,39,40,41,42,43,44,12,13,14,9,45,46,47,48,49,5,50,15,16,3,3,51,15,16,3,3,0,0,1,1,52,4,4,4,4,5,0,0,1,1,5,0,0,1,1,17,18,19,20,21,22,23,24,25,26,27,28,53,29,29,8,30,54,55,56,57,58,59,31,31,30,60,61,32,32,62,12,33,13,14,33]],[[[21,".bin",4171141712,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":912,"length":180,"count":45,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":912,"count":19,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.012999999336898327,-0.009999999776482582,-0.009999999776482582],"maxPosition",8,[1,0.009999999776482582,0.0139999995008111,-0.009999999776482582]]],-1],0,0,[],[],[]],[[[21,".bin",2738388246,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1248,"length":168,"count":42,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":1248,"count":26,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.009999999776482582,0,-0.009999999776482582],"maxPosition",8,[1,0.009999999776482582,0.017000000923871994,0.009999999776482582]]],-1],0,0,[],[],[]],[[[27,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"metallic":0},"mainColor",8,[4,4291611852],"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[9,5],[63,2]],[[[27,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{},{},{}],[[[{"metallic":0},"mainColor",8,[4,1962943041]],{},{}],11,0,0]]],0,0,[0],[5],[2]],[[[57,"platform"],[72,"platform",[-4,-5,-6],[[127,-3,[14,"f2dSY+2KtJiq6vcWx8SGwa"],[8,9,10,11],[12,13,14,15],-2]],[2,"8dFNCFe85Kapzkq789yBCg",-1,0],[1,0,50,0]],[73,"mangosteen",false,1,[[37,0,-7,[14,"1aIG6DshlNTJxFqjtW2ZCN"],[4,5,6],[13],7]],[2,"abHnp5UexC6IYyMxjbcOKG",1,0],[1,0,1.15,0],[3,-0.42261826174069944,0,0,0.9063077870366499],[1,20,20,20],[1,-50,0,0]],[74,"Cube",1,[[37,0,-8,[14,"5dL+KLgIJBOYtsZS2u/epv"],[0],[13],1]],[2,"f8K81prwJPtZh0RAamBca5",1,0],[3,6.617444900424222e-24,1,4.052016357919249e-40,6.123233995736766e-17],[1,50,50,50],[1,0,180,7.583033279093544e-22]],[75,"shadow",1,[[37,0,-9,[14,"8563MDYShMWLcuPun/nNQA"],[2],[13],3]],[2,"75HC2OW2tJgZXfhRE/4rXN",1,0],[1,0.204,-0.493,-0.009],[3,-0.5000000000000001,0.4999999999999999,-0.5,-0.5],[1,50,50,50],[1,-270,-90,0]]],0,[0,10,1,0,14,2,0,0,1,0,-1,3,0,-2,4,0,-3,2,0,0,2,0,0,3,0,0,4,0,13,1,9],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,7,-1,7,-1,-2,-3,7,-1,-2,-3,-4,-1,-2,-3,-4],[17,18,19,20,21,22,23,24,25,26,27,28,64,65,66,67]],[[[26,"Bungee-number",75,{"commonHeight":88,"fontSize":75,"atlasName":"Bungee-number.png","fontDefDictionary":{"0":{"xOffset":2,"yOffset":10,"xAdvance":73,"rect":{"x":138,"y":67,"width":71,"height":70}},"10":{"xOffset":-5,"yOffset":0,"xAdvance":-2,"rect":{"x":0,"y":0,"width":0,"height":0}},"32":{"xOffset":-5,"yOffset":0,"xAdvance":15,"rect":{"x":0,"y":0,"width":0,"height":0}},"43":{"xOffset":0,"yOffset":17,"xAdvance":53,"rect":{"x":52,"y":67,"width":55,"height":55}},"46":{"xOffset":-1,"yOffset":45,"xAdvance":27,"rect":{"x":107,"y":67,"width":31,"height":32}},"48":{"xOffset":-1,"yOffset":11,"xAdvance":53,"rect":{"x":57,"y":0,"width":57,"height":67}},"49":{"xOffset":-2,"yOffset":12,"xAdvance":43,"rect":{"x":224,"y":0,"width":50,"height":65}},"50":{"xOffset":-2,"yOffset":12,"xAdvance":46,"rect":{"x":274,"y":0,"width":52,"height":65}},"51":{"xOffset":-2,"yOffset":12,"xAdvance":46,"rect":{"x":326,"y":0,"width":52,"height":65}},"52":{"xOffset":-1,"yOffset":12,"xAdvance":51,"rect":{"x":378,"y":0,"width":55,"height":65}},"53":{"xOffset":-1,"yOffset":12,"xAdvance":47,"rect":{"x":433,"y":0,"width":52,"height":65}},"54":{"xOffset":-1,"yOffset":12,"xAdvance":50,"rect":{"x":114,"y":0,"width":55,"height":66}},"55":{"xOffset":-3,"yOffset":12,"xAdvance":45,"rect":{"x":0,"y":67,"width":52,"height":65}},"56":{"xOffset":-2,"yOffset":11,"xAdvance":51,"rect":{"x":0,"y":0,"width":57,"height":67}},"57":{"xOffset":-2,"yOffset":11,"xAdvance":50,"rect":{"x":169,"y":0,"width":55,"height":66}}},"kerningDict":{"2818097":-1,"2818099":-1,"2818103":-1,"2818104":-1,"3014688":-1,"3014708":-1,"3014711":-1,"3014713":-1,"3211307":-1,"3211316":-2,"3342388":-1,"3342391":-1,"3473463":-1,"3538996":-1,"3538999":-1,"3604526":-3,"3670059":-1,"3670067":-1,"3670068":-1,"3670071":-1}}]],0,0,[0],[11],[68]],[[[26,"Rowdies",32,{"commonHeight":40,"fontSize":32,"atlasName":"Rowdies.png","fontDefDictionary":{"10":{"xOffset":0,"yOffset":0,"xAdvance":0,"rect":{"x":0,"y":0,"width":0,"height":0}},"32":{"xOffset":-2,"yOffset":31,"xAdvance":10,"rect":{"x":0,"y":0,"width":0,"height":0}},"33":{"xOffset":0,"yOffset":6,"xAdvance":13,"rect":{"x":323,"y":147,"width":11,"height":27}},"34":{"xOffset":-2,"yOffset":4,"xAdvance":13,"rect":{"x":17,"y":281,"width":14,"height":13}},"35":{"xOffset":0,"yOffset":7,"xAdvance":32,"rect":{"x":347,"y":230,"width":30,"height":26}},"36":{"xOffset":0,"yOffset":7,"xAdvance":25,"rect":{"x":210,"y":147,"width":24,"height":28}},"37":{"xOffset":0,"yOffset":7,"xAdvance":32,"rect":{"x":317,"y":230,"width":30,"height":26}},"38":{"xOffset":0,"yOffset":7,"xAdvance":28,"rect":{"x":377,"y":230,"width":28,"height":26}},"39":{"xOffset":-2,"yOffset":4,"xAdvance":8,"rect":{"x":31,"y":281,"width":9,"height":13}},"40":{"xOffset":-1,"yOffset":5,"xAdvance":12,"rect":{"x":496,"y":114,"width":13,"height":31}},"41":{"xOffset":-2,"yOffset":5,"xAdvance":12,"rect":{"x":89,"y":147,"width":13,"height":31}},"42":{"xOffset":-1,"yOffset":7,"xAdvance":13,"rect":{"x":57,"y":281,"width":13,"height":11}},"43":{"xOffset":0,"yOffset":14,"xAdvance":19,"rect":{"x":0,"y":281,"width":17,"height":16}},"44":{"xOffset":-1,"yOffset":25,"xAdvance":11,"rect":{"x":451,"y":256,"width":11,"height":16}},"45":{"xOffset":0,"yOffset":20,"xAdvance":16,"rect":{"x":122,"y":281,"width":14,"height":6}},"46":{"xOffset":-1,"yOffset":25,"xAdvance":11,"rect":{"x":95,"y":281,"width":11,"height":9}},"47":{"xOffset":-2,"yOffset":7,"xAdvance":15,"rect":{"x":153,"y":147,"width":18,"height":29}},"48":{"xOffset":-1,"yOffset":7,"xAdvance":22,"rect":{"x":265,"y":230,"width":22,"height":26}},"49":{"xOffset":-1,"yOffset":7,"xAdvance":14,"rect":{"x":493,"y":204,"width":13,"height":26}},"50":{"xOffset":-1,"yOffset":7,"xAdvance":20,"rect":{"x":93,"y":230,"width":20,"height":26}},"51":{"xOffset":-1,"yOffset":7,"xAdvance":20,"rect":{"x":113,"y":230,"width":20,"height":26}},"52":{"xOffset":-1,"yOffset":7,"xAdvance":25,"rect":{"x":133,"y":230,"width":25,"height":26}},"53":{"xOffset":-1,"yOffset":7,"xAdvance":21,"rect":{"x":158,"y":230,"width":21,"height":26}},"54":{"xOffset":-1,"yOffset":7,"xAdvance":22,"rect":{"x":179,"y":230,"width":22,"height":26}},"55":{"xOffset":-1,"yOffset":7,"xAdvance":20,"rect":{"x":201,"y":230,"width":20,"height":26}},"56":{"xOffset":-1,"yOffset":7,"xAdvance":22,"rect":{"x":221,"y":230,"width":22,"height":26}},"57":{"xOffset":-1,"yOffset":7,"xAdvance":22,"rect":{"x":243,"y":230,"width":22,"height":26}},"58":{"xOffset":-1,"yOffset":15,"xAdvance":11,"rect":{"x":497,"y":230,"width":11,"height":19}},"59":{"xOffset":-1,"yOffset":15,"xAdvance":11,"rect":{"x":306,"y":230,"width":11,"height":26}},"60":{"xOffset":-3,"yOffset":14,"xAdvance":16,"rect":{"x":462,"y":256,"width":18,"height":16}},"61":{"xOffset":0,"yOffset":17,"xAdvance":19,"rect":{"x":40,"y":281,"width":17,"height":11}},"62":{"xOffset":0,"yOffset":14,"xAdvance":19,"rect":{"x":480,"y":256,"width":18,"height":16}},"63":{"xOffset":-1,"yOffset":7,"xAdvance":19,"rect":{"x":287,"y":230,"width":19,"height":26}},"64":{"xOffset":-1,"yOffset":7,"xAdvance":31,"rect":{"x":102,"y":147,"width":31,"height":31}},"65":{"xOffset":-2,"yOffset":7,"xAdvance":25,"rect":{"x":334,"y":147,"width":26,"height":26}},"66":{"xOffset":0,"yOffset":7,"xAdvance":25,"rect":{"x":360,"y":147,"width":24,"height":26}},"67":{"xOffset":-1,"yOffset":7,"xAdvance":23,"rect":{"x":384,"y":147,"width":23,"height":26}},"68":{"xOffset":0,"yOffset":7,"xAdvance":25,"rect":{"x":407,"y":147,"width":24,"height":26}},"69":{"xOffset":0,"yOffset":7,"xAdvance":22,"rect":{"x":431,"y":147,"width":23,"height":26}},"70":{"xOffset":0,"yOffset":7,"xAdvance":21,"rect":{"x":454,"y":147,"width":22,"height":26}},"71":{"xOffset":-1,"yOffset":7,"xAdvance":24,"rect":{"x":476,"y":147,"width":24,"height":26}},"72":{"xOffset":-1,"yOffset":7,"xAdvance":24,"rect":{"x":0,"y":178,"width":23,"height":26}},"73":{"xOffset":-1,"yOffset":7,"xAdvance":10,"rect":{"x":500,"y":147,"width":10,"height":26}},"74":{"xOffset":-2,"yOffset":7,"xAdvance":19,"rect":{"x":23,"y":178,"width":20,"height":26}},"75":{"xOffset":0,"yOffset":7,"xAdvance":25,"rect":{"x":43,"y":178,"width":24,"height":26}},"76":{"xOffset":0,"yOffset":7,"xAdvance":22,"rect":{"x":67,"y":178,"width":22,"height":26}},"77":{"xOffset":0,"yOffset":7,"xAdvance":31,"rect":{"x":89,"y":178,"width":29,"height":26}},"78":{"xOffset":0,"yOffset":7,"xAdvance":25,"rect":{"x":118,"y":178,"width":24,"height":26}},"79":{"xOffset":-1,"yOffset":7,"xAdvance":23,"rect":{"x":142,"y":178,"width":23,"height":26}},"80":{"xOffset":0,"yOffset":7,"xAdvance":22,"rect":{"x":165,"y":178,"width":21,"height":26}},"81":{"xOffset":-1,"yOffset":7,"xAdvance":24,"rect":{"x":180,"y":114,"width":26,"height":32}},"82":{"xOffset":0,"yOffset":7,"xAdvance":23,"rect":{"x":186,"y":178,"width":23,"height":26}},"83":{"xOffset":-1,"yOffset":7,"xAdvance":20,"rect":{"x":209,"y":178,"width":20,"height":26}},"84":{"xOffset":-1,"yOffset":7,"xAdvance":22,"rect":{"x":229,"y":178,"width":23,"height":26}},"85":{"xOffset":0,"yOffset":7,"xAdvance":23,"rect":{"x":252,"y":178,"width":22,"height":26}},"86":{"xOffset":-1,"yOffset":7,"xAdvance":23,"rect":{"x":274,"y":178,"width":23,"height":26}},"87":{"xOffset":-1,"yOffset":7,"xAdvance":37,"rect":{"x":297,"y":178,"width":37,"height":26}},"88":{"xOffset":-2,"yOffset":7,"xAdvance":23,"rect":{"x":334,"y":178,"width":25,"height":26}},"89":{"xOffset":-1,"yOffset":7,"xAdvance":23,"rect":{"x":359,"y":178,"width":23,"height":26}},"90":{"xOffset":-1,"yOffset":7,"xAdvance":22,"rect":{"x":382,"y":178,"width":22,"height":26}},"91":{"xOffset":-1,"yOffset":4,"xAdvance":10,"rect":{"x":495,"y":42,"width":10,"height":34}},"92":{"xOffset":-2,"yOffset":7,"xAdvance":15,"rect":{"x":171,"y":147,"width":18,"height":29}},"93":{"xOffset":-2,"yOffset":4,"xAdvance":9,"rect":{"x":305,"y":80,"width":10,"height":34}},"94":{"xOffset":-1,"yOffset":7,"xAdvance":16,"rect":{"x":70,"y":281,"width":15,"height":10}},"95":{"xOffset":-1,"yOffset":33,"xAdvance":19,"rect":{"x":136,"y":281,"width":19,"height":4}},"96":{"xOffset":-1,"yOffset":7,"xAdvance":9,"rect":{"x":85,"y":281,"width":10,"height":9}},"97":{"xOffset":-1,"yOffset":15,"xAdvance":20,"rect":{"x":181,"y":256,"width":20,"height":18}},"98":{"xOffset":-1,"yOffset":7,"xAdvance":19,"rect":{"x":404,"y":178,"width":20,"height":26}},"99":{"xOffset":-1,"yOffset":15,"xAdvance":18,"rect":{"x":201,"y":256,"width":18,"height":18}},"100":{"xOffset":-1,"yOffset":7,"xAdvance":20,"rect":{"x":424,"y":178,"width":20,"height":26}},"101":{"xOffset":-1,"yOffset":15,"xAdvance":18,"rect":{"x":219,"y":256,"width":18,"height":18}},"102":{"xOffset":-2,"yOffset":6,"xAdvance":15,"rect":{"x":234,"y":147,"width":19,"height":27}},"103":{"xOffset":-1,"yOffset":15,"xAdvance":19,"rect":{"x":444,"y":178,"width":19,"height":26}},"104":{"xOffset":-1,"yOffset":7,"xAdvance":20,"rect":{"x":463,"y":178,"width":21,"height":26}},"105":{"xOffset":-2,"yOffset":6,"xAdvance":10,"rect":{"x":253,"y":147,"width":12,"height":27}},"106":{"xOffset":-3,"yOffset":6,"xAdvance":14,"rect":{"x":494,"y":0,"width":16,"height":35}},"107":{"xOffset":-1,"yOffset":7,"xAdvance":20,"rect":{"x":484,"y":178,"width":21,"height":26}},"108":{"xOffset":-1,"yOffset":7,"xAdvance":10,"rect":{"x":0,"y":204,"width":10,"height":26}},"109":{"xOffset":-1,"yOffset":15,"xAdvance":30,"rect":{"x":237,"y":256,"width":30,"height":18}},"110":{"xOffset":-1,"yOffset":15,"xAdvance":20,"rect":{"x":267,"y":256,"width":21,"height":18}},"111":{"xOffset":-1,"yOffset":15,"xAdvance":19,"rect":{"x":288,"y":256,"width":19,"height":18}},"112":{"xOffset":-1,"yOffset":15,"xAdvance":19,"rect":{"x":10,"y":204,"width":20,"height":26}},"113":{"xOffset":-1,"yOffset":15,"xAdvance":19,"rect":{"x":30,"y":204,"width":20,"height":26}},"114":{"xOffset":-1,"yOffset":15,"xAdvance":16,"rect":{"x":307,"y":256,"width":17,"height":18}},"115":{"xOffset":-1,"yOffset":15,"xAdvance":16,"rect":{"x":324,"y":256,"width":16,"height":18}},"116":{"xOffset":-1,"yOffset":10,"xAdvance":15,"rect":{"x":122,"y":256,"width":15,"height":23}},"117":{"xOffset":-1,"yOffset":15,"xAdvance":19,"rect":{"x":340,"y":256,"width":20,"height":18}},"118":{"xOffset":-2,"yOffset":15,"xAdvance":18,"rect":{"x":360,"y":256,"width":20,"height":18}},"119":{"xOffset":-2,"yOffset":15,"xAdvance":31,"rect":{"x":380,"y":256,"width":33,"height":18}},"120":{"xOffset":-2,"yOffset":15,"xAdvance":18,"rect":{"x":413,"y":256,"width":20,"height":18}},"121":{"xOffset":-4,"yOffset":15,"xAdvance":18,"rect":{"x":50,"y":204,"width":22,"height":26}},"122":{"xOffset":-1,"yOffset":15,"xAdvance":18,"rect":{"x":433,"y":256,"width":18,"height":18}},"123":{"xOffset":-2,"yOffset":4,"xAdvance":11,"rect":{"x":315,"y":80,"width":13,"height":34}},"124":{"xOffset":1,"yOffset":7,"xAdvance":12,"rect":{"x":501,"y":80,"width":8,"height":29}},"125":{"xOffset":-2,"yOffset":4,"xAdvance":11,"rect":{"x":328,"y":80,"width":13,"height":34}},"126":{"xOffset":-1,"yOffset":19,"xAdvance":15,"rect":{"x":106,"y":281,"width":16,"height":7}},"192":{"xOffset":-2,"yOffset":-1,"xAdvance":25,"rect":{"x":184,"y":42,"width":26,"height":34}},"193":{"xOffset":-2,"yOffset":0,"xAdvance":25,"rect":{"x":367,"y":80,"width":26,"height":33}},"194":{"xOffset":-2,"yOffset":1,"xAdvance":25,"rect":{"x":299,"y":114,"width":26,"height":32}},"195":{"xOffset":-2,"yOffset":0,"xAdvance":25,"rect":{"x":341,"y":80,"width":26,"height":33}},"200":{"xOffset":0,"yOffset":-1,"xAdvance":22,"rect":{"x":236,"y":42,"width":23,"height":34}},"201":{"xOffset":0,"yOffset":0,"xAdvance":22,"rect":{"x":455,"y":80,"width":23,"height":33}},"202":{"xOffset":0,"yOffset":0,"xAdvance":22,"rect":{"x":478,"y":80,"width":23,"height":33}},"204":{"xOffset":-2,"yOffset":-1,"xAdvance":10,"rect":{"x":323,"y":42,"width":11,"height":34}},"205":{"xOffset":-1,"yOffset":0,"xAdvance":11,"rect":{"x":34,"y":114,"width":11,"height":33}},"210":{"xOffset":-1,"yOffset":-2,"xAdvance":23,"rect":{"x":38,"y":42,"width":23,"height":35}},"211":{"xOffset":-1,"yOffset":-1,"xAdvance":23,"rect":{"x":381,"y":42,"width":23,"height":34}},"212":{"xOffset":-1,"yOffset":-1,"xAdvance":23,"rect":{"x":427,"y":42,"width":23,"height":34}},"213":{"xOffset":-1,"yOffset":-1,"xAdvance":23,"rect":{"x":358,"y":42,"width":23,"height":34}},"217":{"xOffset":0,"yOffset":-1,"xAdvance":23,"rect":{"x":52,"y":80,"width":22,"height":34}},"218":{"xOffset":0,"yOffset":-1,"xAdvance":23,"rect":{"x":74,"y":80,"width":22,"height":34}},"221":{"xOffset":-1,"yOffset":0,"xAdvance":23,"rect":{"x":157,"y":114,"width":23,"height":33}},"224":{"xOffset":-1,"yOffset":7,"xAdvance":20,"rect":{"x":72,"y":204,"width":20,"height":26}},"225":{"xOffset":-1,"yOffset":7,"xAdvance":20,"rect":{"x":112,"y":204,"width":20,"height":26}},"226":{"xOffset":-1,"yOffset":8,"xAdvance":20,"rect":{"x":425,"y":230,"width":20,"height":25}},"227":{"xOffset":-1,"yOffset":8,"xAdvance":20,"rect":{"x":405,"y":230,"width":20,"height":25}},"232":{"xOffset":-1,"yOffset":7,"xAdvance":18,"rect":{"x":199,"y":204,"width":18,"height":26}},"233":{"xOffset":-1,"yOffset":7,"xAdvance":18,"rect":{"x":217,"y":204,"width":18,"height":26}},"234":{"xOffset":-1,"yOffset":8,"xAdvance":18,"rect":{"x":463,"y":230,"width":18,"height":25}},"236":{"xOffset":-2,"yOffset":7,"xAdvance":9,"rect":{"x":253,"y":204,"width":11,"height":26}},"237":{"xOffset":-1,"yOffset":7,"xAdvance":9,"rect":{"x":277,"y":204,"width":11,"height":26}},"242":{"xOffset":-1,"yOffset":7,"xAdvance":19,"rect":{"x":288,"y":204,"width":19,"height":26}},"243":{"xOffset":-1,"yOffset":7,"xAdvance":19,"rect":{"x":307,"y":204,"width":19,"height":26}},"244":{"xOffset":-1,"yOffset":8,"xAdvance":19,"rect":{"x":19,"y":256,"width":19,"height":25}},"245":{"xOffset":-1,"yOffset":8,"xAdvance":19,"rect":{"x":0,"y":256,"width":19,"height":25}},"249":{"xOffset":-1,"yOffset":7,"xAdvance":19,"rect":{"x":413,"y":204,"width":20,"height":26}},"250":{"xOffset":-1,"yOffset":7,"xAdvance":19,"rect":{"x":453,"y":204,"width":20,"height":26}},"253":{"xOffset":-4,"yOffset":7,"xAdvance":18,"rect":{"x":260,"y":80,"width":22,"height":34}},"258":{"xOffset":-2,"yOffset":1,"xAdvance":25,"rect":{"x":232,"y":114,"width":27,"height":32}},"259":{"xOffset":-1,"yOffset":9,"xAdvance":20,"rect":{"x":102,"y":256,"width":20,"height":24}},"272":{"xOffset":-2,"yOffset":7,"xAdvance":25,"rect":{"x":173,"y":204,"width":26,"height":26}},"273":{"xOffset":-1,"yOffset":7,"xAdvance":20,"rect":{"x":152,"y":204,"width":21,"height":26}},"296":{"xOffset":-4,"yOffset":0,"xAdvance":11,"rect":{"x":18,"y":114,"width":16,"height":33}},"297":{"xOffset":-4,"yOffset":8,"xAdvance":10,"rect":{"x":481,"y":230,"width":16,"height":25}},"360":{"xOffset":0,"yOffset":0,"xAdvance":23,"rect":{"x":64,"y":114,"width":22,"height":33}},"361":{"xOffset":-1,"yOffset":8,"xAdvance":19,"rect":{"x":59,"y":256,"width":20,"height":25}},"416":{"xOffset":-1,"yOffset":7,"xAdvance":24,"rect":{"x":345,"y":204,"width":26,"height":26}},"417":{"xOffset":-1,"yOffset":13,"xAdvance":19,"rect":{"x":160,"y":256,"width":21,"height":20}},"431":{"xOffset":0,"yOffset":2,"xAdvance":23,"rect":{"x":40,"y":147,"width":26,"height":31}},"432":{"xOffset":-1,"yOffset":10,"xAdvance":19,"rect":{"x":137,"y":256,"width":23,"height":23}},"7840":{"xOffset":-2,"yOffset":7,"xAdvance":25,"rect":{"x":206,"y":114,"width":26,"height":32}},"7841":{"xOffset":-1,"yOffset":15,"xAdvance":20,"rect":{"x":132,"y":204,"width":20,"height":26}},"7842":{"xOffset":-2,"yOffset":-1,"xAdvance":25,"rect":{"x":210,"y":42,"width":26,"height":34}},"7843":{"xOffset":-1,"yOffset":7,"xAdvance":20,"rect":{"x":92,"y":204,"width":20,"height":26}},"7844":{"xOffset":-2,"yOffset":-7,"xAdvance":25,"rect":{"x":217,"y":0,"width":26,"height":40}},"7845":{"xOffset":-1,"yOffset":1,"xAdvance":20,"rect":{"x":365,"y":114,"width":20,"height":32}},"7846":{"xOffset":-2,"yOffset":-7,"xAdvance":25,"rect":{"x":191,"y":0,"width":26,"height":40}},"7847":{"xOffset":-1,"yOffset":1,"xAdvance":20,"rect":{"x":325,"y":114,"width":20,"height":32}},"7848":{"xOffset":-2,"yOffset":-8,"xAdvance":25,"rect":{"x":46,"y":0,"width":26,"height":41}},"7849":{"xOffset":-1,"yOffset":0,"xAdvance":20,"rect":{"x":393,"y":80,"width":20,"height":33}},"7850":{"xOffset":-2,"yOffset":-6,"xAdvance":25,"rect":{"x":366,"y":0,"width":26,"height":39}},"7851":{"xOffset":-1,"yOffset":1,"xAdvance":20,"rect":{"x":345,"y":114,"width":20,"height":32}},"7852":{"xOffset":-2,"yOffset":1,"xAdvance":25,"rect":{"x":0,"y":42,"width":26,"height":38}},"7853":{"xOffset":-1,"yOffset":8,"xAdvance":20,"rect":{"x":413,"y":80,"width":20,"height":33}},"7854":{"xOffset":-2,"yOffset":-6,"xAdvance":25,"rect":{"x":339,"y":0,"width":27,"height":39}},"7855":{"xOffset":-1,"yOffset":2,"xAdvance":20,"rect":{"x":20,"y":147,"width":20,"height":31}},"7856":{"xOffset":-2,"yOffset":-6,"xAdvance":25,"rect":{"x":312,"y":0,"width":27,"height":39}},"7857":{"xOffset":-1,"yOffset":2,"xAdvance":20,"rect":{"x":0,"y":147,"width":20,"height":31}},"7858":{"xOffset":-2,"yOffset":-7,"xAdvance":25,"rect":{"x":164,"y":0,"width":27,"height":40}},"7859":{"xOffset":-1,"yOffset":1,"xAdvance":20,"rect":{"x":259,"y":114,"width":20,"height":32}},"7860":{"xOffset":-2,"yOffset":-5,"xAdvance":25,"rect":{"x":440,"y":0,"width":27,"height":38}},"7861":{"xOffset":-1,"yOffset":3,"xAdvance":20,"rect":{"x":133,"y":147,"width":20,"height":30}},"7862":{"xOffset":-2,"yOffset":1,"xAdvance":25,"rect":{"x":467,"y":0,"width":27,"height":38}},"7863":{"xOffset":-1,"yOffset":9,"xAdvance":20,"rect":{"x":279,"y":114,"width":20,"height":32}},"7864":{"xOffset":0,"yOffset":7,"xAdvance":22,"rect":{"x":282,"y":42,"width":23,"height":34}},"7865":{"xOffset":-1,"yOffset":15,"xAdvance":18,"rect":{"x":235,"y":204,"width":18,"height":26}},"7866":{"xOffset":0,"yOffset":-1,"xAdvance":22,"rect":{"x":259,"y":42,"width":23,"height":34}},"7867":{"xOffset":-1,"yOffset":6,"xAdvance":18,"rect":{"x":265,"y":147,"width":18,"height":27}},"7868":{"xOffset":0,"yOffset":0,"xAdvance":22,"rect":{"x":433,"y":80,"width":22,"height":33}},"7869":{"xOffset":-1,"yOffset":8,"xAdvance":18,"rect":{"x":445,"y":230,"width":18,"height":25}},"7870":{"xOffset":0,"yOffset":-7,"xAdvance":22,"rect":{"x":266,"y":0,"width":23,"height":40}},"7871":{"xOffset":-1,"yOffset":1,"xAdvance":18,"rect":{"x":421,"y":114,"width":18,"height":32}},"7872":{"xOffset":0,"yOffset":-7,"xAdvance":22,"rect":{"x":243,"y":0,"width":23,"height":40}},"7873":{"xOffset":-1,"yOffset":1,"xAdvance":18,"rect":{"x":385,"y":114,"width":18,"height":32}},"7874":{"xOffset":0,"yOffset":-8,"xAdvance":22,"rect":{"x":72,"y":0,"width":23,"height":41}},"7875":{"xOffset":-1,"yOffset":-1,"xAdvance":18,"rect":{"x":305,"y":42,"width":18,"height":34}},"7876":{"xOffset":0,"yOffset":-6,"xAdvance":22,"rect":{"x":392,"y":0,"width":22,"height":39}},"7877":{"xOffset":-1,"yOffset":1,"xAdvance":18,"rect":{"x":403,"y":114,"width":18,"height":32}},"7878":{"xOffset":0,"yOffset":0,"xAdvance":22,"rect":{"x":95,"y":0,"width":23,"height":41}},"7879":{"xOffset":-1,"yOffset":8,"xAdvance":18,"rect":{"x":0,"y":114,"width":18,"height":33}},"7880":{"xOffset":-3,"yOffset":-1,"xAdvance":10,"rect":{"x":334,"y":42,"width":13,"height":34}},"7881":{"xOffset":-3,"yOffset":7,"xAdvance":9,"rect":{"x":264,"y":204,"width":13,"height":26}},"7882":{"xOffset":-1,"yOffset":7,"xAdvance":10,"rect":{"x":347,"y":42,"width":11,"height":34}},"7883":{"xOffset":-2,"yOffset":6,"xAdvance":10,"rect":{"x":26,"y":42,"width":12,"height":35}},"7884":{"xOffset":-1,"yOffset":7,"xAdvance":23,"rect":{"x":404,"y":42,"width":23,"height":34}},"7885":{"xOffset":-1,"yOffset":15,"xAdvance":19,"rect":{"x":326,"y":204,"width":19,"height":26}},"7886":{"xOffset":-1,"yOffset":-2,"xAdvance":23,"rect":{"x":61,"y":42,"width":23,"height":35}},"7887":{"xOffset":-1,"yOffset":6,"xAdvance":19,"rect":{"x":283,"y":147,"width":19,"height":27}},"7888":{"xOffset":-1,"yOffset":-8,"xAdvance":23,"rect":{"x":141,"y":0,"width":23,"height":41}},"7889":{"xOffset":-1,"yOffset":1,"xAdvance":19,"rect":{"x":477,"y":114,"width":19,"height":32}},"7890":{"xOffset":-1,"yOffset":-8,"xAdvance":23,"rect":{"x":118,"y":0,"width":23,"height":41}},"7891":{"xOffset":-1,"yOffset":1,"xAdvance":19,"rect":{"x":439,"y":114,"width":19,"height":32}},"7892":{"xOffset":-1,"yOffset":-9,"xAdvance":23,"rect":{"x":0,"y":0,"width":23,"height":42}},"7893":{"xOffset":-1,"yOffset":-1,"xAdvance":19,"rect":{"x":450,"y":42,"width":19,"height":34}},"7894":{"xOffset":-1,"yOffset":-7,"xAdvance":23,"rect":{"x":289,"y":0,"width":23,"height":40}},"7895":{"xOffset":-1,"yOffset":1,"xAdvance":19,"rect":{"x":458,"y":114,"width":19,"height":32}},"7896":{"xOffset":-1,"yOffset":-1,"xAdvance":23,"rect":{"x":23,"y":0,"width":23,"height":42}},"7897":{"xOffset":-1,"yOffset":8,"xAdvance":19,"rect":{"x":45,"y":114,"width":19,"height":33}},"7898":{"xOffset":-1,"yOffset":-1,"xAdvance":24,"rect":{"x":0,"y":80,"width":26,"height":34}},"7899":{"xOffset":-1,"yOffset":7,"xAdvance":19,"rect":{"x":392,"y":204,"width":21,"height":26}},"7900":{"xOffset":-1,"yOffset":-2,"xAdvance":24,"rect":{"x":84,"y":42,"width":26,"height":35}},"7901":{"xOffset":-1,"yOffset":7,"xAdvance":19,"rect":{"x":371,"y":204,"width":21,"height":26}},"7902":{"xOffset":-1,"yOffset":-2,"xAdvance":24,"rect":{"x":110,"y":42,"width":26,"height":35}},"7903":{"xOffset":-1,"yOffset":6,"xAdvance":19,"rect":{"x":302,"y":147,"width":21,"height":27}},"7904":{"xOffset":-1,"yOffset":-1,"xAdvance":24,"rect":{"x":469,"y":42,"width":26,"height":34}},"7905":{"xOffset":-1,"yOffset":8,"xAdvance":19,"rect":{"x":38,"y":256,"width":21,"height":25}},"7906":{"xOffset":-1,"yOffset":7,"xAdvance":24,"rect":{"x":26,"y":80,"width":26,"height":34}},"7907":{"xOffset":-1,"yOffset":13,"xAdvance":19,"rect":{"x":189,"y":147,"width":21,"height":28}},"7908":{"xOffset":0,"yOffset":7,"xAdvance":23,"rect":{"x":96,"y":80,"width":22,"height":34}},"7909":{"xOffset":-1,"yOffset":15,"xAdvance":19,"rect":{"x":473,"y":204,"width":20,"height":26}},"7910":{"xOffset":0,"yOffset":-2,"xAdvance":23,"rect":{"x":136,"y":42,"width":22,"height":35}},"7911":{"xOffset":-1,"yOffset":7,"xAdvance":19,"rect":{"x":433,"y":204,"width":20,"height":26}},"7912":{"xOffset":0,"yOffset":-1,"xAdvance":23,"rect":{"x":144,"y":80,"width":26,"height":34}},"7913":{"xOffset":-1,"yOffset":7,"xAdvance":19,"rect":{"x":46,"y":230,"width":23,"height":26}},"7914":{"xOffset":0,"yOffset":-1,"xAdvance":23,"rect":{"x":118,"y":80,"width":26,"height":34}},"7915":{"xOffset":-1,"yOffset":7,"xAdvance":19,"rect":{"x":0,"y":230,"width":23,"height":26}},"7916":{"xOffset":0,"yOffset":-2,"xAdvance":23,"rect":{"x":158,"y":42,"width":26,"height":35}},"7917":{"xOffset":-1,"yOffset":7,"xAdvance":19,"rect":{"x":23,"y":230,"width":23,"height":26}},"7918":{"xOffset":0,"yOffset":0,"xAdvance":23,"rect":{"x":86,"y":114,"width":26,"height":33}},"7919":{"xOffset":-1,"yOffset":8,"xAdvance":19,"rect":{"x":79,"y":256,"width":23,"height":25}},"7920":{"xOffset":0,"yOffset":2,"xAdvance":23,"rect":{"x":414,"y":0,"width":26,"height":39}},"7921":{"xOffset":-1,"yOffset":10,"xAdvance":19,"rect":{"x":66,"y":147,"width":23,"height":31}},"7922":{"xOffset":-1,"yOffset":-1,"xAdvance":23,"rect":{"x":192,"y":80,"width":23,"height":34}},"7923":{"xOffset":-4,"yOffset":7,"xAdvance":18,"rect":{"x":170,"y":80,"width":22,"height":34}},"7924":{"xOffset":-1,"yOffset":7,"xAdvance":23,"rect":{"x":282,"y":80,"width":23,"height":34}},"7925":{"xOffset":-4,"yOffset":15,"xAdvance":18,"rect":{"x":69,"y":230,"width":24,"height":26}},"7926":{"xOffset":-1,"yOffset":-1,"xAdvance":23,"rect":{"x":237,"y":80,"width":23,"height":34}},"7927":{"xOffset":-4,"yOffset":7,"xAdvance":18,"rect":{"x":215,"y":80,"width":22,"height":34}},"7928":{"xOffset":-1,"yOffset":0,"xAdvance":23,"rect":{"x":134,"y":114,"width":23,"height":33}},"7929":{"xOffset":-4,"yOffset":8,"xAdvance":18,"rect":{"x":112,"y":114,"width":22,"height":33}},"8217":{"xOffset":-1,"yOffset":4,"xAdvance":10,"rect":{"x":498,"y":256,"width":10,"height":14}}},"kerningDict":{"2949209":-2,"2949341":-2,"2957042":-2,"2957044":-2,"2957046":-2,"2957048":-2,"3407927":-1,"3604524":-2,"3604526":-2,"3604532":-1,"3604538":-2,"3604539":-2,"4259907":-1,"4259911":-1,"4259913":-1,"4259919":-1,"4259921":-1,"4259924":-3,"4259926":-2,"4259927":-2,"4259929":-3,"4259958":-1,"4259959":-1,"4259960":-1,"4260044":-1,"4260045":-1,"4260050":-1,"4260051":-1,"4260052":-1,"4260053":-1,"4260061":-3,"4260136":-1,"4260256":-1,"4267720":-1,"4267722":-1,"4267724":-1,"4267726":-1,"4267728":-1,"4267730":-1,"4267732":-1,"4267734":-1,"4267736":-1,"4267738":-1,"4267740":-1,"4267742":-1,"4267744":-1,"4267746":-1,"4267762":-3,"4267764":-3,"4267766":-3,"4267768":-3,"4456513":-1,"4456532":-1,"4456534":-1,"4456535":-1,"4456536":-1,"4456537":-1,"4456640":-1,"4456641":-1,"4456642":-1,"4456643":-1,"4456669":-1,"4456706":-1,"4464288":-1,"4464290":-1,"4464292":-1,"4464294":-1,"4464296":-1,"4464298":-1,"4464300":-1,"4464302":-1,"4464304":-1,"4464306":-1,"4464308":-1,"4464310":-1,"4464370":-1,"4464372":-1,"4464374":-1,"4464376":-1,"4522051":-1,"4522055":-1,"4522063":-1,"4522065":-1,"4522194":-1,"4522195":-1,"4522196":-1,"4522197":-1,"4522400":-1,"4529868":-1,"4529870":-1,"4529872":-1,"4529874":-1,"4529876":-1,"4529878":-1,"4529880":-1,"4529882":-1,"4529884":-1,"4529886":-1,"4529888":-1,"4529890":-1,"4587564":-3,"4587566":-3,"4587578":-3,"4587579":-3,"4587585":-3,"4587587":-1,"4587591":-1,"4587599":-1,"4587601":-1,"4587617":-2,"4587619":-1,"4587620":-1,"4587621":-1,"4587623":-1,"4587631":-1,"4587633":-1,"4587637":-1,"4587712":-3,"4587713":-3,"4587714":-3,"4587715":-3,"4587730":-1,"4587731":-1,"4587732":-1,"4587733":-1,"4587744":-2,"4587745":-2,"4587746":-2,"4587747":-2,"4587752":-1,"4587753":-1,"4587754":-1,"4587762":-1,"4587763":-1,"4587764":-1,"4587765":-1,"4587769":-1,"4587770":-1,"4587778":-3,"4587779":-2,"4587793":-1,"4587881":-1,"4587936":-1,"4587937":-1,"4587952":-1,"4595360":-3,"4595361":-2,"4595362":-3,"4595363":-2,"4595364":-3,"4595365":-2,"4595366":-3,"4595367":-2,"4595368":-3,"4595369":-2,"4595370":-3,"4595371":-2,"4595372":-3,"4595373":-2,"4595374":-3,"4595375":-2,"4595376":-3,"4595377":-2,"4595378":-3,"4595379":-2,"4595380":-3,"4595381":-2,"4595382":-3,"4595383":-2,"4595385":-1,"4595387":-1,"4595389":-1,"4595391":-1,"4595393":-1,"4595395":-1,"4595397":-1,"4595399":-1,"4595404":-1,"4595405":-1,"4595406":-1,"4595407":-1,"4595408":-1,"4595409":-1,"4595410":-1,"4595411":-1,"4595412":-1,"4595413":-1,"4595414":-1,"4595415":-1,"4595416":-1,"4595417":-1,"4595418":-1,"4595419":-1,"4595420":-1,"4595421":-1,"4595422":-1,"4595423":-1,"4595424":-1,"4595425":-1,"4595426":-1,"4595427":-1,"4595429":-1,"4595431":-1,"4595433":-1,"4595435":-1,"4595437":-1,"4595439":-1,"4595441":-1,"4849729":-1,"4849856":-1,"4849857":-1,"4849858":-1,"4849859":-1,"4849922":-1,"4857504":-1,"4857506":-1,"4857508":-1,"4857510":-1,"4857512":-1,"4857514":-1,"4857516":-1,"4857518":-1,"4857520":-1,"4857522":-1,"4857524":-1,"4857526":-1,"4915267":-1,"4915271":-1,"4915279":-1,"4915281":-1,"4915299":-1,"4915300":-1,"4915301":-1,"4915303":-1,"4915311":-1,"4915313":-1,"4915410":-1,"4915411":-1,"4915412":-1,"4915413":-1,"4915432":-1,"4915433":-1,"4915434":-1,"4915442":-1,"4915443":-1,"4915444":-1,"4915445":-1,"4915473":-1,"4915616":-1,"4915617":-1,"4923065":-1,"4923067":-1,"4923069":-1,"4923071":-1,"4923073":-1,"4923075":-1,"4923077":-1,"4923079":-1,"4923084":-1,"4923085":-1,"4923086":-1,"4923087":-1,"4923088":-1,"4923089":-1,"4923090":-1,"4923091":-1,"4923092":-1,"4923093":-1,"4923094":-1,"4923095":-1,"4923096":-1,"4923097":-1,"4923098":-1,"4923099":-1,"4923100":-1,"4923101":-1,"4923102":-1,"4923103":-1,"4923104":-1,"4923105":-1,"4923106":-1,"4923107":-1,"4980803":-1,"4980807":-1,"4980815":-1,"4980817":-1,"4980820":-4,"4980822":-3,"4980823":-3,"4980824":-1,"4980825":-4,"4980946":-1,"4980947":-1,"4980948":-1,"4980949":-1,"4980957":-4,"4981152":-1,"4988620":-1,"4988622":-1,"4988624":-1,"4988626":-1,"4988628":-1,"4988630":-1,"4988632":-1,"4988634":-1,"4988636":-1,"4988638":-1,"4988640":-1,"4988642":-1,"4988658":-4,"4988660":-4,"4988662":-4,"4988664":-4,"5177409":-1,"5177428":-1,"5177430":-1,"5177431":-1,"5177432":-1,"5177433":-1,"5177536":-1,"5177537":-1,"5177538":-1,"5177539":-1,"5177565":-1,"5177602":-1,"5185184":-1,"5185186":-1,"5185188":-1,"5185190":-1,"5185192":-1,"5185194":-1,"5185196":-1,"5185198":-1,"5185200":-1,"5185202":-1,"5185204":-1,"5185206":-1,"5185266":-1,"5185268":-1,"5185270":-1,"5185272":-1,"5242924":-4,"5242926":-4,"5242938":-4,"5242939":-4,"5242945":-1,"5242977":-1,"5242979":-1,"5242980":-1,"5242981":-1,"5242983":-1,"5242991":-1,"5242993":-1,"5243072":-1,"5243073":-1,"5243074":-1,"5243075":-1,"5243104":-1,"5243105":-1,"5243106":-1,"5243107":-1,"5243112":-1,"5243113":-1,"5243114":-1,"5243122":-1,"5243123":-1,"5243124":-1,"5243125":-1,"5243138":-1,"5243139":-1,"5243153":-1,"5243297":-1,"5250720":-1,"5250721":-1,"5250722":-1,"5250723":-1,"5250724":-1,"5250725":-1,"5250726":-1,"5250727":-1,"5250728":-1,"5250729":-1,"5250730":-1,"5250731":-1,"5250732":-1,"5250733":-1,"5250734":-1,"5250735":-1,"5250736":-1,"5250737":-1,"5250738":-1,"5250739":-1,"5250740":-1,"5250741":-1,"5250742":-1,"5250743":-1,"5250745":-1,"5250747":-1,"5250749":-1,"5250751":-1,"5250753":-1,"5250755":-1,"5250757":-1,"5250759":-1,"5250765":-1,"5250767":-1,"5250769":-1,"5250771":-1,"5250773":-1,"5250775":-1,"5250777":-1,"5250779":-1,"5250781":-1,"5250783":-1,"5250785":-1,"5250787":-1,"5308481":-1,"5308500":-1,"5308502":-1,"5308503":-1,"5308504":-1,"5308505":-1,"5308608":-1,"5308609":-1,"5308610":-1,"5308611":-1,"5308637":-1,"5308674":-1,"5316256":-1,"5316258":-1,"5316260":-1,"5316262":-1,"5316264":-1,"5316266":-1,"5316268":-1,"5316270":-1,"5316272":-1,"5316274":-1,"5316276":-1,"5316278":-1,"5316338":-1,"5316340":-1,"5316342":-1,"5316344":-1,"5374041":-1,"5374051":-1,"5374052":-1,"5374053":-1,"5374055":-1,"5374063":-1,"5374065":-1,"5374173":-1,"5374184":-1,"5374185":-1,"5374186":-1,"5374194":-1,"5374195":-1,"5374196":-1,"5374197":-1,"5374225":-1,"5374369":-1,"5381817":-1,"5381819":-1,"5381821":-1,"5381823":-1,"5381825":-1,"5381827":-1,"5381829":-1,"5381831":-1,"5381837":-1,"5381839":-1,"5381841":-1,"5381843":-1,"5381845":-1,"5381847":-1,"5381849":-1,"5381851":-1,"5381853":-1,"5381855":-1,"5381857":-1,"5381859":-1,"5381874":-1,"5381876":-1,"5381878":-1,"5381880":-1,"5505068":-2,"5505070":-2,"5505082":-2,"5505083":-2,"5505089":-3,"5505091":-1,"5505095":-1,"5505098":-3,"5505103":-1,"5505105":-1,"5505121":-3,"5505123":-3,"5505124":-3,"5505125":-3,"5505127":-3,"5505128":-1,"5505130":-1,"5505131":-1,"5505133":-1,"5505134":-1,"5505135":-3,"5505136":-1,"5505137":-3,"5505138":-1,"5505139":-1,"5505141":-1,"5505142":-1,"5505143":-1,"5505144":-1,"5505145":-2,"5505216":-3,"5505217":-3,"5505218":-3,"5505219":-3,"5505234":-1,"5505235":-1,"5505236":-1,"5505237":-1,"5505248":-3,"5505249":-3,"5505250":-3,"5505251":-3,"5505256":-3,"5505257":-3,"5505258":-3,"5505266":-3,"5505267":-3,"5505268":-3,"5505269":-3,"5505273":-1,"5505274":-1,"5505277":-2,"5505282":-3,"5505283":-3,"5505297":-3,"5505385":-1,"5505440":-1,"5505441":-3,"5505456":-1,"5512864":-3,"5512865":-3,"5512866":-3,"5512867":-3,"5512868":-3,"5512869":-3,"5512870":-3,"5512871":-3,"5512872":-3,"5512873":-3,"5512874":-3,"5512875":-3,"5512876":-3,"5512877":-3,"5512878":-3,"5512879":-3,"5512880":-3,"5512881":-3,"5512882":-3,"5512883":-3,"5512884":-3,"5512885":-3,"5512886":-3,"5512887":-3,"5512889":-3,"5512891":-3,"5512893":-3,"5512895":-3,"5512897":-3,"5512899":-3,"5512901":-3,"5512903":-3,"5512908":-1,"5512909":-3,"5512910":-1,"5512911":-3,"5512912":-1,"5512913":-3,"5512914":-1,"5512915":-3,"5512916":-1,"5512917":-3,"5512918":-1,"5512919":-3,"5512920":-1,"5512921":-3,"5512922":-1,"5512923":-3,"5512924":-1,"5512925":-3,"5512926":-1,"5512927":-3,"5512928":-1,"5512929":-3,"5512930":-1,"5512931":-3,"5512933":-1,"5512935":-1,"5512937":-1,"5512939":-1,"5512941":-1,"5512943":-1,"5512945":-1,"5512947":-2,"5512949":-2,"5512951":-2,"5512953":-2,"5636140":-3,"5636142":-3,"5636154":-3,"5636155":-3,"5636161":-2,"5636163":-1,"5636167":-1,"5636170":-3,"5636175":-1,"5636177":-1,"5636193":-2,"5636195":-2,"5636196":-2,"5636197":-2,"5636199":-2,"5636207":-2,"5636209":-2,"5636210":-1,"5636211":-2,"5636213":-1,"5636217":-1,"5636218":-1,"5636288":-2,"5636289":-2,"5636290":-2,"5636291":-2,"5636306":-1,"5636307":-1,"5636308":-1,"5636309":-1,"5636320":-2,"5636321":-2,"5636322":-2,"5636323":-2,"5636328":-2,"5636329":-2,"5636330":-2,"5636338":-2,"5636339":-2,"5636340":-2,"5636341":-2,"5636345":-1,"5636346":-1,"5636349":-1,"5636354":-2,"5636355":-2,"5636369":-2,"5636457":-1,"5636512":-1,"5636513":-2,"5636528":-1,"5643936":-2,"5643937":-2,"5643938":-2,"5643939":-2,"5643940":-2,"5643941":-2,"5643942":-2,"5643943":-2,"5643944":-2,"5643945":-2,"5643946":-2,"5643947":-2,"5643948":-2,"5643949":-2,"5643950":-2,"5643951":-2,"5643952":-2,"5643953":-2,"5643954":-2,"5643955":-2,"5643956":-2,"5643957":-2,"5643958":-2,"5643959":-2,"5643961":-2,"5643963":-2,"5643965":-2,"5643967":-2,"5643969":-2,"5643971":-2,"5643973":-2,"5643975":-2,"5643980":-1,"5643981":-2,"5643982":-1,"5643983":-2,"5643984":-1,"5643985":-2,"5643986":-1,"5643987":-2,"5643988":-1,"5643989":-2,"5643990":-1,"5643991":-2,"5643992":-1,"5643993":-2,"5643994":-1,"5643995":-2,"5643996":-1,"5643997":-2,"5643998":-1,"5643999":-2,"5644000":-1,"5644001":-2,"5644002":-1,"5644003":-2,"5644005":-1,"5644007":-1,"5644009":-1,"5644011":-1,"5644013":-1,"5644015":-1,"5644017":-1,"5644019":-1,"5644021":-1,"5644023":-1,"5644025":-1,"5701676":-3,"5701678":-3,"5701690":-3,"5701691":-3,"5701697":-2,"5701699":-1,"5701703":-1,"5701706":-3,"5701711":-1,"5701713":-1,"5701729":-2,"5701731":-2,"5701732":-2,"5701733":-2,"5701735":-2,"5701743":-2,"5701745":-2,"5701746":-1,"5701747":-2,"5701749":-1,"5701753":-1,"5701754":-1,"5701824":-2,"5701825":-2,"5701826":-2,"5701827":-2,"5701842":-1,"5701843":-1,"5701844":-1,"5701845":-1,"5701856":-2,"5701857":-2,"5701858":-2,"5701859":-2,"5701864":-2,"5701865":-2,"5701866":-2,"5701874":-2,"5701875":-2,"5701876":-2,"5701877":-2,"5701881":-1,"5701882":-1,"5701885":-1,"5701890":-2,"5701891":-2,"5701905":-2,"5701993":-1,"5702048":-1,"5702049":-2,"5702064":-1,"5709472":-2,"5709473":-2,"5709474":-2,"5709475":-2,"5709476":-2,"5709477":-2,"5709478":-2,"5709479":-2,"5709480":-2,"5709481":-2,"5709482":-2,"5709483":-2,"5709484":-2,"5709485":-2,"5709486":-2,"5709487":-2,"5709488":-2,"5709489":-2,"5709490":-2,"5709491":-2,"5709492":-2,"5709493":-2,"5709494":-2,"5709495":-2,"5709497":-2,"5709499":-2,"5709501":-2,"5709503":-2,"5709505":-2,"5709507":-2,"5709509":-2,"5709511":-2,"5709516":-1,"5709517":-2,"5709518":-1,"5709519":-2,"5709520":-1,"5709521":-2,"5709522":-1,"5709523":-2,"5709524":-1,"5709525":-2,"5709526":-1,"5709527":-2,"5709528":-1,"5709529":-2,"5709530":-1,"5709531":-2,"5709532":-1,"5709533":-2,"5709534":-1,"5709535":-2,"5709536":-1,"5709537":-2,"5709538":-1,"5709539":-2,"5709541":-1,"5709543":-1,"5709545":-1,"5709547":-1,"5709549":-1,"5709551":-1,"5709553":-1,"5709555":-1,"5709557":-1,"5709559":-1,"5709561":-1,"5767235":-1,"5767239":-1,"5767247":-1,"5767249":-1,"5767378":-1,"5767379":-1,"5767380":-1,"5767381":-1,"5767584":-1,"5775052":-1,"5775054":-1,"5775056":-1,"5775058":-1,"5775060":-1,"5775062":-1,"5775064":-1,"5775066":-1,"5775068":-1,"5775070":-1,"5775072":-1,"5775074":-1,"5832748":-4,"5832749":-2,"5832750":-4,"5832762":-4,"5832763":-4,"5832769":-3,"5832771":-1,"5832775":-1,"5832778":-3,"5832783":-1,"5832785":-1,"5832787":-1,"5832801":-3,"5832803":-3,"5832804":-3,"5832805":-3,"5832807":-3,"5832808":-2,"5832811":-2,"5832813":-2,"5832814":-2,"5832815":-3,"5832816":-2,"5832817":-3,"5832819":-3,"5832821":-2,"5832896":-3,"5832897":-3,"5832898":-3,"5832899":-3,"5832914":-1,"5832915":-1,"5832916":-1,"5832917":-1,"5832928":-3,"5832929":-3,"5832930":-3,"5832931":-3,"5832936":-3,"5832937":-3,"5832938":-3,"5832946":-3,"5832947":-3,"5832948":-3,"5832949":-3,"5832953":-2,"5832954":-2,"5832962":-3,"5832963":-3,"5832977":-3,"5833065":-2,"5833120":-1,"5833121":-3,"5833136":-2,"5840544":-3,"5840545":-3,"5840546":-3,"5840547":-3,"5840548":-3,"5840549":-3,"5840550":-3,"5840551":-3,"5840552":-3,"5840553":-3,"5840554":-3,"5840555":-3,"5840556":-3,"5840557":-3,"5840558":-3,"5840559":-3,"5840560":-3,"5840561":-3,"5840562":-3,"5840563":-3,"5840564":-3,"5840565":-3,"5840566":-3,"5840567":-3,"5840569":-3,"5840571":-3,"5840573":-3,"5840575":-3,"5840577":-3,"5840579":-3,"5840581":-3,"5840583":-3,"5840588":-1,"5840589":-3,"5840590":-1,"5840591":-3,"5840592":-1,"5840593":-3,"5840594":-1,"5840595":-3,"5840596":-1,"5840597":-3,"5840598":-1,"5840599":-3,"5840600":-1,"5840601":-3,"5840602":-1,"5840603":-3,"5840604":-1,"5840605":-3,"5840606":-1,"5840607":-3,"5840608":-1,"5840609":-3,"5840610":-1,"5840611":-3,"5840613":-2,"5840615":-2,"5840617":-2,"5840619":-2,"5840621":-2,"5840623":-2,"5840625":-2,"5963882":2,"6422634":-1,"6422646":-1,"6422647":-1,"6422648":-1,"6422649":-1,"6422781":-1,"6430451":-1,"6430453":-1,"6430455":-1,"6430457":-1,"6619242":-1,"6684713":2,"6684714":2,"6684735":1,"6684769":-1,"6684771":-1,"6684772":-1,"6684773":-1,"6684774":-1,"6684775":-1,"6684778":-1,"6684783":-1,"6684785":-1,"6684896":-1,"6684897":-1,"6684898":-1,"6684899":-1,"6684904":-1,"6684905":-1,"6684906":-1,"6684914":-1,"6684915":-1,"6684916":-1,"6684917":-1,"6684931":-1,"6684945":-1,"6685089":-1,"6692513":-1,"6692515":-1,"6692517":-1,"6692519":-1,"6692521":-1,"6692523":-1,"6692525":-1,"6692527":-1,"6692529":-1,"6692531":-1,"6692533":-1,"6692535":-1,"6692537":-1,"6692539":-1,"6692541":-1,"6692543":-1,"6692545":-1,"6692547":-1,"6692549":-1,"6692551":-1,"6692557":-1,"6692559":-1,"6692561":-1,"6692563":-1,"6692565":-1,"6692567":-1,"6692569":-1,"6692571":-1,"6692573":-1,"6692575":-1,"6692577":-1,"6692579":-1,"6881386":-2,"7274602":-1,"7274614":-1,"7274615":-1,"7274616":-1,"7274617":-1,"7274749":-1,"7282419":-1,"7282421":-1,"7282423":-1,"7282425":-1,"7340138":-1,"7340150":-1,"7340151":-1,"7340152":-1,"7340153":-1,"7340285":-1,"7347955":-1,"7347957":-1,"7347959":-1,"7347961":-1,"7471210":-2,"7733347":-1,"7733348":-1,"7733349":-1,"7733351":-1,"7733359":-1,"7733361":-1,"7733480":-1,"7733481":-1,"7733482":-1,"7733490":-1,"7733491":-1,"7733492":-1,"7733493":-1,"7733521":-1,"7733665":-1,"7741113":-1,"7741115":-1,"7741117":-1,"7741119":-1,"7741121":-1,"7741123":-1,"7741125":-1,"7741127":-1,"7741133":-1,"7741135":-1,"7741137":-1,"7741139":-1,"7741141":-1,"7741143":-1,"7741145":-1,"7741147":-1,"7741149":-1,"7741151":-1,"7741153":-1,"7741155":-1,"7798883":-1,"7798884":-1,"7798885":-1,"7798887":-1,"7798895":-1,"7798897":-1,"7799016":-1,"7799017":-1,"7799018":-1,"7799026":-1,"7799027":-1,"7799028":-1,"7799029":-1,"7799057":-1,"7799201":-1,"7806649":-1,"7806651":-1,"7806653":-1,"7806655":-1,"7806657":-1,"7806659":-1,"7806661":-1,"7806663":-1,"7806669":-1,"7806671":-1,"7806673":-1,"7806675":-1,"7806677":-1,"7806679":-1,"7806681":-1,"7806683":-1,"7806685":-1,"7806687":-1,"7806689":-1,"7806691":-1,"7864419":-1,"7864420":-1,"7864421":-1,"7864423":-1,"7864431":-1,"7864433":-1,"7864552":-1,"7864553":-1,"7864554":-1,"7864562":-1,"7864563":-1,"7864564":-1,"7864565":-1,"7864593":-1,"7864737":-1,"7872185":-1,"7872187":-1,"7872189":-1,"7872191":-1,"7872193":-1,"7872195":-1,"7872197":-1,"7872199":-1,"7872205":-1,"7872207":-1,"7872209":-1,"7872211":-1,"7872213":-1,"7872215":-1,"7872217":-1,"7872219":-1,"7872221":-1,"7872223":-1,"7872225":-1,"7872227":-1,"7929955":-1,"7929956":-1,"7929957":-1,"7929959":-1,"7929967":-1,"7929969":-1,"7930088":-1,"7930089":-1,"7930090":-1,"7930098":-1,"7930099":-1,"7930100":-1,"7930101":-1,"7930129":-1,"7930273":-1,"7937721":-1,"7937723":-1,"7937725":-1,"7937727":-1,"7937729":-1,"7937731":-1,"7937733":-1,"7937735":-1,"7937741":-1,"7937743":-1,"7937745":-1,"7937747":-1,"7937749":-1,"7937751":-1,"7937753":-1,"7937755":-1,"7937757":-1,"7937759":-1,"7937761":-1,"7937763":-1,"12582979":-1,"12582983":-1,"12582985":-1,"12582991":-1,"12582993":-1,"12582996":-3,"12582998":-2,"12582999":-2,"12583001":-3,"12583030":-1,"12583031":-1,"12583032":-1,"12583116":-1,"12583117":-1,"12583122":-1,"12583123":-1,"12583124":-1,"12583125":-1,"12583133":-3,"12583208":-1,"12583328":-1,"12590792":-1,"12590794":-1,"12590796":-1,"12590798":-1,"12590800":-1,"12590802":-1,"12590804":-1,"12590806":-1,"12590808":-1,"12590810":-1,"12590812":-1,"12590814":-1,"12590816":-1,"12590818":-1,"12590834":-3,"12590836":-3,"12590838":-3,"12590840":-3,"12648515":-1,"12648519":-1,"12648521":-1,"12648527":-1,"12648529":-1,"12648532":-3,"12648534":-2,"12648535":-2,"12648537":-3,"12648566":-1,"12648567":-1,"12648568":-1,"12648652":-1,"12648653":-1,"12648658":-1,"12648659":-1,"12648660":-1,"12648661":-1,"12648669":-3,"12648744":-1,"12648864":-1,"12656328":-1,"12656330":-1,"12656332":-1,"12656334":-1,"12656336":-1,"12656338":-1,"12656340":-1,"12656342":-1,"12656344":-1,"12656346":-1,"12656348":-1,"12656350":-1,"12656352":-1,"12656354":-1,"12656370":-3,"12656372":-3,"12656374":-3,"12656376":-3,"12714051":-1,"12714055":-1,"12714057":-1,"12714063":-1,"12714065":-1,"12714068":-3,"12714070":-2,"12714071":-2,"12714073":-3,"12714102":-1,"12714103":-1,"12714104":-1,"12714188":-1,"12714189":-1,"12714194":-1,"12714195":-1,"12714196":-1,"12714197":-1,"12714205":-3,"12714280":-1,"12714400":-1,"12721864":-1,"12721866":-1,"12721868":-1,"12721870":-1,"12721872":-1,"12721874":-1,"12721876":-1,"12721878":-1,"12721880":-1,"12721882":-1,"12721884":-1,"12721886":-1,"12721888":-1,"12721890":-1,"12721906":-3,"12721908":-3,"12721910":-3,"12721912":-3,"12779587":-1,"12779591":-1,"12779593":-1,"12779599":-1,"12779601":-1,"12779604":-3,"12779606":-2,"12779607":-2,"12779609":-3,"12779638":-1,"12779639":-1,"12779640":-1,"12779724":-1,"12779725":-1,"12779730":-1,"12779731":-1,"12779732":-1,"12779733":-1,"12779741":-3,"12779816":-1,"12779936":-1,"12787400":-1,"12787402":-1,"12787404":-1,"12787406":-1,"12787408":-1,"12787410":-1,"12787412":-1,"12787414":-1,"12787416":-1,"12787418":-1,"12787420":-1,"12787422":-1,"12787424":-1,"12787426":-1,"12787442":-3,"12787444":-3,"12787446":-3,"12787448":-3,"13107267":-1,"13107271":-1,"13107279":-1,"13107281":-1,"13107410":-1,"13107411":-1,"13107412":-1,"13107413":-1,"13107616":-1,"13115084":-1,"13115086":-1,"13115088":-1,"13115090":-1,"13115092":-1,"13115094":-1,"13115096":-1,"13115098":-1,"13115100":-1,"13115102":-1,"13115104":-1,"13115106":-1,"13172803":-1,"13172807":-1,"13172815":-1,"13172817":-1,"13172946":-1,"13172947":-1,"13172948":-1,"13172949":-1,"13173152":-1,"13180620":-1,"13180622":-1,"13180624":-1,"13180626":-1,"13180628":-1,"13180630":-1,"13180632":-1,"13180634":-1,"13180636":-1,"13180638":-1,"13180640":-1,"13180642":-1,"13238339":-1,"13238343":-1,"13238351":-1,"13238353":-1,"13238482":-1,"13238483":-1,"13238484":-1,"13238485":-1,"13238688":-1,"13246156":-1,"13246158":-1,"13246160":-1,"13246162":-1,"13246164":-1,"13246166":-1,"13246168":-1,"13246170":-1,"13246172":-1,"13246174":-1,"13246176":-1,"13246178":-1,"13762625":-1,"13762644":-1,"13762646":-1,"13762647":-1,"13762648":-1,"13762649":-1,"13762752":-1,"13762753":-1,"13762754":-1,"13762755":-1,"13762781":-1,"13762818":-1,"13770400":-1,"13770402":-1,"13770404":-1,"13770406":-1,"13770408":-1,"13770410":-1,"13770412":-1,"13770414":-1,"13770416":-1,"13770418":-1,"13770420":-1,"13770422":-1,"13770482":-1,"13770484":-1,"13770486":-1,"13770488":-1,"13828161":-1,"13828180":-1,"13828182":-1,"13828183":-1,"13828184":-1,"13828185":-1,"13828288":-1,"13828289":-1,"13828290":-1,"13828291":-1,"13828317":-1,"13828354":-1,"13835936":-1,"13835938":-1,"13835940":-1,"13835942":-1,"13835944":-1,"13835946":-1,"13835948":-1,"13835950":-1,"13835952":-1,"13835954":-1,"13835956":-1,"13835958":-1,"13836018":-1,"13836020":-1,"13836022":-1,"13836024":-1,"13893697":-1,"13893716":-1,"13893718":-1,"13893719":-1,"13893720":-1,"13893721":-1,"13893824":-1,"13893825":-1,"13893826":-1,"13893827":-1,"13893853":-1,"13893890":-1,"13901472":-1,"13901474":-1,"13901476":-1,"13901478":-1,"13901480":-1,"13901482":-1,"13901484":-1,"13901486":-1,"13901488":-1,"13901490":-1,"13901492":-1,"13901494":-1,"13901554":-1,"13901556":-1,"13901558":-1,"13901560":-1,"13959233":-1,"13959252":-1,"13959254":-1,"13959255":-1,"13959256":-1,"13959257":-1,"13959360":-1,"13959361":-1,"13959362":-1,"13959363":-1,"13959389":-1,"13959426":-1,"13967008":-1,"13967010":-1,"13967012":-1,"13967014":-1,"13967016":-1,"13967018":-1,"13967020":-1,"13967022":-1,"13967024":-1,"13967026":-1,"13967028":-1,"13967030":-1,"13967090":-1,"13967092":-1,"13967094":-1,"13967096":-1,"14483500":-4,"14483501":-2,"14483502":-4,"14483514":-4,"14483515":-4,"14483521":-3,"14483523":-1,"14483527":-1,"14483530":-3,"14483535":-1,"14483537":-1,"14483539":-1,"14483553":-3,"14483555":-3,"14483556":-3,"14483557":-3,"14483559":-3,"14483560":-2,"14483563":-2,"14483565":-2,"14483566":-2,"14483567":-3,"14483568":-2,"14483569":-3,"14483571":-3,"14483573":-2,"14483648":-3,"14483649":-3,"14483650":-3,"14483651":-3,"14483666":-1,"14483667":-1,"14483668":-1,"14483669":-1,"14483680":-3,"14483681":-3,"14483682":-3,"14483683":-3,"14483688":-3,"14483689":-3,"14483690":-3,"14483698":-3,"14483699":-3,"14483700":-3,"14483701":-3,"14483705":-2,"14483706":-2,"14483714":-3,"14483715":-3,"14483729":-3,"14483817":-2,"14483872":-1,"14483873":-3,"14483888":-2,"14491296":-3,"14491297":-3,"14491298":-3,"14491299":-3,"14491300":-3,"14491301":-3,"14491302":-3,"14491303":-3,"14491304":-3,"14491305":-3,"14491306":-3,"14491307":-3,"14491308":-3,"14491309":-3,"14491310":-3,"14491311":-3,"14491312":-3,"14491313":-3,"14491314":-3,"14491315":-3,"14491316":-3,"14491317":-3,"14491318":-3,"14491319":-3,"14491321":-3,"14491323":-3,"14491325":-3,"14491327":-3,"14491329":-3,"14491331":-3,"14491333":-3,"14491335":-3,"14491340":-1,"14491341":-3,"14491342":-1,"14491343":-3,"14491344":-1,"14491345":-3,"14491346":-1,"14491347":-3,"14491348":-1,"14491349":-3,"14491350":-1,"14491351":-3,"14491352":-1,"14491353":-3,"14491354":-1,"14491355":-3,"14491356":-1,"14491357":-3,"14491358":-1,"14491359":-3,"14491360":-1,"14491361":-3,"14491362":-1,"14491363":-3,"14491365":-2,"14491367":-2,"14491369":-2,"14491371":-2,"14491373":-2,"14491375":-2,"14491377":-2,"15204458":-1,"15269994":-1,"15335530":-1,"15466602":-2,"15532138":-2,"15859818":-1,"15859830":-1,"15859831":-1,"15859832":-1,"15859833":-1,"15859965":-1,"15867635":-1,"15867637":-1,"15867639":-1,"15867641":-1,"15925354":-1,"15925366":-1,"15925367":-1,"15925368":-1,"15925369":-1,"15925501":-1,"15933171":-1,"15933173":-1,"15933175":-1,"15933177":-1,"15990890":-1,"15990902":-1,"15990903":-1,"15990904":-1,"15990905":-1,"15991037":-1,"15998707":-1,"15998709":-1,"15998711":-1,"15998713":-1,"16056426":-1,"16056438":-1,"16056439":-1,"16056440":-1,"16056441":-1,"16056573":-1,"16064243":-1,"16064245":-1,"16064247":-1,"16064249":-1,"16580707":-1,"16580708":-1,"16580709":-1,"16580711":-1,"16580719":-1,"16580721":-1,"16580840":-1,"16580841":-1,"16580842":-1,"16580850":-1,"16580851":-1,"16580852":-1,"16580853":-1,"16580881":-1,"16581025":-1,"16588473":-1,"16588475":-1,"16588477":-1,"16588479":-1,"16588481":-1,"16588483":-1,"16588485":-1,"16588487":-1,"16588493":-1,"16588495":-1,"16588497":-1,"16588499":-1,"16588501":-1,"16588503":-1,"16588505":-1,"16588507":-1,"16588509":-1,"16588511":-1,"16588513":-1,"16588515":-1,"16908355":-1,"16908359":-1,"16908361":-1,"16908367":-1,"16908369":-1,"16908372":-3,"16908374":-2,"16908375":-2,"16908377":-3,"16908406":-1,"16908407":-1,"16908408":-1,"16908492":-1,"16908493":-1,"16908498":-1,"16908499":-1,"16908500":-1,"16908501":-1,"16908509":-3,"16908584":-1,"16908704":-1,"16916168":-1,"16916170":-1,"16916172":-1,"16916174":-1,"16916176":-1,"16916178":-1,"16916180":-1,"16916182":-1,"16916184":-1,"16916186":-1,"16916188":-1,"16916190":-1,"16916192":-1,"16916194":-1,"16916210":-3,"16916212":-3,"16916214":-3,"16916216":-3,"17825857":-1,"17825876":-1,"17825878":-1,"17825879":-1,"17825880":-1,"17825881":-1,"17825984":-1,"17825985":-1,"17825986":-1,"17825987":-1,"17826013":-1,"17826050":-1,"17833632":-1,"17833634":-1,"17833636":-1,"17833638":-1,"17833640":-1,"17833642":-1,"17833644":-1,"17833646":-1,"17833648":-1,"17833650":-1,"17833652":-1,"17833654":-1,"17833714":-1,"17833716":-1,"17833718":-1,"17833720":-1,"19464298":-2,"27263041":-1,"27263060":-1,"27263062":-1,"27263063":-1,"27263064":-1,"27263065":-1,"27263168":-1,"27263169":-1,"27263170":-1,"27263171":-1,"27263197":-1,"27263234":-1,"27270816":-1,"27270818":-1,"27270820":-1,"27270822":-1,"27270824":-1,"27270826":-1,"27270828":-1,"27270830":-1,"27270832":-1,"27270834":-1,"27270836":-1,"27270838":-1,"27270898":-1,"27270900":-1,"27270902":-1,"27270904":-1,"27328618":-1,"27328630":-1,"27328631":-1,"27328632":-1,"27328633":-1,"27328765":-1,"27336435":-1,"27336437":-1,"27336439":-1,"27336441":-1,"513802307":-1,"513802311":-1,"513802313":-1,"513802319":-1,"513802321":-1,"513802324":-3,"513802326":-2,"513802327":-2,"513802329":-3,"513802358":-1,"513802359":-1,"513802360":-1,"513802444":-1,"513802445":-1,"513802450":-1,"513802451":-1,"513802452":-1,"513802453":-1,"513802461":-3,"513802536":-1,"513802656":-1,"513810120":-1,"513810122":-1,"513810124":-1,"513810126":-1,"513810128":-1,"513810130":-1,"513810132":-1,"513810134":-1,"513810136":-1,"513810138":-1,"513810140":-1,"513810142":-1,"513810144":-1,"513810146":-1,"513810162":-3,"513810164":-3,"513810166":-3,"513810168":-3,"513933379":-1,"513933383":-1,"513933385":-1,"513933391":-1,"513933393":-1,"513933396":-3,"513933398":-2,"513933399":-2,"513933401":-3,"513933430":-1,"513933431":-1,"513933432":-1,"513933516":-1,"513933517":-1,"513933522":-1,"513933523":-1,"513933524":-1,"513933525":-1,"513933533":-3,"513933608":-1,"513933728":-1,"513941192":-1,"513941194":-1,"513941196":-1,"513941198":-1,"513941200":-1,"513941202":-1,"513941204":-1,"513941206":-1,"513941208":-1,"513941210":-1,"513941212":-1,"513941214":-1,"513941216":-1,"513941218":-1,"513941234":-3,"513941236":-3,"513941238":-3,"513941240":-3,"514064451":-1,"514064455":-1,"514064457":-1,"514064463":-1,"514064465":-1,"514064468":-3,"514064470":-2,"514064471":-2,"514064473":-3,"514064502":-1,"514064503":-1,"514064504":-1,"514064588":-1,"514064589":-1,"514064594":-1,"514064595":-1,"514064596":-1,"514064597":-1,"514064605":-3,"514064680":-1,"514064800":-1,"514072264":-1,"514072266":-1,"514072268":-1,"514072270":-1,"514072272":-1,"514072274":-1,"514072276":-1,"514072278":-1,"514072280":-1,"514072282":-1,"514072284":-1,"514072286":-1,"514072288":-1,"514072290":-1,"514072306":-3,"514072308":-3,"514072310":-3,"514072312":-3,"514195523":-1,"514195527":-1,"514195529":-1,"514195535":-1,"514195537":-1,"514195540":-3,"514195542":-2,"514195543":-2,"514195545":-3,"514195574":-1,"514195575":-1,"514195576":-1,"514195660":-1,"514195661":-1,"514195666":-1,"514195667":-1,"514195668":-1,"514195669":-1,"514195677":-3,"514195752":-1,"514195872":-1,"514203336":-1,"514203338":-1,"514203340":-1,"514203342":-1,"514203344":-1,"514203346":-1,"514203348":-1,"514203350":-1,"514203352":-1,"514203354":-1,"514203356":-1,"514203358":-1,"514203360":-1,"514203362":-1,"514203378":-3,"514203380":-3,"514203382":-3,"514203384":-3,"514326595":-1,"514326599":-1,"514326601":-1,"514326607":-1,"514326609":-1,"514326612":-3,"514326614":-2,"514326615":-2,"514326617":-3,"514326646":-1,"514326647":-1,"514326648":-1,"514326732":-1,"514326733":-1,"514326738":-1,"514326739":-1,"514326740":-1,"514326741":-1,"514326749":-3,"514326824":-1,"514326944":-1,"514334408":-1,"514334410":-1,"514334412":-1,"514334414":-1,"514334416":-1,"514334418":-1,"514334420":-1,"514334422":-1,"514334424":-1,"514334426":-1,"514334428":-1,"514334430":-1,"514334432":-1,"514334434":-1,"514334450":-3,"514334452":-3,"514334454":-3,"514334456":-3,"514457667":-1,"514457671":-1,"514457673":-1,"514457679":-1,"514457681":-1,"514457684":-3,"514457686":-2,"514457687":-2,"514457689":-3,"514457718":-1,"514457719":-1,"514457720":-1,"514457804":-1,"514457805":-1,"514457810":-1,"514457811":-1,"514457812":-1,"514457813":-1,"514457821":-3,"514457896":-1,"514458016":-1,"514465480":-1,"514465482":-1,"514465484":-1,"514465486":-1,"514465488":-1,"514465490":-1,"514465492":-1,"514465494":-1,"514465496":-1,"514465498":-1,"514465500":-1,"514465502":-1,"514465504":-1,"514465506":-1,"514465522":-3,"514465524":-3,"514465526":-3,"514465528":-3,"514588739":-1,"514588743":-1,"514588745":-1,"514588751":-1,"514588753":-1,"514588756":-3,"514588758":-2,"514588759":-2,"514588761":-3,"514588790":-1,"514588791":-1,"514588792":-1,"514588876":-1,"514588877":-1,"514588882":-1,"514588883":-1,"514588884":-1,"514588885":-1,"514588893":-3,"514588968":-1,"514589088":-1,"514596552":-1,"514596554":-1,"514596556":-1,"514596558":-1,"514596560":-1,"514596562":-1,"514596564":-1,"514596566":-1,"514596568":-1,"514596570":-1,"514596572":-1,"514596574":-1,"514596576":-1,"514596578":-1,"514596594":-3,"514596596":-3,"514596598":-3,"514596600":-3,"514719811":-1,"514719815":-1,"514719817":-1,"514719823":-1,"514719825":-1,"514719828":-3,"514719830":-2,"514719831":-2,"514719833":-3,"514719862":-1,"514719863":-1,"514719864":-1,"514719948":-1,"514719949":-1,"514719954":-1,"514719955":-1,"514719956":-1,"514719957":-1,"514719965":-3,"514720040":-1,"514720160":-1,"514727624":-1,"514727626":-1,"514727628":-1,"514727630":-1,"514727632":-1,"514727634":-1,"514727636":-1,"514727638":-1,"514727640":-1,"514727642":-1,"514727644":-1,"514727646":-1,"514727648":-1,"514727650":-1,"514727666":-3,"514727668":-3,"514727670":-3,"514727672":-3,"514850883":-1,"514850887":-1,"514850889":-1,"514850895":-1,"514850897":-1,"514850900":-3,"514850902":-2,"514850903":-2,"514850905":-3,"514850934":-1,"514850935":-1,"514850936":-1,"514851020":-1,"514851021":-1,"514851026":-1,"514851027":-1,"514851028":-1,"514851029":-1,"514851037":-3,"514851112":-1,"514851232":-1,"514858696":-1,"514858698":-1,"514858700":-1,"514858702":-1,"514858704":-1,"514858706":-1,"514858708":-1,"514858710":-1,"514858712":-1,"514858714":-1,"514858716":-1,"514858718":-1,"514858720":-1,"514858722":-1,"514858738":-3,"514858740":-3,"514858742":-3,"514858744":-3,"514981955":-1,"514981959":-1,"514981961":-1,"514981967":-1,"514981969":-1,"514981972":-3,"514981974":-2,"514981975":-2,"514981977":-3,"514982006":-1,"514982007":-1,"514982008":-1,"514982092":-1,"514982093":-1,"514982098":-1,"514982099":-1,"514982100":-1,"514982101":-1,"514982109":-3,"514982184":-1,"514982304":-1,"514989768":-1,"514989770":-1,"514989772":-1,"514989774":-1,"514989776":-1,"514989778":-1,"514989780":-1,"514989782":-1,"514989784":-1,"514989786":-1,"514989788":-1,"514989790":-1,"514989792":-1,"514989794":-1,"514989810":-3,"514989812":-3,"514989814":-3,"514989816":-3,"515113027":-1,"515113031":-1,"515113033":-1,"515113039":-1,"515113041":-1,"515113044":-3,"515113046":-2,"515113047":-2,"515113049":-3,"515113078":-1,"515113079":-1,"515113080":-1,"515113164":-1,"515113165":-1,"515113170":-1,"515113171":-1,"515113172":-1,"515113173":-1,"515113181":-3,"515113256":-1,"515113376":-1,"515120840":-1,"515120842":-1,"515120844":-1,"515120846":-1,"515120848":-1,"515120850":-1,"515120852":-1,"515120854":-1,"515120856":-1,"515120858":-1,"515120860":-1,"515120862":-1,"515120864":-1,"515120866":-1,"515120882":-3,"515120884":-3,"515120886":-3,"515120888":-3,"515244099":-1,"515244103":-1,"515244105":-1,"515244111":-1,"515244113":-1,"515244116":-3,"515244118":-2,"515244119":-2,"515244121":-3,"515244150":-1,"515244151":-1,"515244152":-1,"515244236":-1,"515244237":-1,"515244242":-1,"515244243":-1,"515244244":-1,"515244245":-1,"515244253":-3,"515244328":-1,"515244448":-1,"515251912":-1,"515251914":-1,"515251916":-1,"515251918":-1,"515251920":-1,"515251922":-1,"515251924":-1,"515251926":-1,"515251928":-1,"515251930":-1,"515251932":-1,"515251934":-1,"515251936":-1,"515251938":-1,"515251954":-3,"515251956":-3,"515251958":-3,"515251960":-3,"515375171":-1,"515375175":-1,"515375183":-1,"515375185":-1,"515375314":-1,"515375315":-1,"515375316":-1,"515375317":-1,"515375520":-1,"515382988":-1,"515382990":-1,"515382992":-1,"515382994":-1,"515382996":-1,"515382998":-1,"515383000":-1,"515383002":-1,"515383004":-1,"515383006":-1,"515383008":-1,"515383010":-1,"515440746":-1,"515506243":-1,"515506247":-1,"515506255":-1,"515506257":-1,"515506386":-1,"515506387":-1,"515506388":-1,"515506389":-1,"515506592":-1,"515514060":-1,"515514062":-1,"515514064":-1,"515514066":-1,"515514068":-1,"515514070":-1,"515514072":-1,"515514074":-1,"515514076":-1,"515514078":-1,"515514080":-1,"515514082":-1,"515571818":-1,"515637315":-1,"515637319":-1,"515637327":-1,"515637329":-1,"515637458":-1,"515637459":-1,"515637460":-1,"515637461":-1,"515637664":-1,"515645132":-1,"515645134":-1,"515645136":-1,"515645138":-1,"515645140":-1,"515645142":-1,"515645144":-1,"515645146":-1,"515645148":-1,"515645150":-1,"515645152":-1,"515645154":-1,"515702890":-1,"515768387":-1,"515768391":-1,"515768399":-1,"515768401":-1,"515768530":-1,"515768531":-1,"515768532":-1,"515768533":-1,"515768736":-1,"515776204":-1,"515776206":-1,"515776208":-1,"515776210":-1,"515776212":-1,"515776214":-1,"515776216":-1,"515776218":-1,"515776220":-1,"515776222":-1,"515776224":-1,"515776226":-1,"515833962":-1,"515899459":-1,"515899463":-1,"515899471":-1,"515899473":-1,"515899602":-1,"515899603":-1,"515899604":-1,"515899605":-1,"515899808":-1,"515907276":-1,"515907278":-1,"515907280":-1,"515907282":-1,"515907284":-1,"515907286":-1,"515907288":-1,"515907290":-1,"515907292":-1,"515907294":-1,"515907296":-1,"515907298":-1,"515965034":-1,"516030531":-1,"516030535":-1,"516030543":-1,"516030545":-1,"516030674":-1,"516030675":-1,"516030676":-1,"516030677":-1,"516030880":-1,"516038348":-1,"516038350":-1,"516038352":-1,"516038354":-1,"516038356":-1,"516038358":-1,"516038360":-1,"516038362":-1,"516038364":-1,"516038366":-1,"516038368":-1,"516038370":-1,"516096106":-1,"516161603":-1,"516161607":-1,"516161615":-1,"516161617":-1,"516161746":-1,"516161747":-1,"516161748":-1,"516161749":-1,"516161952":-1,"516169420":-1,"516169422":-1,"516169424":-1,"516169426":-1,"516169428":-1,"516169430":-1,"516169432":-1,"516169434":-1,"516169436":-1,"516169438":-1,"516169440":-1,"516169442":-1,"516227178":-1,"516292675":-1,"516292679":-1,"516292687":-1,"516292689":-1,"516292818":-1,"516292819":-1,"516292820":-1,"516292821":-1,"516293024":-1,"516300492":-1,"516300494":-1,"516300496":-1,"516300498":-1,"516300500":-1,"516300502":-1,"516300504":-1,"516300506":-1,"516300508":-1,"516300510":-1,"516300512":-1,"516300514":-1,"516358250":-1,"516489322":-2,"516620394":-2,"516685889":-1,"516685908":-1,"516685910":-1,"516685911":-1,"516685912":-1,"516685913":-1,"516686016":-1,"516686017":-1,"516686018":-1,"516686019":-1,"516686045":-1,"516686082":-1,"516693664":-1,"516693666":-1,"516693668":-1,"516693670":-1,"516693672":-1,"516693674":-1,"516693676":-1,"516693678":-1,"516693680":-1,"516693682":-1,"516693684":-1,"516693686":-1,"516693746":-1,"516693748":-1,"516693750":-1,"516693752":-1,"516751466":-1,"516751478":-1,"516751479":-1,"516751480":-1,"516751481":-1,"516751613":-1,"516759283":-1,"516759285":-1,"516759287":-1,"516759289":-1,"516816961":-1,"516816980":-1,"516816982":-1,"516816983":-1,"516816984":-1,"516816985":-1,"516817088":-1,"516817089":-1,"516817090":-1,"516817091":-1,"516817117":-1,"516817154":-1,"516824736":-1,"516824738":-1,"516824740":-1,"516824742":-1,"516824744":-1,"516824746":-1,"516824748":-1,"516824750":-1,"516824752":-1,"516824754":-1,"516824756":-1,"516824758":-1,"516824818":-1,"516824820":-1,"516824822":-1,"516824824":-1,"516882538":-1,"516882550":-1,"516882551":-1,"516882552":-1,"516882553":-1,"516882685":-1,"516890355":-1,"516890357":-1,"516890359":-1,"516890361":-1,"516948033":-1,"516948052":-1,"516948054":-1,"516948055":-1,"516948056":-1,"516948057":-1,"516948160":-1,"516948161":-1,"516948162":-1,"516948163":-1,"516948189":-1,"516948226":-1,"516955808":-1,"516955810":-1,"516955812":-1,"516955814":-1,"516955816":-1,"516955818":-1,"516955820":-1,"516955822":-1,"516955824":-1,"516955826":-1,"516955828":-1,"516955830":-1,"516955890":-1,"516955892":-1,"516955894":-1,"516955896":-1,"517013610":-1,"517013622":-1,"517013623":-1,"517013624":-1,"517013625":-1,"517013757":-1,"517021427":-1,"517021429":-1,"517021431":-1,"517021433":-1,"517079105":-1,"517079124":-1,"517079126":-1,"517079127":-1,"517079128":-1,"517079129":-1,"517079232":-1,"517079233":-1,"517079234":-1,"517079235":-1,"517079261":-1,"517079298":-1,"517086880":-1,"517086882":-1,"517086884":-1,"517086886":-1,"517086888":-1,"517086890":-1,"517086892":-1,"517086894":-1,"517086896":-1,"517086898":-1,"517086900":-1,"517086902":-1,"517086962":-1,"517086964":-1,"517086966":-1,"517086968":-1,"517144682":-1,"517144694":-1,"517144695":-1,"517144696":-1,"517144697":-1,"517144829":-1,"517152499":-1,"517152501":-1,"517152503":-1,"517152505":-1,"517210177":-1,"517210196":-1,"517210198":-1,"517210199":-1,"517210200":-1,"517210201":-1,"517210304":-1,"517210305":-1,"517210306":-1,"517210307":-1,"517210333":-1,"517210370":-1,"517217952":-1,"517217954":-1,"517217956":-1,"517217958":-1,"517217960":-1,"517217962":-1,"517217964":-1,"517217966":-1,"517217968":-1,"517217970":-1,"517217972":-1,"517217974":-1,"517218034":-1,"517218036":-1,"517218038":-1,"517218040":-1,"517275754":-1,"517275766":-1,"517275767":-1,"517275768":-1,"517275769":-1,"517275901":-1,"517283571":-1,"517283573":-1,"517283575":-1,"517283577":-1,"517341249":-1,"517341268":-1,"517341270":-1,"517341271":-1,"517341272":-1,"517341273":-1,"517341376":-1,"517341377":-1,"517341378":-1,"517341379":-1,"517341405":-1,"517341442":-1,"517349024":-1,"517349026":-1,"517349028":-1,"517349030":-1,"517349032":-1,"517349034":-1,"517349036":-1,"517349038":-1,"517349040":-1,"517349042":-1,"517349044":-1,"517349046":-1,"517349106":-1,"517349108":-1,"517349110":-1,"517349112":-1,"517406826":-1,"517406838":-1,"517406839":-1,"517406840":-1,"517406841":-1,"517406973":-1,"517414643":-1,"517414645":-1,"517414647":-1,"517414649":-1,"517472321":-1,"517472340":-1,"517472342":-1,"517472343":-1,"517472344":-1,"517472345":-1,"517472448":-1,"517472449":-1,"517472450":-1,"517472451":-1,"517472477":-1,"517472514":-1,"517480096":-1,"517480098":-1,"517480100":-1,"517480102":-1,"517480104":-1,"517480106":-1,"517480108":-1,"517480110":-1,"517480112":-1,"517480114":-1,"517480116":-1,"517480118":-1,"517480178":-1,"517480180":-1,"517480182":-1,"517480184":-1,"517537898":-1,"517537910":-1,"517537911":-1,"517537912":-1,"517537913":-1,"517538045":-1,"517545715":-1,"517545717":-1,"517545719":-1,"517545721":-1,"517603393":-1,"517603412":-1,"517603414":-1,"517603415":-1,"517603416":-1,"517603417":-1,"517603520":-1,"517603521":-1,"517603522":-1,"517603523":-1,"517603549":-1,"517603586":-1,"517611168":-1,"517611170":-1,"517611172":-1,"517611174":-1,"517611176":-1,"517611178":-1,"517611180":-1,"517611182":-1,"517611184":-1,"517611186":-1,"517611188":-1,"517611190":-1,"517611250":-1,"517611252":-1,"517611254":-1,"517611256":-1,"517668970":-1,"517668982":-1,"517668983":-1,"517668984":-1,"517668985":-1,"517669117":-1,"517676787":-1,"517676789":-1,"517676791":-1,"517676793":-1,"517734465":-1,"517734484":-1,"517734486":-1,"517734487":-1,"517734488":-1,"517734489":-1,"517734592":-1,"517734593":-1,"517734594":-1,"517734595":-1,"517734621":-1,"517734658":-1,"517742240":-1,"517742242":-1,"517742244":-1,"517742246":-1,"517742248":-1,"517742250":-1,"517742252":-1,"517742254":-1,"517742256":-1,"517742258":-1,"517742260":-1,"517742262":-1,"517742322":-1,"517742324":-1,"517742326":-1,"517742328":-1,"517800042":-1,"517800054":-1,"517800055":-1,"517800056":-1,"517800057":-1,"517800189":-1,"517807859":-1,"517807861":-1,"517807863":-1,"517807865":-1,"517865537":-1,"517865556":-1,"517865558":-1,"517865559":-1,"517865560":-1,"517865561":-1,"517865664":-1,"517865665":-1,"517865666":-1,"517865667":-1,"517865693":-1,"517865730":-1,"517873312":-1,"517873314":-1,"517873316":-1,"517873318":-1,"517873320":-1,"517873322":-1,"517873324":-1,"517873326":-1,"517873328":-1,"517873330":-1,"517873332":-1,"517873334":-1,"517873394":-1,"517873396":-1,"517873398":-1,"517873400":-1,"517931114":-1,"517931126":-1,"517931127":-1,"517931128":-1,"517931129":-1,"517931261":-1,"517938931":-1,"517938933":-1,"517938935":-1,"517938937":-1,"517996609":-1,"517996628":-1,"517996630":-1,"517996631":-1,"517996632":-1,"517996633":-1,"517996736":-1,"517996737":-1,"517996738":-1,"517996739":-1,"517996765":-1,"517996802":-1,"518004384":-1,"518004386":-1,"518004388":-1,"518004390":-1,"518004392":-1,"518004394":-1,"518004396":-1,"518004398":-1,"518004400":-1,"518004402":-1,"518004404":-1,"518004406":-1,"518004466":-1,"518004468":-1,"518004470":-1,"518004472":-1,"518062186":-1,"518062198":-1,"518062199":-1,"518062200":-1,"518062201":-1,"518062333":-1,"518070003":-1,"518070005":-1,"518070007":-1,"518070009":-1,"518127681":-1,"518127700":-1,"518127702":-1,"518127703":-1,"518127704":-1,"518127705":-1,"518127808":-1,"518127809":-1,"518127810":-1,"518127811":-1,"518127837":-1,"518127874":-1,"518135456":-1,"518135458":-1,"518135460":-1,"518135462":-1,"518135464":-1,"518135466":-1,"518135468":-1,"518135470":-1,"518135472":-1,"518135474":-1,"518135476":-1,"518135478":-1,"518135538":-1,"518135540":-1,"518135542":-1,"518135544":-1,"518193258":-1,"518193270":-1,"518193271":-1,"518193272":-1,"518193273":-1,"518193405":-1,"518201075":-1,"518201077":-1,"518201079":-1,"518201081":-1,"519176236":-4,"519176237":-2,"519176238":-4,"519176250":-4,"519176251":-4,"519176257":-3,"519176259":-1,"519176263":-1,"519176266":-3,"519176271":-1,"519176273":-1,"519176275":-1,"519176289":-3,"519176291":-3,"519176292":-3,"519176293":-3,"519176295":-3,"519176296":-2,"519176299":-2,"519176301":-2,"519176302":-2,"519176303":-3,"519176304":-2,"519176305":-3,"519176307":-3,"519176309":-2,"519176384":-3,"519176385":-3,"519176386":-3,"519176387":-3,"519176402":-1,"519176403":-1,"519176404":-1,"519176405":-1,"519176416":-3,"519176417":-3,"519176418":-3,"519176419":-3,"519176424":-3,"519176425":-3,"519176426":-3,"519176434":-3,"519176435":-3,"519176436":-3,"519176437":-3,"519176441":-2,"519176442":-2,"519176450":-3,"519176451":-3,"519176465":-3,"519176553":-2,"519176608":-1,"519176609":-3,"519176624":-2,"519184032":-3,"519184033":-3,"519184034":-3,"519184035":-3,"519184036":-3,"519184037":-3,"519184038":-3,"519184039":-3,"519184040":-3,"519184041":-3,"519184042":-3,"519184043":-3,"519184044":-3,"519184045":-3,"519184046":-3,"519184047":-3,"519184048":-3,"519184049":-3,"519184050":-3,"519184051":-3,"519184052":-3,"519184053":-3,"519184054":-3,"519184055":-3,"519184057":-3,"519184059":-3,"519184061":-3,"519184063":-3,"519184065":-3,"519184067":-3,"519184069":-3,"519184071":-3,"519184076":-1,"519184077":-3,"519184078":-1,"519184079":-3,"519184080":-1,"519184081":-3,"519184082":-1,"519184083":-3,"519184084":-1,"519184085":-3,"519184086":-1,"519184087":-3,"519184088":-1,"519184089":-3,"519184090":-1,"519184091":-3,"519184092":-1,"519184093":-3,"519184094":-1,"519184095":-3,"519184096":-1,"519184097":-3,"519184098":-1,"519184099":-3,"519184101":-2,"519184103":-2,"519184105":-2,"519184107":-2,"519184109":-2,"519184111":-2,"519184113":-2,"519241827":-1,"519241828":-1,"519241829":-1,"519241831":-1,"519241839":-1,"519241841":-1,"519241960":-1,"519241961":-1,"519241962":-1,"519241970":-1,"519241971":-1,"519241972":-1,"519241973":-1,"519242001":-1,"519242145":-1,"519249593":-1,"519249595":-1,"519249597":-1,"519249599":-1,"519249601":-1,"519249603":-1,"519249605":-1,"519249607":-1,"519249613":-1,"519249615":-1,"519249617":-1,"519249619":-1,"519249621":-1,"519249623":-1,"519249625":-1,"519249627":-1,"519249629":-1,"519249631":-1,"519249633":-1,"519249635":-1,"519307308":-4,"519307309":-2,"519307310":-4,"519307322":-4,"519307323":-4,"519307329":-3,"519307331":-1,"519307335":-1,"519307338":-3,"519307343":-1,"519307345":-1,"519307347":-1,"519307361":-3,"519307363":-3,"519307364":-3,"519307365":-3,"519307367":-3,"519307368":-2,"519307371":-2,"519307373":-2,"519307374":-2,"519307375":-3,"519307376":-2,"519307377":-3,"519307379":-3,"519307381":-2,"519307456":-3,"519307457":-3,"519307458":-3,"519307459":-3,"519307474":-1,"519307475":-1,"519307476":-1,"519307477":-1,"519307488":-3,"519307489":-3,"519307490":-3,"519307491":-3,"519307496":-3,"519307497":-3,"519307498":-3,"519307506":-3,"519307507":-3,"519307508":-3,"519307509":-3,"519307513":-2,"519307514":-2,"519307522":-3,"519307523":-3,"519307537":-3,"519307625":-2,"519307680":-1,"519307681":-3,"519307696":-2,"519315104":-3,"519315105":-3,"519315106":-3,"519315107":-3,"519315108":-3,"519315109":-3,"519315110":-3,"519315111":-3,"519315112":-3,"519315113":-3,"519315114":-3,"519315115":-3,"519315116":-3,"519315117":-3,"519315118":-3,"519315119":-3,"519315120":-3,"519315121":-3,"519315122":-3,"519315123":-3,"519315124":-3,"519315125":-3,"519315126":-3,"519315127":-3,"519315129":-3,"519315131":-3,"519315133":-3,"519315135":-3,"519315137":-3,"519315139":-3,"519315141":-3,"519315143":-3,"519315148":-1,"519315149":-3,"519315150":-1,"519315151":-3,"519315152":-1,"519315153":-3,"519315154":-1,"519315155":-3,"519315156":-1,"519315157":-3,"519315158":-1,"519315159":-3,"519315160":-1,"519315161":-3,"519315162":-1,"519315163":-3,"519315164":-1,"519315165":-3,"519315166":-1,"519315167":-3,"519315168":-1,"519315169":-3,"519315170":-1,"519315171":-3,"519315173":-2,"519315175":-2,"519315177":-2,"519315179":-2,"519315181":-2,"519315183":-2,"519315185":-2,"519372899":-1,"519372900":-1,"519372901":-1,"519372903":-1,"519372911":-1,"519372913":-1,"519373032":-1,"519373033":-1,"519373034":-1,"519373042":-1,"519373043":-1,"519373044":-1,"519373045":-1,"519373073":-1,"519373217":-1,"519380665":-1,"519380667":-1,"519380669":-1,"519380671":-1,"519380673":-1,"519380675":-1,"519380677":-1,"519380679":-1,"519380685":-1,"519380687":-1,"519380689":-1,"519380691":-1,"519380693":-1,"519380695":-1,"519380697":-1,"519380699":-1,"519380701":-1,"519380703":-1,"519380705":-1,"519380707":-1,"519438380":-4,"519438381":-2,"519438382":-4,"519438394":-4,"519438395":-4,"519438401":-3,"519438403":-1,"519438407":-1,"519438410":-3,"519438415":-1,"519438417":-1,"519438419":-1,"519438433":-3,"519438435":-3,"519438436":-3,"519438437":-3,"519438439":-3,"519438440":-2,"519438443":-2,"519438445":-2,"519438446":-2,"519438447":-3,"519438448":-2,"519438449":-3,"519438451":-3,"519438453":-2,"519438528":-3,"519438529":-3,"519438530":-3,"519438531":-3,"519438546":-1,"519438547":-1,"519438548":-1,"519438549":-1,"519438560":-3,"519438561":-3,"519438562":-3,"519438563":-3,"519438568":-3,"519438569":-3,"519438570":-3,"519438578":-3,"519438579":-3,"519438580":-3,"519438581":-3,"519438585":-2,"519438586":-2,"519438594":-3,"519438595":-3,"519438609":-3,"519438697":-2,"519438752":-1,"519438753":-3,"519438768":-2,"519446176":-3,"519446177":-3,"519446178":-3,"519446179":-3,"519446180":-3,"519446181":-3,"519446182":-3,"519446183":-3,"519446184":-3,"519446185":-3,"519446186":-3,"519446187":-3,"519446188":-3,"519446189":-3,"519446190":-3,"519446191":-3,"519446192":-3,"519446193":-3,"519446194":-3,"519446195":-3,"519446196":-3,"519446197":-3,"519446198":-3,"519446199":-3,"519446201":-3,"519446203":-3,"519446205":-3,"519446207":-3,"519446209":-3,"519446211":-3,"519446213":-3,"519446215":-3,"519446220":-1,"519446221":-3,"519446222":-1,"519446223":-3,"519446224":-1,"519446225":-3,"519446226":-1,"519446227":-3,"519446228":-1,"519446229":-3,"519446230":-1,"519446231":-3,"519446232":-1,"519446233":-3,"519446234":-1,"519446235":-3,"519446236":-1,"519446237":-3,"519446238":-1,"519446239":-3,"519446240":-1,"519446241":-3,"519446242":-1,"519446243":-3,"519446245":-2,"519446247":-2,"519446249":-2,"519446251":-2,"519446253":-2,"519446255":-2,"519446257":-2,"519503971":-1,"519503972":-1,"519503973":-1,"519503975":-1,"519503983":-1,"519503985":-1,"519504104":-1,"519504105":-1,"519504106":-1,"519504114":-1,"519504115":-1,"519504116":-1,"519504117":-1,"519504145":-1,"519504289":-1,"519511737":-1,"519511739":-1,"519511741":-1,"519511743":-1,"519511745":-1,"519511747":-1,"519511749":-1,"519511751":-1,"519511757":-1,"519511759":-1,"519511761":-1,"519511763":-1,"519511765":-1,"519511767":-1,"519511769":-1,"519511771":-1,"519511773":-1,"519511775":-1,"519511777":-1,"519511779":-1,"519569452":-4,"519569453":-2,"519569454":-4,"519569466":-4,"519569467":-4,"519569473":-3,"519569475":-1,"519569479":-1,"519569482":-3,"519569487":-1,"519569489":-1,"519569491":-1,"519569505":-3,"519569507":-3,"519569508":-3,"519569509":-3,"519569511":-3,"519569512":-2,"519569515":-2,"519569517":-2,"519569518":-2,"519569519":-3,"519569520":-2,"519569521":-3,"519569523":-3,"519569525":-2,"519569600":-3,"519569601":-3,"519569602":-3,"519569603":-3,"519569618":-1,"519569619":-1,"519569620":-1,"519569621":-1,"519569632":-3,"519569633":-3,"519569634":-3,"519569635":-3,"519569640":-3,"519569641":-3,"519569642":-3,"519569650":-3,"519569651":-3,"519569652":-3,"519569653":-3,"519569657":-2,"519569658":-2,"519569666":-3,"519569667":-3,"519569681":-3,"519569769":-2,"519569824":-1,"519569825":-3,"519569840":-2,"519577248":-3,"519577249":-3,"519577250":-3,"519577251":-3,"519577252":-3,"519577253":-3,"519577254":-3,"519577255":-3,"519577256":-3,"519577257":-3,"519577258":-3,"519577259":-3,"519577260":-3,"519577261":-3,"519577262":-3,"519577263":-3,"519577264":-3,"519577265":-3,"519577266":-3,"519577267":-3,"519577268":-3,"519577269":-3,"519577270":-3,"519577271":-3,"519577273":-3,"519577275":-3,"519577277":-3,"519577279":-3,"519577281":-3,"519577283":-3,"519577285":-3,"519577287":-3,"519577292":-1,"519577293":-3,"519577294":-1,"519577295":-3,"519577296":-1,"519577297":-3,"519577298":-1,"519577299":-3,"519577300":-1,"519577301":-3,"519577302":-1,"519577303":-3,"519577304":-1,"519577305":-3,"519577306":-1,"519577307":-3,"519577308":-1,"519577309":-3,"519577310":-1,"519577311":-3,"519577312":-1,"519577313":-3,"519577314":-1,"519577315":-3,"519577317":-2,"519577319":-2,"519577321":-2,"519577323":-2,"519577325":-2,"519577327":-2,"519577329":-2,"519635043":-1,"519635044":-1,"519635045":-1,"519635047":-1,"519635055":-1,"519635057":-1,"519635176":-1,"519635177":-1,"519635178":-1,"519635186":-1,"519635187":-1,"519635188":-1,"519635189":-1,"519635217":-1,"519635361":-1,"519642809":-1,"519642811":-1,"519642813":-1,"519642815":-1,"519642817":-1,"519642819":-1,"519642821":-1,"519642823":-1,"519642829":-1,"519642831":-1,"519642833":-1,"519642835":-1,"519642837":-1,"519642839":-1,"519642841":-1,"519642843":-1,"519642845":-1,"519642847":-1,"519642849":-1,"519642851":-1}}]],0,0,[0],[11],[69]],[[[154,"SVN-Ziclets","SVN-Ziclets.ttf"],-1],0,0,[],[],[]],[[{"name":"Bungee-number","rect":{"x":0,"y":0,"width":473,"height":125},"offset":{"x":0,"y":0},"originalSize":{"width":473,"height":125},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-236.5,-62.5,0,236.5,-62.5,0,-236.5,62.5,0,236.5,62.5,0],"indexes":[0,1,2,2,1,3],"uv":[0,125,473,125,0,0,473,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-236.5,"y":-62.5,"z":0},"maxPos":{"x":236.5,"y":62.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[17],0,[0],[47],[70]],[[[58,"../models/platform",[{"hash":2511723302,"name":"../models/platform|standard-vs:vert|standard-fs:frag","blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1},{"name":"albedo","type":16,"count":1},{"name":"albedoScaleAndCutoff","type":16,"count":1},{"name":"pbrParams","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScaleParam","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"albedoMap","type":28,"count":1,"stageFlags":16,"binding":1,"defines":["USE_ALBEDO_MAP"]},{"name":"normalMap","type":28,"count":1,"stageFlags":16,"binding":2,"defines":["USE_NORMAL_MAP"]},{"name":"pbrMap","type":28,"count":1,"stageFlags":16,"binding":3,"defines":["USE_PBR_MAP"]},{"name":"metallicRoughnessMap","type":28,"count":1,"stageFlags":16,"binding":4,"defines":["USE_METALLIC_ROUGHNESS_MAP"]},{"name":"occlusionMap","type":28,"count":1,"stageFlags":16,"binding":5,"defines":["USE_OCCLUSION_MAP"]},{"name":"emissiveMap","type":28,"count":1,"stageFlags":16,"binding":6,"defines":["USE_EMISSIVE_MAP"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBias","format":21,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","CC_RECEIVE_SHADOW"]},{"name":"a_vertexId","format":11,"location":12,"defines":["CC_USE_MORPH"]},{"name":"a_color","format":44,"location":13,"defines":["USE_VERTEX_COLOR"]},{"name":"a_texCoord1","format":21,"location":14,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define CC_LIGHTMAP_DISABLED 0\n#define CC_LIGHTMAP_ALL_IN_ONE 1\n#define CC_LIGHTMAP_CC_LIGHTMAP_INDIRECT_OCCLUSION 2\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_RECEIVE_SHADOW\n    attribute vec2 a_localShadowBias;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\n#if CC_USE_MORPH\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In.position, In.normal, In.tangent);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In.position, In.normal, In.tangent);\n  #endif\n}\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_fogBase;\n  uniform mediump vec4 cc_fogAdd;\n#if !USE_INSTANCING\n  uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n  uniform highp vec4 cc_lightingMapUVParam;\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n}\n    uniform vec4 tilingOffset;\n#if CC_USE_FOG != 4\n  float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {\n      vec4 wPos = pos;\n      float cam_dis = distance(cameraPos, wPos.xyz);\n      return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n  }\n  float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * fogDensity);\n      return f;\n  }\n  float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n      return f;\n  }\n  float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {\n      vec4 wPos = pos;\n      vec3 camWorldProj = cameraPos.xyz;\n      camWorldProj.y = 0.;\n      vec3 worldPosProj = wPos.xyz;\n      worldPosProj.y = 0.;\n      float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n      float fDeltaY, fDensityIntegral;\n      if (cameraPos.y > fogTop) {\n          if (wPos.y < fogTop) {\n              fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;\n              fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n          }\n          else {\n              fDeltaY = 0.;\n              fDensityIntegral = 0.;\n          }\n      }\n      else {\n          if (wPos.y < fogTop) {\n              float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;\n              float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;\n              fDeltaY = abs(fDeltaA - fDeltaB);\n              fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n          }\n          else {\n              fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;\n              fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n          }\n      }\n      float fDensity;\n      if (fDeltaY != 0.) {\n          fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n      }\n      else {\n          fDensity = 0.;\n      }\n      float f = exp(-fDensity);\n      return f;\n  }\n#endif\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\n\tfactor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);\n#elif CC_USE_FOG == 1\n\tfactor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 2\n\tfactor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 3\n\tfactor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);\n#else\n\tfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nvarying mediump float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\n    CC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #endif\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotShadowMap;\n  #if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #else\n  #endif\n#endif\n#if CC_RECEIVE_SHADOW\n#endif\n#if USE_VERTEX_COLOR\n  attribute vec4 a_color;\n  varying vec4 v_color;\n#endif\nvarying vec3 v_position;\nvarying vec3 v_normal;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\n#if USE_NORMAL_MAP\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || CC_USE_LIGHTMAP\n  attribute vec2 a_texCoord1;\n#endif\n#if CC_USE_LIGHTMAP && !CC_FORWARD_ADD\n  varying vec3 v_luv;\n  void CCLightingMapCaclUV()\n  {\n  #if !USE_INSTANCING\n    v_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.z;\n    v_luv.z = cc_lightingMapUVParam.w;\n  #else\n    v_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.z;\n    v_luv.z = a_lightingMapUVParam.w;\n  #endif\n  }\n#endif\nvec4 vert () {\n  StandardVertInput In;\n  CCVertInput(In);\n  mat4 matWorld, matWorldIT;\n  CCGetWorldMatrixFull(matWorld, matWorldIT);\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_TWOSIDE\n    vec3 viewDirect = normalize(cc_cameraPos.xyz - v_position);\n    v_normal *= dot(v_normal, viewDirect) < 0.0 ? -1.0 : 1.0;\n  #endif\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if SAMPLE_FROM_RT\n    v_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n  #endif\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n    #if SAMPLE_FROM_RT\n      v_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n    #endif\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n  CC_TRANSFER_FOG(pos);\n  v_shadowPos = cc_matLightViewProj * pos;\n  #if CC_USE_LIGHTMAP && !CC_FORWARD_ADD\n    CCLightingMapCaclUV();\n  #endif\n  return cc_matProj * (cc_matView * matWorld) * In.position;\n}\nvoid main() { gl_Position = vert(); }","frag":"\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform mediump vec4 cc_debug_view_mode;\n  uniform mediump vec4 cc_debug_view_composite_pack_1;\n  uniform mediump vec4 cc_debug_view_composite_pack_2;\n  uniform mediump vec4 cc_debug_view_composite_pack_3;\nuniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_surfaceTransform;\n  uniform mediump vec4 cc_exposure;\n  uniform mediump vec4 cc_mainLitDir;\n  uniform mediump vec4 cc_mainLitColor;\n  uniform mediump vec4 cc_ambientSky;\n  uniform mediump vec4 cc_ambientGround;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define CC_LIGHTMAP_DISABLED 0\n#define CC_LIGHTMAP_ALL_IN_ONE 1\n#define CC_LIGHTMAP_CC_LIGHTMAP_INDIRECT_OCCLUSION 2\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_WORLD_POS CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR CC_SURFACES_DEBUG_VIEW_WORLD_POS + 1\n#define CC_SURFACES_DEBUG_VIEW_FACE_SIDE CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR + 1\n#define CC_SURFACES_DEBUG_VIEW_UV0 CC_SURFACES_DEBUG_VIEW_FACE_SIDE + 1\n#define CC_SURFACES_DEBUG_VIEW_UV1 CC_SURFACES_DEBUG_VIEW_UV0 + 1\n#define CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP CC_SURFACES_DEBUG_VIEW_UV1 + 1\n#define CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP + 1\n#define CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_BASE_COLOR CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR CC_SURFACES_DEBUG_VIEW_BASE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_TRANSPARENCY CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_METALLIC CC_SURFACES_DEBUG_VIEW_TRANSPARENCY + 1\n#define CC_SURFACES_DEBUG_VIEW_ROUGHNESS CC_SURFACES_DEBUG_VIEW_METALLIC + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY CC_SURFACES_DEBUG_VIEW_ROUGHNESS + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_ALL CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE CC_SURFACES_DEBUG_VIEW_DIRECT_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_ALL CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_EMISSIVE CC_SURFACES_DEBUG_VIEW_ENV_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_LIGHT_MAP CC_SURFACES_DEBUG_VIEW_EMISSIVE + 1\n#define CC_SURFACES_DEBUG_VIEW_SHADOW CC_SURFACES_DEBUG_VIEW_LIGHT_MAP + 1\n#define CC_SURFACES_DEBUG_VIEW_AO CC_SURFACES_DEBUG_VIEW_SHADOW + 1\n#define CC_SURFACES_DEBUG_VIEW_FOG CC_SURFACES_DEBUG_VIEW_AO + 1\n#define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#define IS_DEBUG_VIEW_LIGHTING_ENABLE_WITH_ALBEDO (cc_debug_view_mode.y > 0.0)\n#define IS_DEBUG_VIEW_MISC_ENABLE_CSM_LAYER_COLORATION (cc_debug_view_mode.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_DIFFUSE (cc_debug_view_composite_pack_1.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_SPECULAR (cc_debug_view_composite_pack_1.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_DIFFUSE (cc_debug_view_composite_pack_1.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_SPECULAR (cc_debug_view_composite_pack_1.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_EMISSIVE (cc_debug_view_composite_pack_2.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_LIGHT_MAP (cc_debug_view_composite_pack_2.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_SHADOW (cc_debug_view_composite_pack_2.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_AO (cc_debug_view_composite_pack_2.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_NORMAL_MAP (cc_debug_view_composite_pack_3.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_FOG (cc_debug_view_composite_pack_3.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_TONE_MAPPING (cc_debug_view_composite_pack_3.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION (cc_debug_view_composite_pack_3.w > 0.0)\nvec3 SRGBToLinear (vec3 gamma) {\n#ifdef CC_USE_SURFACE_SHADER\n  #if CC_USE_DEBUG_VIEW == CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    if (!IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION) {\n      return gamma;\n    }\n  #endif\n#endif\n  return gamma * gamma;\n}\nvec3 LinearToSRGB(vec3 linear) {\n#ifdef CC_USE_SURFACE_SHADER\n  #if CC_USE_DEBUG_VIEW == CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    if (!IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION) {\n      return linear;\n    }\n  #endif\n#endif\n  return sqrt(linear);\n}\nuniform highp mat4 cc_matLightView;\n  uniform highp mat4 cc_matLightViewProj;\n  uniform highp vec4 cc_shadowProjDepthInfo;\n  uniform highp vec4 cc_shadowProjInfo;\n  uniform mediump vec4 cc_shadowNFLSInfo;\n  uniform mediump vec4 cc_shadowWHPBInfo;\n  uniform mediump vec4 cc_shadowLPNNInfo;\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  uniform highp vec4 cc_csmViewDir0[4];\n  uniform highp vec4 cc_csmViewDir1[4];\n  uniform highp vec4 cc_csmViewDir2[4];\n  uniform highp vec4 cc_csmAtlas[4];\n  uniform highp mat4 cc_matCSMViewProj[4];\n  uniform highp vec4 cc_csmProjDepthInfo[4];\n  uniform highp vec4 cc_csmProjInfo[4];\n#endif\nvec3 RotationVecFromAxisY(vec3 v, float cosTheta, float sinTheta)\n{\n    vec3 result;\n    result.x = dot(v, vec3(cosTheta, 0.0, -sinTheta));\n    result.y = v.y;\n    result.z = dot(v, vec3(sinTheta, 0.0,  cosTheta));\n    return result;\n}\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotShadowMap;\n    highp float unpackHighpData (float mainPart, float modPart) {\n      highp float data = mainPart;\n      return data + modPart;\n    }\n    void packHighpData (out float mainPart, out float modPart, highp float data) {\n      mainPart = fract(data);\n      modPart = data - mainPart;\n    }\n    highp float unpackHighpData (float mainPart, float modPart, const float modValue) {\n      highp float data = mainPart * modValue;\n      return data + modPart * modValue;\n    }\n    void packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\n      highp float divide = data / modValue;\n      mainPart = floor(divide);\n      modPart = (data - mainPart * modValue) / modValue;\n    }\n    highp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\n      highp vec2 data = mainPart;\n      return data + modPart;\n    }\n    void packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\n      mainPart = fract(data);\n      modPart = data - mainPart;\n    }\n    highp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\n      highp vec2 data = mainPart * modValue;\n      return data + modPart * modValue;\n    }\n    void packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\n      highp vec2 divide = data / modValue;\n      mainPart = floor(divide);\n      modPart = (data - mainPart * modValue) / modValue;\n    }\n    highp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\n      highp vec3 data = mainPart;\n      return data + modPart;\n    }\n    void packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\n      mainPart = fract(data);\n      modPart = data - mainPart;\n    }\n    highp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\n      highp vec3 data = mainPart * modValue;\n      return data + modPart * modValue;\n    }\n    void packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\n      highp vec3 divide = data / modValue;\n      mainPart = floor(divide);\n      modPart = (data - mainPart * modValue) / modValue;\n    }\n    highp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\n      highp vec4 data = mainPart;\n      return data + modPart;\n    }\n    void packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\n      mainPart = fract(data);\n      modPart = data - mainPart;\n    }\n    highp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\n      highp vec4 data = mainPart * modValue;\n      return data + modPart * modValue;\n    }\n    void packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\n      highp vec4 divide = data / modValue;\n      mainPart = floor(divide);\n      modPart = (data - mainPart * modValue) / modValue;\n    }\n  float NativePCFShadowFactorHard (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n  {\n    #if CC_SHADOWMAP_FORMAT == 1\n      return step(shadowNDCPos.z, dot(texture2D(shadowMap, shadowNDCPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    #else\n      return step(shadowNDCPos.z, texture2D(shadowMap, shadowNDCPos.xy).x);\n    #endif\n  }\n  float NativePCFShadowFactorSoft (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n  {\n    vec2 oneTap = 1.0 / shadowMapResolution;\n    vec2 shadowNDCPos_offset = shadowNDCPos.xy + oneTap;\n    float block0, block1, block2, block3;\n    #if CC_SHADOWMAP_FORMAT == 1\n      block0 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    #else\n      block0 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)).x);\n      block1 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos.y)).x);\n      block2 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset.y)).x);\n      block3 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos_offset.y)).x);\n    #endif\n    float coefX   = mod(shadowNDCPos.x, oneTap.x) * shadowMapResolution.x;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block2, block3, coefX);\n    float coefY   = mod(shadowNDCPos.y, oneTap.y) * shadowMapResolution.y;\n    return mix(resultX, resultY, coefY);\n  }\n  float NativePCFShadowFactorSoft3X (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n  {\n    vec2 oneTap = 1.0 / shadowMapResolution;\n    float shadowNDCPos_offset_L = shadowNDCPos.x - oneTap.x;\n    float shadowNDCPos_offset_R = shadowNDCPos.x + oneTap.x;\n    float shadowNDCPos_offset_U = shadowNDCPos.y - oneTap.y;\n    float shadowNDCPos_offset_D = shadowNDCPos.y + oneTap.y;\n    float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n    #if CC_SHADOWMAP_FORMAT == 1\n      block0 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    #else\n      block0 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_U)).x);\n      block1 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_U)).x);\n      block2 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_U)).x);\n      block3 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos.y)).x);\n      block4 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)).x);\n      block5 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos.y)).x);\n      block6 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_D)).x);\n      block7 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_D)).x);\n      block8 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_D)).x);\n    #endif\n    float coefX = mod(shadowNDCPos.x, oneTap.x) * shadowMapResolution.x;\n    float coefY = mod(shadowNDCPos.y, oneTap.y) * shadowMapResolution.y;\n    float shadow = 0.0;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block3, block4, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block1, block2, coefX);\n    resultY = mix(block4, block5, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block3, block4, coefX);\n    resultY = mix(block6, block7, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    resultX = mix(block4, block5, coefX);\n    resultY = mix(block7, block8, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    return shadow * 0.25;\n  }\n  float NativePCFShadowFactorSoft5X (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n  {\n    vec2 oneTap = 1.0 / shadowMapResolution;\n    vec2 twoTap = oneTap * 2.0;\n    vec2 offset1 = shadowNDCPos.xy + vec2(-twoTap.x, -twoTap.y);\n    vec2 offset2 = shadowNDCPos.xy + vec2(-oneTap.x, -twoTap.y);\n    vec2 offset3 = shadowNDCPos.xy + vec2(0.0, -twoTap.y);\n    vec2 offset4 = shadowNDCPos.xy + vec2(oneTap.x, -twoTap.y);\n    vec2 offset5 = shadowNDCPos.xy + vec2(twoTap.x, -twoTap.y);\n    vec2 offset6 = shadowNDCPos.xy + vec2(-twoTap.x, -oneTap.y);\n    vec2 offset7 = shadowNDCPos.xy + vec2(-oneTap.x, -oneTap.y);\n    vec2 offset8 = shadowNDCPos.xy + vec2(0.0, -oneTap.y);\n    vec2 offset9 = shadowNDCPos.xy + vec2(oneTap.x, -oneTap.y);\n    vec2 offset10 = shadowNDCPos.xy + vec2(twoTap.x, -oneTap.y);\n    vec2 offset11 = shadowNDCPos.xy + vec2(-twoTap.x, 0.0);\n    vec2 offset12 = shadowNDCPos.xy + vec2(-oneTap.x, 0.0);\n    vec2 offset13 = shadowNDCPos.xy + vec2(0.0, 0.0);\n    vec2 offset14 = shadowNDCPos.xy + vec2(oneTap.x, 0.0);\n    vec2 offset15 = shadowNDCPos.xy + vec2(twoTap.x, 0.0);\n    vec2 offset16 = shadowNDCPos.xy + vec2(-twoTap.x, oneTap.y);\n    vec2 offset17 = shadowNDCPos.xy + vec2(-oneTap.x, oneTap.y);\n    vec2 offset18 = shadowNDCPos.xy + vec2(0.0, oneTap.y);\n    vec2 offset19 = shadowNDCPos.xy + vec2(oneTap.x, oneTap.y);\n    vec2 offset20 = shadowNDCPos.xy + vec2(twoTap.x, oneTap.y);\n    vec2 offset21 = shadowNDCPos.xy + vec2(-twoTap.x, twoTap.y);\n    vec2 offset22 = shadowNDCPos.xy + vec2(-oneTap.x, twoTap.y);\n    vec2 offset23 = shadowNDCPos.xy + vec2(0.0, twoTap.y);\n    vec2 offset24 = shadowNDCPos.xy + vec2(oneTap.x, twoTap.y);\n    vec2 offset25 = shadowNDCPos.xy + vec2(twoTap.x, twoTap.y);\n    float block1, block2, block3, block4, block5, block6, block7, block8, block9, block10, block11, block12, block13, block14, block15, block16, block17, block18, block19, block20, block21, block22, block23, block24, block25;\n    #if CC_SHADOWMAP_FORMAT == 1\n      block1 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset1), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset2), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset3), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset4), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset5), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset6), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset7), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset8), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block9 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset9), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block10 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset10), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block11 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset11), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block12 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset12), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block13 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset13), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block14 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset14), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block15 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset15), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block16 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset16), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block17 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset17), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block18 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset18), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block19 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset19), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block20 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset20), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block21 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset21), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block22 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset22), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block23 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset23), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block24 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset24), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block25 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset25), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    #else\n      block1 = step(shadowNDCPos.z, texture2D(shadowMap, offset1).x);\n      block2 = step(shadowNDCPos.z, texture2D(shadowMap, offset2).x);\n      block3 = step(shadowNDCPos.z, texture2D(shadowMap, offset3).x);\n      block4 = step(shadowNDCPos.z, texture2D(shadowMap, offset4).x);\n      block5 = step(shadowNDCPos.z, texture2D(shadowMap, offset5).x);\n      block6 = step(shadowNDCPos.z, texture2D(shadowMap, offset6).x);\n      block7 = step(shadowNDCPos.z, texture2D(shadowMap, offset7).x);\n      block8 = step(shadowNDCPos.z, texture2D(shadowMap, offset8).x);\n      block9 = step(shadowNDCPos.z, texture2D(shadowMap, offset9).x);\n      block10 = step(shadowNDCPos.z, texture2D(shadowMap, offset10).x);\n      block11 = step(shadowNDCPos.z, texture2D(shadowMap, offset11).x);\n      block12 = step(shadowNDCPos.z, texture2D(shadowMap, offset12).x);\n      block13 = step(shadowNDCPos.z, texture2D(shadowMap, offset13).x);\n      block14 = step(shadowNDCPos.z, texture2D(shadowMap, offset14).x);\n      block15 = step(shadowNDCPos.z, texture2D(shadowMap, offset15).x);\n      block16 = step(shadowNDCPos.z, texture2D(shadowMap, offset16).x);\n      block17 = step(shadowNDCPos.z, texture2D(shadowMap, offset17).x);\n      block18 = step(shadowNDCPos.z, texture2D(shadowMap, offset18).x);\n      block19 = step(shadowNDCPos.z, texture2D(shadowMap, offset19).x);\n      block20 = step(shadowNDCPos.z, texture2D(shadowMap, offset20).x);\n      block21 = step(shadowNDCPos.z, texture2D(shadowMap, offset21).x);\n      block22 = step(shadowNDCPos.z, texture2D(shadowMap, offset22).x);\n      block23 = step(shadowNDCPos.z, texture2D(shadowMap, offset23).x);\n      block24 = step(shadowNDCPos.z, texture2D(shadowMap, offset24).x);\n      block25 = step(shadowNDCPos.z, texture2D(shadowMap, offset25).x);\n    #endif\n    vec2 coef = fract(shadowNDCPos.xy * shadowMapResolution);\n    vec2 v1X1 = mix(vec2(block1, block6), vec2(block2, block7), coef.xx);\n    vec2 v1X2 = mix(vec2(block2, block7), vec2(block3, block8), coef.xx);\n    vec2 v1X3 = mix(vec2(block3, block8), vec2(block4, block9), coef.xx);\n    vec2 v1X4 = mix(vec2(block4, block9), vec2(block5, block10), coef.xx);\n    float v1 = mix(v1X1.x, v1X1.y, coef.y) + mix(v1X2.x, v1X2.y, coef.y) + mix(v1X3.x, v1X3.y, coef.y) + mix(v1X4.x, v1X4.y, coef.y);\n    vec2 v2X1 = mix(vec2(block6, block11), vec2(block7, block12), coef.xx);\n    vec2 v2X2 = mix(vec2(block7, block12), vec2(block8, block13), coef.xx);\n    vec2 v2X3 = mix(vec2(block8, block13), vec2(block9, block14), coef.xx);\n    vec2 v2X4 = mix(vec2(block9, block14), vec2(block10, block15), coef.xx);\n    float v2 = mix(v2X1.x, v2X1.y, coef.y) + mix(v2X2.x, v2X2.y, coef.y) + mix(v2X3.x, v2X3.y, coef.y) + mix(v2X4.x, v2X4.y, coef.y);\n    vec2 v3X1 = mix(vec2(block11, block16), vec2(block12, block17), coef.xx);\n    vec2 v3X2 = mix(vec2(block12, block17), vec2(block13, block18), coef.xx);\n    vec2 v3X3 = mix(vec2(block13, block18), vec2(block14, block19), coef.xx);\n    vec2 v3X4 = mix(vec2(block14, block19), vec2(block15, block20), coef.xx);\n    float v3 = mix(v3X1.x, v3X1.y, coef.y) + mix(v3X2.x, v3X2.y, coef.y) + mix(v3X3.x, v3X3.y, coef.y) + mix(v3X4.x, v3X4.y, coef.y);\n    vec2 v4X1 = mix(vec2(block16, block21), vec2(block17, block22), coef.xx);\n    vec2 v4X2 = mix(vec2(block17, block22), vec2(block18, block23), coef.xx);\n    vec2 v4X3 = mix(vec2(block18, block23), vec2(block19, block24), coef.xx);\n    vec2 v4X4 = mix(vec2(block19, block24), vec2(block20, block25), coef.xx);\n    float v4 = mix(v4X1.x, v4X1.y, coef.y) + mix(v4X2.x, v4X2.y, coef.y) + mix(v4X3.x, v4X3.y, coef.y) + mix(v4X4.x, v4X4.y, coef.y);\n    float fAvg = (v1 + v2 + v3 + v4) * 0.0625;\n    return fAvg;\n  }\n  bool GetShadowNDCPos(out vec3 shadowNDCPos, vec4 shadowPosWithDepthBias)\n  {\n  \tshadowNDCPos = shadowPosWithDepthBias.xyz / shadowPosWithDepthBias.w * 0.5 + 0.5;\n  \tif (shadowNDCPos.x < 0.0 || shadowNDCPos.x > 1.0 ||\n  \t\tshadowNDCPos.y < 0.0 || shadowNDCPos.y > 1.0 ||\n  \t\tshadowNDCPos.z < 0.0 || shadowNDCPos.z > 1.0) {\n  \t\treturn false;\n  \t}\n  \tshadowNDCPos.xy = cc_cameraPos.w == 1.0 ? vec2(shadowNDCPos.xy.x, 1.0 - shadowNDCPos.xy.y) : shadowNDCPos.xy;\n  \treturn true;\n  }\n  vec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias, vec3 matViewDir0, vec3 matViewDir1, vec3 matViewDir2, vec2 projScaleXY)\n  {\n    vec4 newShadowPos = shadowPos;\n    if (normalBias > EPSILON_LOWP)\n    {\n      vec3 viewNormal = vec3(dot(matViewDir0, worldNormal), dot(matViewDir1, worldNormal), dot(matViewDir2, worldNormal));\n      if (viewNormal.z < 0.1)\n        newShadowPos.xy += viewNormal.xy * projScaleXY * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n    }\n    return newShadowPos;\n  }\n  vec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias, mat4 matLightView, vec2 projScaleXY)\n  {\n  \tvec4 newShadowPos = shadowPos;\n  \tif (normalBias > EPSILON_LOWP)\n  \t{\n  \t\tvec4 viewNormal = matLightView * vec4(worldNormal, 0.0);\n  \t\tif (viewNormal.z < 0.1)\n  \t\t\tnewShadowPos.xy += viewNormal.xy * projScaleXY * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n  \t}\n  \treturn newShadowPos;\n  }\n  vec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias, float projScaleZ, float projBiasZ)\n  {\n  \tfloat coeffA = projScaleZ;\n  \tfloat coeffB = projBiasZ;\n  \tfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\n  \tviewSpacePos_z += viewspaceDepthBias;\n  \tvec4 result = shadowPos;\n  \tresult.z = viewSpacePos_z * coeffA + coeffB;\n  \treturn result;\n  }\n  float CCGetDirLightShadowFactorHard (vec4 shadowPosWithDepthBias) {\n\t  vec3 shadowNDCPos;\n\t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n\t\t  return 1.0;\n\t  }\n    return NativePCFShadowFactorHard(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n  }\n  float CCGetDirLightShadowFactorSoft (vec4 shadowPosWithDepthBias) {\n\t  vec3 shadowNDCPos;\n\t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n\t\t  return 1.0;\n\t  }\n    return NativePCFShadowFactorSoft(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n  }\n  float CCGetDirLightShadowFactorSoft3X (vec4 shadowPosWithDepthBias) {\n\t  vec3 shadowNDCPos;\n\t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n\t\t  return 1.0;\n\t  }\n    return NativePCFShadowFactorSoft3X(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n  }\n  float CCGetDirLightShadowFactorSoft5X (vec4 shadowPosWithDepthBias) {\n\t  vec3 shadowNDCPos;\n\t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n\t\t  return 1.0;\n\t  }\n    return NativePCFShadowFactorSoft5X(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n  }\n  float CCShadowFactorBase(vec4 shadowPos, vec3 N, vec2 shadowBias)\n  {\n    vec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N, shadowBias.y, cc_matLightView, cc_shadowProjInfo.xy);\n    pos = ApplyShadowDepthBias_Orthographic(pos, shadowBias.x, cc_shadowProjDepthInfo.x, cc_shadowProjDepthInfo.y);\n    float realtimeShadow = 1.0;\n    #if CC_DIR_SHADOW_PCF_TYPE == 3\n      realtimeShadow = CCGetDirLightShadowFactorSoft5X(pos);\n    #endif\n    #if CC_DIR_SHADOW_PCF_TYPE == 2\n      realtimeShadow =  CCGetDirLightShadowFactorSoft3X(pos);\n    #endif\n    #if CC_DIR_SHADOW_PCF_TYPE == 1\n      realtimeShadow = CCGetDirLightShadowFactorSoft(pos);\n    #endif\n    #if CC_DIR_SHADOW_PCF_TYPE == 0\n      realtimeShadow = CCGetDirLightShadowFactorHard(pos);\n    #endif\n    return mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n  }\n  #if CC_SUPPORT_CASCADED_SHADOW_MAP\n    int CCGetCSMLevel(out vec4 csmPos, out vec4 shadowProjDepthInfo, out vec4 shadowProjInfo, out vec3 shadowViewDir0, out vec3 shadowViewDir1, out vec3 shadowViewDir2, vec3 worldPos) {\n      int layer = -1;\n      highp float layerThreshold = cc_csmViewDir0[0].w;\n      for (int i = 0; i < 4; i++) {\n        vec4 shadowPos = cc_matCSMViewProj[i] * vec4(worldPos.xyz, 1.0);\n        vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n        if (clipPos.x >= (0.0 + layerThreshold) && clipPos.x <= (1.0 - layerThreshold) &&\n            clipPos.y >= (0.0 + layerThreshold) && clipPos.y <= (1.0 - layerThreshold) &&\n            clipPos.z >= 0.0 && clipPos.z <= 1.0 && layer < 0) {\n          csmPos = cc_matCSMViewProj[i] * vec4(worldPos.xyz, 1.0);\n          csmPos.xy = csmPos.xy * cc_csmAtlas[i].xy + cc_csmAtlas[i].zw;\n          shadowProjDepthInfo = cc_csmProjDepthInfo[i];\n          shadowProjInfo = cc_csmProjInfo[i];\n          shadowViewDir0 = cc_csmViewDir0[i].xyz;\n          shadowViewDir1 = cc_csmViewDir1[i].xyz;\n          shadowViewDir2 = cc_csmViewDir2[i].xyz;\n          layer = i;\n        }\n      }\n      return layer;\n    }\n    float CCCSMFactorBase(vec3 worldPos, vec3 N, vec2 shadowBias)\n    {\n      vec4 csmPos = vec4(1.0);\n      vec4 shadowProjDepthInfo, shadowProjInfo;\n      vec3 shadowViewDir0, shadowViewDir1, shadowViewDir2;\n      int level = CCGetCSMLevel(csmPos, shadowProjDepthInfo, shadowProjInfo, shadowViewDir0, shadowViewDir1, shadowViewDir2, worldPos);\n      if (level < 0) { return 1.0; }\n      vec4 pos = ApplyShadowDepthBias_FaceNormal(csmPos, N, shadowBias.y, shadowViewDir0, shadowViewDir1, shadowViewDir2, shadowProjInfo.xy);\n      pos = ApplyShadowDepthBias_Orthographic(pos, shadowBias.x, shadowProjDepthInfo.x, shadowProjDepthInfo.y);\n      float realtimeShadow = 1.0;\n      #if CC_DIR_SHADOW_PCF_TYPE == 3\n        realtimeShadow = CCGetDirLightShadowFactorSoft5X(pos);\n      #endif\n      #if CC_DIR_SHADOW_PCF_TYPE == 2\n        realtimeShadow = CCGetDirLightShadowFactorSoft3X(pos);\n      #endif\n      #if CC_DIR_SHADOW_PCF_TYPE == 1\n        realtimeShadow = CCGetDirLightShadowFactorSoft(pos);\n      #endif\n      #if CC_DIR_SHADOW_PCF_TYPE == 0\n        realtimeShadow = CCGetDirLightShadowFactorHard(pos);\n      #endif\n      return mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n    }\n  #else\n    int CCGetCSMLevel(out vec4 csmPos, out vec4 shadowProjDepthInfo, out vec4 shadowProjInfo, out vec3 shadowViewDir0, out vec3 shadowViewDir1, out vec3 shadowViewDir2, vec3 worldPos) {\n      return -1;\n    }\n    float CCCSMFactorBase(vec3 worldPos, vec3 N, vec2 shadowBias) {\n      vec4 shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\n      return CCShadowFactorBase(shadowPos, N, shadowBias);\n    }\n  #endif\n#endif\n#if CC_USE_IBL\n  uniform samplerCube cc_environment;\n  vec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n      #ifdef GL_EXT_shader_texture_lod\n        return texture2DLodEXT(tex, coord, lod);\n      #else\n        return texture2D(tex, coord, lod);\n      #endif\n  }\n  vec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n      #ifdef GL_EXT_shader_texture_lod\n        return textureCubeLodEXT(tex, coord, lod);\n      #else\n        return textureCube(tex, coord, lod);\n      #endif\n  }\n  vec3 unpackRGBE (vec4 rgbe) {\n    return rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n  }\n  #if CC_USE_DIFFUSEMAP\n    uniform samplerCube cc_diffuseMap;\n  #endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n  vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\n  vec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n    #if CC_USE_IBL\n    \tfloat mip = roughness * (mipCount - 1.0);\n    \tfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\n    \tfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\n    \tvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\n     \tvec4 filtered = textureCube(cc_environment, R);\n      #if CC_USE_IBL == 2\n      \tbiased.rgb = unpackRGBE(biased);\n      \tfiltered.rgb = unpackRGBE(filtered);\n      #else\n      \tbiased.rgb = SRGBToLinear(biased.rgb);\n      \tfiltered.rgb = SRGBToLinear(filtered.rgb);\n      #endif\n      return mix(biased.rgb, filtered.rgb, denoiseIntensity);\n    #else\n      return vec3(0.0, 0.0, 0.0);\n    #endif\n  }\n#endif\nstruct StandardSurface {\n  vec4 albedo;\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    vec3 position, position_fract_part;\n    #else\n    vec3 position;\n    #endif\n  vec3 normal;\n  vec3 emissive;\n  vec3 lightmap;\n  float lightmap_test;\n  float roughness;\n  float metallic;\n  float occlusion;\n  float specularIntensity;\n  #if CC_RECEIVE_SHADOW\n    vec2 shadowBias;\n  #endif\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\n  vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n  vec3 specular = mix(vec3(0.08 * s.specularIntensity), s.albedo.rgb, s.metallic);\n  vec3 position;\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    position = unpackHighpData(s.position, s.position_fract_part);\n    #else\n    position = s.position;\n    #endif\n  vec3 N = normalize(s.normal);\n  vec3 V = normalize(cc_cameraPos.xyz - position);\n  vec3 L = normalize(-cc_mainLitDir.xyz);\n  float NL = max(dot(N, L), 0.0);\n  float shadow = 1.0;\n  #if CC_RECEIVE_SHADOW && CC_SHADOW_TYPE == 2\n    if (NL > 0.0 && cc_mainLitDir.w > 0.0) {\n      if (cc_shadowLPNNInfo.w > 0.0) {\n        #if CC_DIR_LIGHT_SHADOW_TYPE == 2\n          shadow = CCCSMFactorBase(position, N, s.shadowBias);\n        #endif\n      } else {\n        #if CC_DIR_LIGHT_SHADOW_TYPE == 1\n          shadow = CCShadowFactorBase(shadowPos, N, s.shadowBias);\n        #endif\n      }\n    }\n  #endif\n  #if CC_USE_LIGHTMAP && !CC_FORWARD_ADD\n    vec3 lightmap = s.lightmap.rgb;\n    #if CC_USE_HDR\n        lightmap.rgb *= cc_exposure.w * cc_exposure.x;\n    #endif\n    vec3 finalColor = diffuse * lightmap.rgb * shadow;\n  #else\n    float NV = max(abs(dot(N, V)), 0.0);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 H = normalize(L + V);\n    float NH = max(dot(N, H), 0.0);\n    vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n    vec3 diffuseContrib = diffuse / PI;\n    vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n    vec3 dirlightContrib = (diffuseContrib + specularContrib);\n    dirlightContrib *= shadow;\n    finalColor *= dirlightContrib;\n  #endif\n  float fAmb = 0.5 - N.y * 0.5;\n  vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n  #if CC_USE_IBL\n    #if CC_USE_DIFFUSEMAP\n      vec4 diffuseMap = textureCube(cc_diffuseMap, N);\n      #if CC_USE_DIFFUSEMAP == 2\n        ambDiff = unpackRGBE(diffuseMap);\n      #else\n        ambDiff = SRGBToLinear(diffuseMap.rgb);\n      #endif\n    #endif\n    vec3 R = normalize(reflect(-V, N));\n    vec3 rotationDir = RotationVecFromAxisY(R.xyz, cc_surfaceTransform.z, cc_surfaceTransform.w);\n    #if USE_REFLECTION_DENOISE && !CC_IBL_CONVOLUTED\n      vec3 env = GetEnvReflectionWithMipFiltering(rotationDir, s.roughness, cc_ambientGround.w, 0.6);\n    #else\n      vec4 envmap = fragTextureLod(cc_environment, rotationDir, s.roughness * (cc_ambientGround.w - 1.0));\n      #if CC_USE_IBL == 2\n        vec3 env = unpackRGBE(envmap);\n      #else\n        vec3 env = SRGBToLinear(envmap.rgb);\n      #endif\n    #endif\n    finalColor += env * cc_ambientSky.w * specular * s.occlusion;\n  #endif\n  finalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\n  finalColor += s.emissive;\n  return vec4(finalColor, s.albedo.a);\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n  #define LIGHTS_PER_PASS 1\n#else\n  #define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\n#endif\n#endif\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = ACESToneMap(color.rgb);\n  #endif\n  color.rgb = LinearToSRGB(color.rgb);\n  return color;\n}\n    uniform vec4 albedo;\n    uniform vec4 albedoScaleAndCutoff;\n    uniform vec4 pbrParams;\n    uniform vec4 emissive;\n    uniform vec4 emissiveScaleParam;\n#if CC_USE_FOG != 4\n#endif\n#if !CC_USE_ACCURATE_FOG\nvarying mediump float v_fog_factor;\n#endif\nvarying highp vec4 v_shadowPos;\n#if CC_RECEIVE_SHADOW && CC_SHADOW_TYPE == 2\n#endif\n#if CC_USE_LIGHTMAP && !CC_FORWARD_ADD\n  varying vec3 v_luv;\n  uniform sampler2D cc_lightingMap;\n#endif\nvarying vec3 v_position;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec3 v_normal;\n#if USE_VERTEX_COLOR\n  varying vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n  uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = vec4(1.);\n  #if USE_VERTEX_COLOR\n    baseColor.rgb *= SRGBToLinear(v_color.rgb);\n    baseColor.a *= v_color.a;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture2D(albedoMap, ALBEDO_UV);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  #if USE_ALPHA_TEST\n    float alpha = baseColor.ALPHA_TEST_CHANNEL;\n    #if USE_PBR_MAP\n      vec4 res = texture2D(pbrMap, PBR_UV);\n      alpha *= res.r;\n    #endif\n    if (alpha < albedoScaleAndCutoff.w) discard;\n  #endif\n  float edge = step(alpha - .02, albedoScaleAndCutoff.w);\n  s.albedo = baseColor * (1. - edge) + albedo * edge;\n  s.albedo.rgb *= albedoScaleAndCutoff.xyz;\n  #if CC_USE_LIGHTMAP && !CC_FORWARD_ADD\n    vec4 lightColor = texture2D(cc_lightingMap, v_luv.xy);\n    s.lightmap = lightColor.rgb;\n    s.lightmap_test = v_luv.z;\n  #endif\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture2D(normalMap, NORMAL_UV).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * emissiveScaleParam.w) * normalize(v_tangent) +\n      (nmmp.y * emissiveScaleParam.w) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    packHighpData(s.position, s.position_fract_part, v_position);\n    #else\n    s.position = v_position;\n    #endif\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture2D(metallicRoughnessMap, PBR_UV);\n    pbr.z *= metallicRoughness.b;\n    pbr.y *= metallicRoughness.g;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.x *= texture2D(occlusionMap, PBR_UV).r;\n  #endif\n  s.occlusion = pbr.x;\n  s.roughness = pbr.y;\n  s.specularIntensity = 0.5;\n  s.metallic = pbr.z;\n  s.emissive = emissive.rgb * emissiveScaleParam.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture2D(emissiveMap, EMISSIVE_UV).rgb);\n  #endif\n}\nvec4 frag () {\n  StandardSurface s; surf(s);\n  vec4 color = CCStandardShadingBase(s, v_shadowPos);\n  return CCFragOutput(color);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]},{"name":"CCShadow","defines":[]},{"name":"CCCSM","defines":["CC_SUPPORT_CASCADED_SHADOW_MAP"]}],"samplerTextures":[{"name":"cc_shadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotShadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_environment","defines":["CC_USE_IBL"]},{"name":"cc_diffuseMap","defines":["CC_USE_DIFFUSEMAP"]}],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"CCLocal","defines":["!USE_INSTANCING"]},{"name":"CCForwardLight","defines":["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"cc_lightingMap","defines":["CC_USE_LIGHTMAP","!CC_FORWARD_ADD"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":135,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":107}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"},{"name":"CC_MORPH_TARGET_COUNT","type":"number","range":[2,8]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean"},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean"},{"name":"CC_USE_REAL_TIME_JOINT_TEXTURE","type":"boolean"},{"name":"CC_USE_FOG","type":"number","range":[0,4]},{"name":"CC_USE_ACCURATE_FOG","type":"boolean"},{"name":"CC_SUPPORT_CASCADED_SHADOW_MAP","type":"boolean"},{"name":"USE_VERTEX_COLOR","type":"boolean"},{"name":"USE_NORMAL_MAP","type":"boolean"},{"name":"HAS_SECOND_UV","type":"boolean"},{"name":"CC_FORWARD_ADD","type":"boolean"},{"name":"USE_TWOSIDE","type":"boolean"},{"name":"SAMPLE_FROM_RT","type":"boolean"},{"name":"CC_USE_DEBUG_VIEW","type":"number","range":[0,3]},{"name":"CC_SHADOWMAP_FORMAT","type":"number","range":[0,3]},{"name":"CC_DIR_SHADOW_PCF_TYPE","type":"number","range":[0,3]},{"name":"CC_USE_IBL","type":"number","range":[0,2]},{"name":"CC_USE_DIFFUSEMAP","type":"number","range":[0,2]},{"name":"USE_REFLECTION_DENOISE","type":"boolean"},{"name":"CC_SHADOW_TYPE","type":"number","range":[0,3]},{"name":"CC_DIR_LIGHT_SHADOW_TYPE","type":"number","range":[0,3]},{"name":"CC_USE_HDR","type":"boolean"},{"name":"CC_IBL_CONVOLUTED","type":"boolean"},{"name":"CC_PIPELINE_TYPE","type":"number","range":[0,1]},{"name":"CC_FORCE_FORWARD_SHADING","type":"boolean"},{"name":"USE_ALBEDO_MAP","type":"boolean"},{"name":"ALBEDO_UV","type":"string","options":["v_uv","v_uv1"]},{"name":"NORMAL_UV","type":"string","options":["v_uv","v_uv1"]},{"name":"PBR_UV","type":"string","options":["v_uv","v_uv1"]},{"name":"USE_PBR_MAP","type":"boolean"},{"name":"USE_METALLIC_ROUGHNESS_MAP","type":"boolean"},{"name":"USE_OCCLUSION_MAP","type":"boolean"},{"name":"USE_EMISSIVE_MAP","type":"boolean"},{"name":"EMISSIVE_UV","type":"string","options":["v_uv","v_uv1"]},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"ALPHA_TEST_CHANNEL","type":"string","options":["a","r"]}]},{"hash":958241198,"name":"../models/platform|shadow-caster-vs:vert|shadow-caster-fs:frag","blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1},{"name":"albedo","type":16,"count":1},{"name":"albedoScaleAndCutoff","type":16,"count":1},{"name":"pbrParams","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScaleParam","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"albedoMap","type":28,"count":1,"stageFlags":16,"binding":1,"defines":["USE_ALBEDO_MAP"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBias","format":21,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","CC_RECEIVE_SHADOW"]},{"name":"a_vertexId","format":11,"location":12,"defines":["CC_USE_MORPH"]},{"name":"a_texCoord1","format":21,"location":13,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl1":{"vert":"\n  precision highp float;\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183f\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define CC_LIGHTMAP_DISABLED 0\n  #define CC_LIGHTMAP_ALL_IN_ONE 1\n  #define CC_LIGHTMAP_CC_LIGHTMAP_INDIRECT_OCCLUSION 2\n  struct StandardVertInput {\n    highp vec4 position;\n    vec3 normal;\n    vec4 tangent;\n  };\n  attribute vec3 a_position;\n  attribute vec3 a_normal;\n  attribute vec2 a_texCoord;\n  attribute vec4 a_tangent;\n  #if CC_USE_SKINNING\n      attribute vec4 a_joints;\n    attribute vec4 a_weights;\n  #endif\n  #if USE_INSTANCING\n    #if CC_USE_BAKED_ANIMATION\n      attribute highp vec4 a_jointAnimInfo;\n    #endif\n    attribute vec4 a_matWorld0;\n    attribute vec4 a_matWorld1;\n    attribute vec4 a_matWorld2;\n    #if CC_USE_LIGHTMAP\n      attribute vec4 a_lightingMapUVParam;\n    #endif\n    #if CC_RECEIVE_SHADOW\n      attribute vec2 a_localShadowBias;\n    #endif\n  #endif\n  #if CC_USE_MORPH\n      attribute float a_vertexId;\n      int getVertexId() {\n        return int(a_vertexId);\n      }\n  #endif\n  highp float decode32 (highp vec4 rgba) {\n    rgba = rgba * 255.0;\n    highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n    highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n    highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n    return Sign * exp2(Exponent - 23.0) * Mantissa;\n  }\n  #if CC_USE_MORPH\n    uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n    #if CC_MORPH_TARGET_HAS_POSITION\n      uniform sampler2D cc_PositionDisplacements;\n    #endif\n    #if CC_MORPH_TARGET_HAS_NORMAL\n      uniform sampler2D cc_NormalDisplacements;\n    #endif\n    #if CC_MORPH_TARGET_HAS_TANGENT\n      uniform sampler2D cc_TangentDisplacements;\n    #endif\n    vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n      float pixelIndexF = float(pixelIndex);\n      float x = mod(pixelIndexF, textureResolution.x);\n      float y = floor(pixelIndexF / textureResolution.x);\n      return vec2(x, y);\n    }\n    vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n      return (vec2(location.x, location.y) + .5) / textureResolution;\n    }\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n          int pixelIndex = elementIndex;\n          vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n          vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n          return texture2D(tex, uv);\n        }\n    #else\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex * 4;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n        return vec4(\n          decode32(texture2D(tex, x)),\n          decode32(texture2D(tex, y)),\n          decode32(texture2D(tex, z)),\n          1.0\n        );\n      }\n    #endif\n    float getDisplacementWeight(int index) {\n      int quot = index / 4;\n      int remainder = index - quot * 4;\n      if (remainder == 0) {\n        return cc_displacementWeights[quot].x;\n      } else if (remainder == 1) {\n        return cc_displacementWeights[quot].y;\n      } else if (remainder == 2) {\n        return cc_displacementWeights[quot].z;\n      } else {\n        return cc_displacementWeights[quot].w;\n      }\n    }\n    vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n    #if CC_MORPH_PRECOMPUTED\n      return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n    #else\n      vec3 result = vec3(0, 0, 0);\n      int nVertices = int(cc_displacementTextureInfo.z);\n      for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n        result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n      }\n      return result;\n    #endif\n    }\n    #if CC_MORPH_TARGET_HAS_POSITION\n    vec3 getPositionDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n    #endif\n    #if CC_MORPH_TARGET_HAS_NORMAL\n    vec3 getNormalDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n    #endif\n    #if CC_MORPH_TARGET_HAS_TANGENT\n    vec3 getTangentDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n    #endif\n    void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n      int vertexId = getVertexId();\n    #if CC_MORPH_TARGET_HAS_POSITION\n      position.xyz = position.xyz + getPositionDisplacement(vertexId);\n    #endif\n    #if CC_MORPH_TARGET_HAS_NORMAL\n      normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n    #endif\n    #if CC_MORPH_TARGET_HAS_TANGENT\n      tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n    #endif\n    }\n    void applyMorph (inout vec4 position) {\n    #if CC_MORPH_TARGET_HAS_POSITION\n      position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n    #endif\n    }\n  #endif\n  #if CC_USE_SKINNING\n    #if CC_USE_BAKED_ANIMATION\n      uniform highp vec4 cc_jointTextureInfo;\n      uniform highp vec4 cc_jointAnimInfo;\n      uniform highp sampler2D cc_jointTexture;\n      void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n      {\n        #if USE_INSTANCING\n          highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n        #else\n          highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n        #endif\n        invSize = cc_jointTextureInfo.w;\n        highp float tempY = floor(temp * invSize);\n        x = floor(temp - tempY * cc_jointTextureInfo.x);\n        y = (tempY + 0.5) * invSize;\n      }\n    #else\n      #if CC_USE_REAL_TIME_JOINT_TEXTURE\n        uniform highp sampler2D cc_realtimeJoint;\n      #else\n        uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n      #endif\n    #endif\n    #if CC_USE_BAKED_ANIMATION\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          highp float x, y, invSize;\n          CCGetJointTextureCoords(3.0, i, x, y, invSize);\n          vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n          vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n          vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n          highp float x, y, invSize;\n          CCGetJointTextureCoords(12.0, i, x, y, invSize);\n          vec4 v1 = vec4(\n            decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      #if CC_USE_REAL_TIME_JOINT_TEXTURE\n        #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n          mat4 getJointMatrix (float i) {\n            float x = i;\n            vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n            vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n            vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n            return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n          }\n        #else\n          mat4 getJointMatrix (float i) {\n           float x = 4.0 * i;\n            vec4 v1 = vec4(\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n            );\n            vec4 v2 = vec4(\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n            );\n            vec4 v3 = vec4(\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n            );\n            return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n          }\n        #endif\n      #else\n        mat4 getJointMatrix (float i) {\n          int idx = int(i);\n          vec4 v1 = cc_joints[idx * 3];\n          vec4 v2 = cc_joints[idx * 3 + 1];\n          vec4 v3 = cc_joints[idx * 3 + 2];\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #endif\n    mat4 skinMatrix () {\n      vec4 joints = vec4(a_joints);\n      return getJointMatrix(joints.x) * a_weights.x\n           + getJointMatrix(joints.y) * a_weights.y\n           + getJointMatrix(joints.z) * a_weights.z\n           + getJointMatrix(joints.w) * a_weights.w;\n    }\n    void CCSkin (inout vec4 position) {\n      mat4 m = skinMatrix();\n      position = m * position;\n    }\n    void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n      mat4 m = skinMatrix();\n      position = m * position;\n      normal = (m * vec4(normal, 0.0)).xyz;\n      tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n    }\n  #endif\n  void CCVertInput(inout StandardVertInput In)\n  {\n        In.position = vec4(a_position, 1.0);\n        In.normal = a_normal;\n        In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In.position, In.normal, In.tangent);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In.position, In.normal, In.tangent);\n    #endif\n  }\n  #if !USE_INSTANCING\n    uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n  #endif\n  void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n  {\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  }\n            uniform vec4 tilingOffset;\n  uniform highp mat4 cc_matLightViewProj;\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #endif\n  #if HAS_SECOND_UV || CC_USE_LIGHTMAP\n    attribute vec2 a_texCoord1;\n  #endif\n  varying vec2 v_uv;\n  varying vec2 v_uv1;\n  varying vec4 v_worldPos;\n  varying float v_clip_depth;\n  vec4 vert () {\n    StandardVertInput In;\n    CCVertInput(In);\n    mat4 matWorld, matWorldIT;\n    CCGetWorldMatrixFull(matWorld, matWorldIT);\n    v_worldPos = matWorld * In.position;\n    vec4 clipPos = cc_matLightViewProj * v_worldPos;\n    v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n    #if HAS_SECOND_UV\n      v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n    #endif\n    v_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\n    return clipPos;\n  }\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n   uniform vec4 albedo;\n   uniform vec4 albedoScaleAndCutoff;\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\n  ret = fract(ret);\n  ret -= vec4(ret.yzw, 0.0) / 255.0;\n  return ret;\n}\nuniform highp mat4 cc_matLightView;\n  uniform mediump vec4 cc_shadowNFLSInfo;\n  uniform mediump vec4 cc_shadowLPNNInfo;\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #endif\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define CC_LIGHTMAP_DISABLED 0\n#define CC_LIGHTMAP_ALL_IN_ONE 1\n#define CC_LIGHTMAP_CC_LIGHTMAP_INDIRECT_OCCLUSION 2\nfloat GetLinearDepthFromViewSpace(vec3 viewPos, float near, float far) {\n  float dist = length(viewPos);\n  return (dist - near) / (far - near);\n}\nfloat CCGetLinearDepth(vec3 worldPos, float viewSpaceBias) {\n\tvec4 viewPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  viewPos.z += viewSpaceBias;\n\treturn GetLinearDepthFromViewSpace(viewPos.xyz, cc_shadowNFLSInfo.x, cc_shadowNFLSInfo.y);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n\treturn CCGetLinearDepth(worldPos, 0.0);\n}\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotShadowMap;\n  #if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #else\n  #endif\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = albedo;\n  #if USE_ALBEDO_MAP\n    baseColor *= texture2D(albedoMap, ALBEDO_UV);\n  #endif\n  #if USE_ALPHA_TEST\n    if (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  if(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      return vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n    }\n  }\n  if (cc_shadowLPNNInfo.y > 0.000001) {\n    return packDepthToRGBA(v_clip_depth);\n  }\n  return vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCShadow","defines":[]},{"name":"CCCSM","defines":["CC_SUPPORT_CASCADED_SHADOW_MAP"]},{"name":"CCGlobal","defines":["CC_RECEIVE_SHADOW"]},{"name":"CCCamera","defines":["CC_RECEIVE_SHADOW"]}],"samplerTextures":[{"name":"cc_shadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotShadowMap","defines":["CC_RECEIVE_SHADOW"]}],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"CCLocal","defines":["!USE_INSTANCING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":91,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":107}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"},{"name":"CC_MORPH_TARGET_COUNT","type":"number","range":[2,8]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean"},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean"},{"name":"CC_USE_REAL_TIME_JOINT_TEXTURE","type":"boolean"},{"name":"CC_SUPPORT_CASCADED_SHADOW_MAP","type":"boolean"},{"name":"HAS_SECOND_UV","type":"boolean"},{"name":"USE_ALBEDO_MAP","type":"boolean"},{"name":"ALBEDO_UV","type":"string","options":["v_uv","v_uv1"]},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"ALPHA_TEST_CHANNEL","type":"string","options":["a","r"]}]}],[{"name":"opaque","passes":[{"program":"../models/platform|standard-vs:vert|standard-fs:frag","properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"linear":true,"type":16,"value":[1,1,1,1],"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"handleInfo":["pbrParams",2,13]},"SpecularIntensity":{"type":13,"value":[0.5],"handleInfo":["pbrParams",3,13]},"emissive":{"linear":true,"type":16,"value":[0,0,0,1]},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"normalStrenth":{"type":13,"value":[1],"handleInfo":["emissiveScaleParam",3,13]},"mainTexture":{"value":"grey","type":28,"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]},"pbrParams":{"type":16,"value":[1,0.8,0.6,0.5]},"emissiveScaleParam":{"type":16,"value":[1,1,1,1]},"albedoMap":{"type":28,"value":"grey"}}},{"phase":"forward-add","propertyIndex":0,"program":"../models/platform|standard-vs:vert|standard-fs:frag","embeddedMacros":{"CC_FORWARD_ADD":true},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":1,"blendSrcAlpha":0,"blendDstAlpha":1}]},"depthStencilState":{"depthFunc":2,"depthTest":true,"depthWrite":false}},{"phase":"shadow-caster","propertyIndex":0,"program":"../models/platform|shadow-caster-vs:vert|shadow-caster-fs:frag","rasterizerState":{"cullMode":1},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["albedoScaleAndCutoff",3,13]},"mainTexture":{"value":"grey","type":28,"handleInfo":["albedoMap",0,28]},"albedo":{"type":16,"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]},"albedoMap":{"type":28,"value":"grey"}}}]},{"name":"transparent","passes":[{"program":"../models/platform|standard-vs:vert|standard-fs:frag","embeddedMacros":{"CC_FORCE_FORWARD_SHADING":true},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":true},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"linear":true,"type":16,"value":[1,1,1,1],"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"handleInfo":["pbrParams",2,13]},"SpecularIntensity":{"type":13,"value":[0.5],"handleInfo":["pbrParams",3,13]},"emissive":{"linear":true,"type":16,"value":[0,0,0,1]},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"normalStrenth":{"type":13,"value":[1],"handleInfo":["emissiveScaleParam",3,13]},"mainTexture":{"value":"grey","type":28,"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]},"pbrParams":{"type":16,"value":[1,0.8,0.6,0.5]},"emissiveScaleParam":{"type":16,"value":[1,1,1,1]},"albedoMap":{"type":28,"value":"grey"}}},{"phase":"forward-add","propertyIndex":0,"program":"../models/platform|standard-vs:vert|standard-fs:frag","embeddedMacros":{"CC_FORWARD_ADD":true},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":1,"blendSrcAlpha":0,"blendDstAlpha":1}]},"depthStencilState":{"depthFunc":2,"depthTest":true,"depthWrite":false}},{"phase":"shadow-caster","propertyIndex":0,"program":"../models/platform|shadow-caster-vs:vert|shadow-caster-fs:frag","rasterizerState":{"cullMode":1},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["albedoScaleAndCutoff",3,13]},"mainTexture":{"value":"grey","type":28,"handleInfo":["albedoMap",0,28]},"albedo":{"type":16,"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]},"albedoMap":{"type":28,"value":"grey"}}}]}]]],0,0,[],[],[]],[[[28,"Material.002",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{},{},{}],[[[{"metallic":0},"mainColor",8,[4,4280420693]],{},{}],11,0,0]]],0,0,[0],[5],[2]],[[[21,".bin",1722285571,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":24384,"length":7488,"count":1872,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":36720,"length":1440,"count":360,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[2],"indexView":{"offset":57408,"length":5760,"count":1440,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":24384,"count":508,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":31872,"length":4848,"count":101,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":38160,"length":19248,"count":401,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.009129353798925877,-0.009195313788950443,-0.010000002570450306],"maxPosition",8,[1,0.009129352867603302,0.009195313788950443,0.01107693463563919]]],-1],0,0,[],[],[]],[[[155,"Skin-0",2905194985,["Armature/Root","Armature/Root/chest","Armature/Root/chest/head","Armature/Root/chest/shoulder.L","Armature/Root/chest/shoulder.L/arm.L","Armature/Root/chest/shoulder.L/arm.L/hand.L","Armature/Root/chest/shoulder.R","Armature/Root/chest/shoulder.R/arm.R","Armature/Root/chest/shoulder.R/arm.R/hand.R","Armature/Root/thug.L","Armature/Root/thug.L/leg.L","Armature/Root/thug.L/leg.L/foot.L","Armature/Root/thug.R","Armature/Root/thug.R/leg.R","Armature/Root/thug.R/leg.R/foot.R","Armature/Bone.013","Armature/Bone.013/Bone.014","Armature/Bone.013/Bone.014/Bone.015","Armature/Bone.013/Bone.014/Bone.015/Bone.016","Armature/Bone.013/Bone.014/Bone.015/Bone.016/Bone.017","Armature/Bone.013/Bone.014/Bone.015/Bone.016/Bone.017/Bone.018"],[[[7,1,0,0,0,0,1,1.6292067073209182e-7,0,0,-1.6292067073209182e-7,1,0,0,-0.0020000003278255463,0,1],[7,1,0,0,0,0,1,1.6292067073209182e-7,0,0,-1.6292067073209182e-7,1,0,0,-0.004999999422580004,0,1],[7,1,4.6200044149776e-15,2.3841850804728892e-7,0,6.549856834681123e-8,0.9615240097045898,-0.2747209966182709,0,-2.2924513132238644e-7,0.27472102642059326,0.9615240097045898,0,-5.56738211088259e-10,-0.008172953501343727,0.0023351297713816166,1],[7,-0.22485953569412231,0.9743912816047668,2.4612033300286384e-8,0,-0.9743913412094116,-0.22485952079296112,2.695728085200244e-7,0,2.68203677933343e-7,3.663426539901593e-8,1,0,0.00840225163847208,-0.0008319804328493774,0.0004999990342184901,1],[7,-0.514424204826355,0.857492983341217,0.008581394329667091,0,-0.857373833656311,-0.5144956707954407,0.014302489347755909,0,0.01667937822639942,8.38955784843165e-8,0.9998608231544495,0,0.008667816407978535,0.0005316445603966713,0.00035547689185477793,1],[7,-0.7070086002349854,0.7071068286895752,0.011794142425060272,0,-0.7070086598396301,-0.7071068286895752,0.01179430540651083,0,0.0166795551776886,1.1443719927228813e-7,0.9998608231544495,0,0.00870454590767622,0.0009192384895868599,0.0003548625099938363,1],[7,-0.22485953569412231,-0.9743912816047668,-6.780862538136034e-9,0,0.9743913412094116,-0.22485952079296112,1.9230441239415086e-7,0,-1.8890450803610292e-7,3.663426895172961e-8,1,0,-0.00840225163847208,-0.0008319804328493774,0.0004999997327104211,1],[7,-0.514424204826355,-0.8574931025505066,0.008581268601119518,0,0.8573740124702454,-0.5144956111907959,-0.014301957562565804,0,0.016678858548402786,8.331929990390563e-8,0.999860942363739,0,-0.008651137351989746,0.0005316442693583667,0.000644381798338145,1],[7,-0.7070086002349854,-0.7071068286895752,0.011794202029705048,0,0.7070086598396301,-0.7071068286895752,-0.011794038116931915,0,0.01667940989136696,1.1667976451690265e-7,0.9998608231544495,0,-0.008687865920364857,0.0009192387806251645,0.0006449991487897933,1],[7,-1,1.4611856613555574e-7,3.4428293815835787e-7,0,-2.1080012402308057e-7,-0.9805808663368225,-0.19611680507659912,0,3.089396329869487e-7,-0.19611601531505585,0.9805849194526672,0,0.0020000007934868336,0.0038634876254945993,0.0010786425555124879,1],[7,-1,3.392420892811554e-12,5.642668838845566e-7,0,1.6593938312325918e-7,-0.9557802081108093,0.29408708214759827,0,5.39313816716458e-7,0.29408660531044006,0.9557816982269287,0,0.0020000000949949026,0.002117421478033066,0.00008087198511930183,1],[7,-1,9.37109764787003e-12,3.8941328739383607e-7,0,3.8640490629404667e-7,-0.12403640151023865,0.9922779202461243,0,4.831051114706497e-8,0.9922819137573242,0.12403590232133865,0,0.0019999996293336153,0.0003845102619379759,-0.0006573848659172654,1],[7,-1,1.4611856613555574e-7,3.4428293815835787e-7,0,-2.1080012402308057e-7,-0.9805808663368225,-0.19611680507659912,0,3.089396329869487e-7,-0.19611601531505585,0.9805849194526672,0,-0.0019999986980110407,0.0038634880911558867,0.0010786439524963498,1],[7,-1,2.5500357034302645e-12,8.026855766729568e-7,0,2.3605562660122814e-7,-0.9557802081108093,0.29408708214759827,0,7.671884532101103e-7,0.29408660531044006,0.9557816982269287,0,-0.0019999993965029716,0.002117421478033066,0.00008087482274277136,1],[7,-1,9.529728568768991e-12,8.662493655720027e-7,0,8.595586109549913e-7,-0.12403640151023865,0.9922779202461243,0,1.0745544187784617e-7,0.9922819137573242,0.12403590232133865,0,-0.0020000003278255463,0.00038451029104180634,-0.0006573823629878461,1],[7,1,7.207136532808456e-15,2.3841860752327193e-7,0,-1.8617367913975613e-7,0.6246949434280396,0.7808689475059509,0,-1.4893889499489887e-7,-0.7808688879013062,0.6246950030326843,0,1.8617368757745112e-10,-0.004466569516807795,-0.0007808688678778708,1],[7,1,5.965337527739185e-15,2.384185791015625e-7,0,-1.7519083428396698e-7,0.6782799363136292,0.7348036766052246,0,-1.6171452443813905e-7,-0.7348036170005798,0.6782799363136292,0,7.816240016333964e-11,-0.006426704116165638,-0.0003278367221355438,1],[7,1,-3.109562981455996e-15,2.384185791015625e-7,0,-2.030512149531205e-7,0.5240970849990845,0.8516585230827332,0,-1.2495451073846198e-7,-0.8516583442687988,0.5240971446037292,0,4.52960585706208e-10,-0.007979381829500198,-0.001899854512885213,1],[7,1,2.4714544375869368e-14,2.3841860752327193e-7,0,-2.380071748575574e-7,-0.058722082525491714,0.9982743263244629,0,1.4000463899321858e-8,-0.9982743263244629,-0.05872208997607231,0,1.6702504934684725e-9,-0.0067001823335886,-0.007005535997450352,1],[7,1,2.1684039746481455e-23,2.384185791015625e-7,0,-2.070053142233519e-7,-0.4961388409137726,0.8682430982589722,0,1.182887388040399e-7,-0.8682430982589722,-0.4961388409137726,0,2.3864754616909067e-9,-0.004415638744831085,-0.010009600780904293,1],[7,1,-1.6298138714814468e-14,2.3841860752327193e-7,0,-1.4305120998869825e-7,-0.8000001311302185,0.6000000238418579,0,1.9073489454513037e-7,-0.6000000834465027,-0.7999999523162842,0,2.7608879626939142e-9,-0.0015600031474605203,-0.011579999700188637,1]],8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[153],[76,"meo",[-3,-4],[[156,-2,[14,"9cyYalR9VX56Kq2cVGLXMi"]]],[2,"efm9gKLqBdZoJ0fWrBSMWn",-1,0]],[77,"Root",[-5,-6,-7],[2,"faWW/baGVZYLoK2OdLiNgs",1,0],[1,0,6.617444752512802e-26,0.0020000000949949026],[3,0.7071068407911908,0,0,0.7071067215818992],[1,90.00000965934633,0,0]],[90,"chest",2,[[[15,"head",-8,[2,"931EUTcyNXUYF8YKPDCNAD",1,0],[1,0,0.003499999875202775,0],[3,0.13870121551057701,1.1805701671275632e-7,1.6534471584488844e-8,0.9903342732713407],[1,15.945396319928788,0.000013134777683149725,0.0000037527939878095426]],-9,-10],4,1,1],[2,"3cawYoppBTMqEEDmlpsS71",1,0],[1,0,0.0029999995604157448,0]],[78,"Armature",1,[2,-11],[2,"fdm7vWxzlSHZvPCH7tjTua",1,0],[3,-0.7071068407911908,0,0,0.7071067215818992],[1,100,100,100],[1,-90.00000965934633,0,0]],[16,"shoulder.L",3,[-12],[2,"81Zd4gg7hazavr8TlUTuNj",1,0],[1,0.0027000000700354576,0.0030000004917383194,-0.0004999999655410647],[3,-4.2828641772497106e-8,-3.407071587210049e-8,-0.7825788820149023,0.6225514383762216],[1,-179.99997282428285,-179.9999721100542,-77.00538870881847]],[20,"arm.L",5,[[15,"hand.L",-13,[2,"52CLKQRNldKrXvRlieHJzz",1,0],[1,5.657784796220255e-10,0.0017492850311100483,-4.6566129424663316e-11],[3,-0.0020379360686947905,-9.991375993003808e-8,-0.12216631742091112,0.9925075504520775],[1,-0.23891399330403157,-0.029419029258455097,-14.034256695181778]]],[2,"97x6nLWbNRk6K9SrBR9M1e",1,0],[1,-8.742914170412064e-10,0.0013341665035113692,-1.1652998878342036e-11],[3,-0.001302437612207531,-0.008237522952416134,-0.15616291620452538,0.9876961022877295],[1,-0.3099370548142103,-1.004683952035317,-17.966540763949123]],[16,"shoulder.R",3,[-14],[2,"09q14L65hfLr1i80SUi/Zr",1,0],[1,-0.0027000000700354576,0.0030000004917383194,-0.0004999999655410647],[3,-1.1799722923109412e-8,9.38682638479435e-9,0.7825788820149036,0.6225514383762226],[1,-179.9999925128156,179.9999923160384,77.00538870881992]],[20,"arm.R",7,[[15,"hand.R",-15,[2,"b3Nve4oI9bsIlwFwQFvDgw",1,0],[1,8.963979558629376e-11,0.0017492850311100483,-6.053596512956005e-11],[3,0.002037925824189231,-2.6141534461604205e-7,0.1221663174234581,0.9925075504727697],[1,0.23891512275208823,-0.029437814625342052,14.03425665690335]]],[2,"e0gP5TD4RTvLyd3FEsEmZX",1,0],[1,8.346418556293145e-10,0.0013341665035113692,-7.392115565496571e-12],[3,0.001302408159700908,-0.008237474527244878,0.15616291627281423,0.9876961027196416],[1,0.30993263962240936,-1.0046776359319758,17.96654081702425]],[43,"thug.L",2,[-16],[2,"beXMgjcoxV34gVEFsrJsDU",1,0],[1,0.001999999862164259,0.0019999996293336153,-0.0003000000142492354],[3,1.611558112607966e-7,-0.09853743064818317,0.9951333452162202,-5.990958158830257e-8],[1,1,0.9999998211860657,0.999995768070221],[1,168.69008909606958,-179.9999822992498,-0.000008651422283315931]],[20,"leg.L",9,[[15,"foot.L",-17,[2,"65ErgIdQRV7bHd/XqF+q0I",1,0],[1,1.0337780631530791e-10,0.0013601488899439573,-2.630635292932837e-11],[3,0.5429700504236432,7.341276950254782e-8,-2.5890818214658207e-7,0.8397520612316912],[1,65.7721056902458,0.00002317361185514472,-0.000020346618755850127]]],[2,"88xSg48jpejq2Er/iLGznD",1,0],[1,1.0720795085017443e-10,0.0020396076142787933,1.801360796638285e-11],[3,0.2454151992838495,-1.245587259804625e-7,-1.823084855477517e-7,0.9694180625305161],[1,28.41274407065012,-0.000008709898766959405,-0.0000237550299652333]],[43,"thug.R",2,[-18],[2,"1cZ239KYxUlK1YjyESAMqX",1,0],[1,-0.001999999862164259,0.0019999996293336153,-0.0003000000142492354],[3,1.611558112607966e-7,-0.09853743064818317,0.9951333452162202,-5.990958158830257e-8],[1,1,0.9999998211860657,0.999995768070221],[1,168.69008909606958,-179.9999822992498,-0.000008651422283315931]],[20,"leg.R",11,[[15,"foot.R",-19,[2,"67Ph+pF11YiZlKua/q+95v",1,0],[1,8.409596630176708e-11,0.0013601488899439573,-3.143540636130204e-11],[3,0.5429700504236069,-2.6693045460981135e-8,-4.530891055936719e-7,0.839752061231635],[1,65.77210569025179,0.000025622474877877997,-0.00004526091958093381]]],[2,"4bhvdbyBhW2oTQSQyPsRgN",1,0],[1,-4.1803661227080013e-11,0.0020396076142787933,-1.8013394595395305e-11],[3,0.24541519928384292,-2.4012237870326864e-7,-2.1156425887569399e-7,0.9694180625304901],[1,28.41274407064646,-0.000020724787162397835,-0.00003025490978968792]],[16,"Bone.013",4,[-20],[2,"21clk8CUFc9qgDu1cC3AhF",1,0],[1,0,0.0029999997932463884,0.0034000000450760126],[3,0.33100697291567066,1.1248926731615147e-7,3.945910607763179e-8,0.9436283081177621],[1,38.6598120769526,0.000010666963569866925,0.000008533571677963053]],[16,"Bone.014",13,[-21],[2,"b0vrheqs5f07dhSr7W3n8E",1,0],[1,-7.105427198782324e-17,0.0019209373276680708,2.98023217215615e-10],[3,0.03533185995748929,-1.7517063098698426e-17,8.423773624436817e-9,0.9993756349200957],[1,4.049575755472598,-3.4105611554751695e-8,9.64690656975609e-7]],[16,"Bone.015",14,[-22],[2,"090W/BhjNZAaC0PZtLxbaT",1,0],[1,-8.881783998477905e-18,0.0017691812245175242,3.725290215195187e-11],[3,-0.09673078145044477,1.581937490980499e-16,-2.306241546879882e-8,0.9953105826424161],[1,-11.101890282569993,-2.5563604236057035e-7,-0.0000026303651493223714]],[16,"Bone.016",15,[-23],[2,"c2e8IrdN9Rorsgveksna8l",1,0],[1,3.552713599391162e-17,0.0015264335088431835,-1.490116086078075e-10],[3,-0.3004889748296358,2.4241210200353653e-15,-7.164216151999423e-8,0.9537852882099982],[1,-34.9739488878311,-0.000002466890110623257,-0.00000783018336782896]],[20,"Bone.017",16,[[15,"Bone.018",-24,[2,"42DAzP1fhSUrI3+O+uvlLR",1,0],[1,2.1316281596346973e-16,0.0016124519752338529,-8.940696516468449e-10],[3,-0.20266102473266598,1.4654730631021876e-14,-4.831815355602884e-8,0.9792489515206556],[1,-23.385223634156645,-0.0000011221025661532162,-0.000005421957389991858]]],[2,"798RM+eWlf/o/6lJqD0xzr",1,0],[1,6.217248964370656e-17,0.0017029383452609181,-2.60770322002557e-10],[3,-0.2281674307621304,-3.0268091489211378e-15,-5.439935463956127e-8,0.9736219099524237],[1,-26.37840941649828,-0.0000014223292156493087,-0.000006069273498190564]],[79,"Default.1",1,[[157,-25,[14,"9azQtVrlBZAZpKxAnsJyeF"],[0],[13],1,1,2]],[2,"26dmFhjIJZA5IJS2smOY18",1,0],[1,100,100,100]]],0,[0,10,1,0,0,1,0,-1,4,0,-2,18,0,-1,3,0,-2,9,0,-3,11,0,2,3,0,-2,5,0,-3,7,0,-2,13,0,-1,6,0,2,6,0,-1,8,0,2,8,0,-1,10,0,2,10,0,-1,12,0,2,12,0,-1,14,0,-1,15,0,-1,16,0,-1,17,0,2,17,0,0,18,0,13,1,2,2,4,25],[0,0,0],[-1,7,48],[71,72,73]],[[[21,".bin",1724500291,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":57520,"length":11280,"count":2820,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":57520,"count":719,"stride":80},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}],"jointMaps":[[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]]},"minPosition",8,[1,-0.007242450024932623,0.000060999998822808266,-0.011607300490140915],"maxPosition",8,[1,0.007309610024094582,0.01654047891497612,0.004805139731615782]]],-1],0,0,[],[],[]],[[[27,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[9,5],[6,7]],[[[26,"SFProTextRegular",30,{"commonHeight":37,"fontSize":30,"atlasName":"SFProTextRegular.png","fontDefDictionary":{"0":{"xOffset":0,"yOffset":-1,"xAdvance":30,"rect":{"x":396,"y":205,"width":30,"height":39}},"10":{"xOffset":-1,"yOffset":0,"xAdvance":0,"rect":{"x":0,"y":0,"width":0,"height":0}},"32":{"xOffset":-1,"yOffset":0,"xAdvance":8,"rect":{"x":0,"y":0,"width":0,"height":0}},"33":{"xOffset":1,"yOffset":6,"xAdvance":9,"rect":{"x":352,"y":156,"width":7,"height":25}},"34":{"xOffset":1,"yOffset":6,"xAdvance":13,"rect":{"x":284,"y":205,"width":11,"height":11}},"35":{"xOffset":-1,"yOffset":6,"xAdvance":19,"rect":{"x":417,"y":181,"width":21,"height":24}},"36":{"xOffset":1,"yOffset":4,"xAdvance":19,"rect":{"x":356,"y":99,"width":18,"height":28}},"37":{"xOffset":0,"yOffset":6,"xAdvance":24,"rect":{"x":374,"y":156,"width":24,"height":25}},"38":{"xOffset":0,"yOffset":6,"xAdvance":21,"rect":{"x":398,"y":156,"width":22,"height":25}},"39":{"xOffset":1,"yOffset":6,"xAdvance":8,"rect":{"x":295,"y":205,"width":5,"height":11}},"40":{"xOffset":2,"yOffset":5,"xAdvance":11,"rect":{"x":181,"y":99,"width":9,"height":30}},"41":{"xOffset":0,"yOffset":5,"xAdvance":11,"rect":{"x":190,"y":99,"width":9,"height":30}},"42":{"xOffset":1,"yOffset":6,"xAdvance":15,"rect":{"x":257,"y":205,"width":13,"height":14}},"43":{"xOffset":1,"yOffset":12,"xAdvance":19,"rect":{"x":239,"y":205,"width":18,"height":17}},"44":{"xOffset":1,"yOffset":25,"xAdvance":9,"rect":{"x":300,"y":205,"width":7,"height":11}},"45":{"xOffset":1,"yOffset":18,"xAdvance":14,"rect":{"x":367,"y":205,"width":12,"height":5}},"46":{"xOffset":1,"yOffset":24,"xAdvance":9,"rect":{"x":360,"y":205,"width":7,"height":7}},"47":{"xOffset":-1,"yOffset":5,"xAdvance":10,"rect":{"x":248,"y":99,"width":12,"height":30}},"48":{"xOffset":0,"yOffset":6,"xAdvance":19,"rect":{"x":334,"y":156,"width":18,"height":25}},"49":{"xOffset":0,"yOffset":6,"xAdvance":14,"rect":{"x":352,"y":181,"width":12,"height":24}},"50":{"xOffset":1,"yOffset":6,"xAdvance":18,"rect":{"x":364,"y":181,"width":17,"height":24}},"51":{"xOffset":1,"yOffset":6,"xAdvance":19,"rect":{"x":243,"y":156,"width":17,"height":25}},"52":{"xOffset":0,"yOffset":6,"xAdvance":19,"rect":{"x":381,"y":181,"width":19,"height":24}},"53":{"xOffset":1,"yOffset":6,"xAdvance":19,"rect":{"x":260,"y":156,"width":17,"height":25}},"54":{"xOffset":0,"yOffset":6,"xAdvance":19,"rect":{"x":277,"y":156,"width":19,"height":25}},"55":{"xOffset":0,"yOffset":6,"xAdvance":17,"rect":{"x":400,"y":181,"width":17,"height":24}},"56":{"xOffset":0,"yOffset":6,"xAdvance":19,"rect":{"x":296,"y":156,"width":19,"height":25}},"57":{"xOffset":0,"yOffset":6,"xAdvance":19,"rect":{"x":315,"y":156,"width":19,"height":25}},"58":{"xOffset":1,"yOffset":13,"xAdvance":9,"rect":{"x":503,"y":181,"width":7,"height":18}},"59":{"xOffset":0,"yOffset":13,"xAdvance":9,"rect":{"x":502,"y":156,"width":8,"height":23}},"60":{"xOffset":2,"yOffset":10,"xAdvance":19,"rect":{"x":68,"y":205,"width":16,"height":20}},"61":{"xOffset":1,"yOffset":15,"xAdvance":19,"rect":{"x":307,"y":205,"width":18,"height":11}},"62":{"xOffset":2,"yOffset":10,"xAdvance":19,"rect":{"x":84,"y":205,"width":16,"height":20}},"63":{"xOffset":0,"yOffset":6,"xAdvance":15,"rect":{"x":359,"y":156,"width":15,"height":25}},"65":{"xOffset":0,"yOffset":6,"xAdvance":20,"rect":{"x":420,"y":156,"width":21,"height":24}},"66":{"xOffset":1,"yOffset":6,"xAdvance":20,"rect":{"x":441,"y":156,"width":19,"height":24}},"67":{"xOffset":0,"yOffset":6,"xAdvance":21,"rect":{"x":473,"y":129,"width":21,"height":25}},"68":{"xOffset":1,"yOffset":6,"xAdvance":22,"rect":{"x":460,"y":156,"width":20,"height":24}},"69":{"xOffset":1,"yOffset":6,"xAdvance":18,"rect":{"x":480,"y":156,"width":16,"height":24}},"70":{"xOffset":1,"yOffset":6,"xAdvance":17,"rect":{"x":0,"y":181,"width":16,"height":24}},"71":{"xOffset":0,"yOffset":6,"xAdvance":22,"rect":{"x":0,"y":156,"width":22,"height":25}},"72":{"xOffset":1,"yOffset":6,"xAdvance":22,"rect":{"x":16,"y":181,"width":20,"height":24}},"73":{"xOffset":1,"yOffset":6,"xAdvance":8,"rect":{"x":496,"y":156,"width":6,"height":24}},"74":{"xOffset":0,"yOffset":6,"xAdvance":16,"rect":{"x":494,"y":129,"width":15,"height":25}},"75":{"xOffset":1,"yOffset":6,"xAdvance":20,"rect":{"x":36,"y":181,"width":19,"height":24}},"76":{"xOffset":1,"yOffset":6,"xAdvance":17,"rect":{"x":55,"y":181,"width":16,"height":24}},"77":{"xOffset":1,"yOffset":6,"xAdvance":26,"rect":{"x":71,"y":181,"width":24,"height":24}},"78":{"xOffset":1,"yOffset":6,"xAdvance":22,"rect":{"x":95,"y":181,"width":20,"height":24}},"79":{"xOffset":0,"yOffset":6,"xAdvance":23,"rect":{"x":22,"y":156,"width":23,"height":25}},"80":{"xOffset":1,"yOffset":6,"xAdvance":19,"rect":{"x":115,"y":181,"width":18,"height":24}},"81":{"xOffset":0,"yOffset":6,"xAdvance":23,"rect":{"x":374,"y":99,"width":23,"height":27}},"82":{"xOffset":1,"yOffset":6,"xAdvance":20,"rect":{"x":133,"y":181,"width":19,"height":24}},"83":{"xOffset":0,"yOffset":6,"xAdvance":19,"rect":{"x":45,"y":156,"width":19,"height":25}},"84":{"xOffset":0,"yOffset":6,"xAdvance":19,"rect":{"x":152,"y":181,"width":19,"height":24}},"85":{"xOffset":1,"yOffset":6,"xAdvance":22,"rect":{"x":64,"y":156,"width":20,"height":25}},"86":{"xOffset":0,"yOffset":6,"xAdvance":20,"rect":{"x":171,"y":181,"width":21,"height":24}},"87":{"xOffset":0,"yOffset":6,"xAdvance":29,"rect":{"x":192,"y":181,"width":29,"height":24}},"88":{"xOffset":0,"yOffset":6,"xAdvance":20,"rect":{"x":221,"y":181,"width":20,"height":24}},"89":{"xOffset":0,"yOffset":6,"xAdvance":20,"rect":{"x":241,"y":181,"width":20,"height":24}},"90":{"xOffset":1,"yOffset":6,"xAdvance":20,"rect":{"x":261,"y":181,"width":18,"height":24}},"91":{"xOffset":2,"yOffset":5,"xAdvance":11,"rect":{"x":199,"y":99,"width":10,"height":30}},"92":{"xOffset":-1,"yOffset":5,"xAdvance":10,"rect":{"x":260,"y":99,"width":12,"height":30}},"93":{"xOffset":0,"yOffset":5,"xAdvance":11,"rect":{"x":209,"y":99,"width":9,"height":30}},"94":{"xOffset":0,"yOffset":7,"xAdvance":14,"rect":{"x":270,"y":205,"width":14,"height":12}},"95":{"xOffset":-2,"yOffset":29,"xAdvance":13,"rect":{"x":379,"y":205,"width":17,"height":5}},"96":{"xOffset":3,"yOffset":4,"xAdvance":16,"rect":{"x":350,"y":205,"width":10,"height":8}},"97":{"xOffset":0,"yOffset":11,"xAdvance":17,"rect":{"x":487,"y":181,"width":16,"height":20}},"98":{"xOffset":1,"yOffset":5,"xAdvance":18,"rect":{"x":213,"y":129,"width":17,"height":26}},"99":{"xOffset":0,"yOffset":11,"xAdvance":17,"rect":{"x":0,"y":205,"width":17,"height":20}},"100":{"xOffset":0,"yOffset":5,"xAdvance":18,"rect":{"x":230,"y":129,"width":17,"height":26}},"101":{"xOffset":0,"yOffset":11,"xAdvance":17,"rect":{"x":17,"y":205,"width":17,"height":20}},"102":{"xOffset":-1,"yOffset":5,"xAdvance":11,"rect":{"x":84,"y":156,"width":12,"height":25}},"103":{"xOffset":0,"yOffset":11,"xAdvance":18,"rect":{"x":247,"y":129,"width":17,"height":26}},"104":{"xOffset":1,"yOffset":5,"xAdvance":18,"rect":{"x":96,"y":156,"width":16,"height":25}},"105":{"xOffset":0,"yOffset":5,"xAdvance":7,"rect":{"x":112,"y":156,"width":7,"height":25}},"106":{"xOffset":-2,"yOffset":5,"xAdvance":7,"rect":{"x":159,"y":36,"width":9,"height":31}},"107":{"xOffset":1,"yOffset":5,"xAdvance":16,"rect":{"x":119,"y":156,"width":16,"height":25}},"108":{"xOffset":1,"yOffset":5,"xAdvance":8,"rect":{"x":135,"y":156,"width":6,"height":25}},"109":{"xOffset":1,"yOffset":11,"xAdvance":26,"rect":{"x":100,"y":205,"width":24,"height":19}},"110":{"xOffset":1,"yOffset":11,"xAdvance":18,"rect":{"x":124,"y":205,"width":16,"height":19}},"111":{"xOffset":0,"yOffset":11,"xAdvance":18,"rect":{"x":34,"y":205,"width":18,"height":20}},"112":{"xOffset":1,"yOffset":11,"xAdvance":18,"rect":{"x":141,"y":156,"width":17,"height":25}},"113":{"xOffset":0,"yOffset":11,"xAdvance":18,"rect":{"x":158,"y":156,"width":17,"height":25}},"114":{"xOffset":1,"yOffset":11,"xAdvance":11,"rect":{"x":140,"y":205,"width":11,"height":19}},"115":{"xOffset":0,"yOffset":11,"xAdvance":16,"rect":{"x":52,"y":205,"width":16,"height":20}},"116":{"xOffset":-1,"yOffset":8,"xAdvance":11,"rect":{"x":438,"y":181,"width":12,"height":23}},"117":{"xOffset":1,"yOffset":12,"xAdvance":18,"rect":{"x":151,"y":205,"width":16,"height":19}},"118":{"xOffset":0,"yOffset":12,"xAdvance":16,"rect":{"x":167,"y":205,"width":17,"height":18}},"119":{"xOffset":0,"yOffset":12,"xAdvance":23,"rect":{"x":184,"y":205,"width":24,"height":18}},"120":{"xOffset":0,"yOffset":12,"xAdvance":16,"rect":{"x":208,"y":205,"width":16,"height":18}},"121":{"xOffset":0,"yOffset":12,"xAdvance":16,"rect":{"x":279,"y":181,"width":17,"height":24}},"122":{"xOffset":1,"yOffset":12,"xAdvance":16,"rect":{"x":224,"y":205,"width":15,"height":18}},"123":{"xOffset":0,"yOffset":5,"xAdvance":11,"rect":{"x":218,"y":99,"width":12,"height":30}},"124":{"xOffset":2,"yOffset":5,"xAdvance":10,"rect":{"x":242,"y":99,"width":6,"height":30}},"125":{"xOffset":0,"yOffset":5,"xAdvance":11,"rect":{"x":230,"y":99,"width":12,"height":30}},"126":{"xOffset":0,"yOffset":14,"xAdvance":18,"rect":{"x":332,"y":205,"width":18,"height":9}},"192":{"xOffset":0,"yOffset":0,"xAdvance":20,"rect":{"x":311,"y":68,"width":21,"height":30}},"193":{"xOffset":0,"yOffset":0,"xAdvance":20,"rect":{"x":353,"y":68,"width":21,"height":30}},"194":{"xOffset":0,"yOffset":0,"xAdvance":20,"rect":{"x":416,"y":68,"width":21,"height":30}},"195":{"xOffset":0,"yOffset":0,"xAdvance":20,"rect":{"x":332,"y":68,"width":21,"height":30}},"200":{"xOffset":1,"yOffset":0,"xAdvance":18,"rect":{"x":437,"y":68,"width":16,"height":30}},"201":{"xOffset":1,"yOffset":0,"xAdvance":18,"rect":{"x":469,"y":68,"width":16,"height":30}},"202":{"xOffset":1,"yOffset":0,"xAdvance":18,"rect":{"x":0,"y":99,"width":16,"height":30}},"204":{"xOffset":-4,"yOffset":0,"xAdvance":8,"rect":{"x":16,"y":99,"width":13,"height":30}},"205":{"xOffset":1,"yOffset":0,"xAdvance":8,"rect":{"x":45,"y":99,"width":13,"height":30}},"210":{"xOffset":0,"yOffset":0,"xAdvance":23,"rect":{"x":415,"y":36,"width":23,"height":31}},"211":{"xOffset":0,"yOffset":0,"xAdvance":23,"rect":{"x":461,"y":36,"width":23,"height":31}},"212":{"xOffset":0,"yOffset":0,"xAdvance":23,"rect":{"x":484,"y":36,"width":23,"height":31}},"213":{"xOffset":0,"yOffset":0,"xAdvance":23,"rect":{"x":438,"y":36,"width":23,"height":31}},"217":{"xOffset":1,"yOffset":0,"xAdvance":22,"rect":{"x":142,"y":68,"width":20,"height":31}},"218":{"xOffset":1,"yOffset":0,"xAdvance":22,"rect":{"x":182,"y":68,"width":20,"height":31}},"221":{"xOffset":0,"yOffset":0,"xAdvance":20,"rect":{"x":141,"y":99,"width":20,"height":30}},"224":{"xOffset":0,"yOffset":4,"xAdvance":17,"rect":{"x":397,"y":99,"width":16,"height":27}},"225":{"xOffset":0,"yOffset":4,"xAdvance":17,"rect":{"x":429,"y":99,"width":16,"height":27}},"226":{"xOffset":0,"yOffset":5,"xAdvance":17,"rect":{"x":296,"y":129,"width":16,"height":26}},"227":{"xOffset":0,"yOffset":5,"xAdvance":17,"rect":{"x":264,"y":129,"width":16,"height":26}},"232":{"xOffset":0,"yOffset":4,"xAdvance":17,"rect":{"x":445,"y":99,"width":17,"height":27}},"233":{"xOffset":0,"yOffset":4,"xAdvance":17,"rect":{"x":479,"y":99,"width":17,"height":27}},"234":{"xOffset":0,"yOffset":5,"xAdvance":17,"rect":{"x":349,"y":129,"width":17,"height":26}},"236":{"xOffset":-3,"yOffset":4,"xAdvance":7,"rect":{"x":496,"y":99,"width":11,"height":26}},"237":{"xOffset":1,"yOffset":4,"xAdvance":7,"rect":{"x":374,"y":129,"width":10,"height":26}},"242":{"xOffset":0,"yOffset":4,"xAdvance":18,"rect":{"x":0,"y":129,"width":18,"height":27}},"243":{"xOffset":0,"yOffset":4,"xAdvance":18,"rect":{"x":36,"y":129,"width":18,"height":27}},"244":{"xOffset":0,"yOffset":5,"xAdvance":18,"rect":{"x":402,"y":129,"width":18,"height":26}},"245":{"xOffset":0,"yOffset":5,"xAdvance":18,"rect":{"x":384,"y":129,"width":18,"height":26}},"249":{"xOffset":1,"yOffset":4,"xAdvance":18,"rect":{"x":108,"y":129,"width":16,"height":27}},"250":{"xOffset":1,"yOffset":4,"xAdvance":18,"rect":{"x":140,"y":129,"width":16,"height":27}},"253":{"xOffset":0,"yOffset":4,"xAdvance":16,"rect":{"x":142,"y":36,"width":17,"height":32}},"258":{"xOffset":0,"yOffset":0,"xAdvance":20,"rect":{"x":395,"y":68,"width":21,"height":30}},"259":{"xOffset":0,"yOffset":5,"xAdvance":17,"rect":{"x":280,"y":129,"width":16,"height":26}},"272":{"xOffset":-1,"yOffset":6,"xAdvance":22,"rect":{"x":296,"y":181,"width":23,"height":24}},"273":{"xOffset":0,"yOffset":5,"xAdvance":18,"rect":{"x":312,"y":129,"width":20,"height":26}},"296":{"xOffset":-3,"yOffset":0,"xAdvance":8,"rect":{"x":29,"y":99,"width":16,"height":30}},"297":{"xOffset":-3,"yOffset":5,"xAdvance":7,"rect":{"x":208,"y":156,"width":17,"height":25}},"360":{"xOffset":1,"yOffset":0,"xAdvance":22,"rect":{"x":162,"y":68,"width":20,"height":31}},"361":{"xOffset":1,"yOffset":5,"xAdvance":18,"rect":{"x":438,"y":129,"width":16,"height":26}},"416":{"xOffset":0,"yOffset":3,"xAdvance":23,"rect":{"x":272,"y":99,"width":23,"height":28}},"417":{"xOffset":0,"yOffset":8,"xAdvance":18,"rect":{"x":450,"y":181,"width":18,"height":23}},"431":{"xOffset":1,"yOffset":3,"xAdvance":24,"rect":{"x":313,"y":99,"width":24,"height":28}},"432":{"xOffset":1,"yOffset":8,"xAdvance":19,"rect":{"x":468,"y":181,"width":19,"height":23}},"7840":{"xOffset":0,"yOffset":6,"xAdvance":20,"rect":{"x":374,"y":68,"width":21,"height":30}},"7841":{"xOffset":0,"yOffset":11,"xAdvance":17,"rect":{"x":175,"y":156,"width":16,"height":25}},"7842":{"xOffset":0,"yOffset":-1,"xAdvance":20,"rect":{"x":168,"y":36,"width":21,"height":31}},"7843":{"xOffset":0,"yOffset":4,"xAdvance":17,"rect":{"x":413,"y":99,"width":16,"height":27}},"7844":{"xOffset":0,"yOffset":-3,"xAdvance":20,"rect":{"x":320,"y":0,"width":21,"height":33}},"7845":{"xOffset":0,"yOffset":0,"xAdvance":17,"rect":{"x":286,"y":36,"width":18,"height":31}},"7846":{"xOffset":0,"yOffset":-3,"xAdvance":20,"rect":{"x":257,"y":0,"width":21,"height":33}},"7847":{"xOffset":0,"yOffset":0,"xAdvance":17,"rect":{"x":253,"y":36,"width":16,"height":31}},"7848":{"xOffset":0,"yOffset":-3,"xAdvance":20,"rect":{"x":278,"y":0,"width":21,"height":33}},"7849":{"xOffset":0,"yOffset":0,"xAdvance":17,"rect":{"x":269,"y":36,"width":17,"height":31}},"7850":{"xOffset":0,"yOffset":-3,"xAdvance":20,"rect":{"x":299,"y":0,"width":21,"height":33}},"7851":{"xOffset":0,"yOffset":-1,"xAdvance":17,"rect":{"x":471,"y":0,"width":16,"height":32}},"7852":{"xOffset":0,"yOffset":0,"xAdvance":20,"rect":{"x":21,"y":0,"width":21,"height":36}},"7853":{"xOffset":0,"yOffset":5,"xAdvance":17,"rect":{"x":304,"y":36,"width":16,"height":31}},"7854":{"xOffset":0,"yOffset":-3,"xAdvance":20,"rect":{"x":236,"y":0,"width":21,"height":33}},"7855":{"xOffset":0,"yOffset":0,"xAdvance":17,"rect":{"x":221,"y":36,"width":16,"height":31}},"7856":{"xOffset":0,"yOffset":-3,"xAdvance":20,"rect":{"x":194,"y":0,"width":21,"height":33}},"7857":{"xOffset":0,"yOffset":0,"xAdvance":17,"rect":{"x":189,"y":36,"width":16,"height":31}},"7858":{"xOffset":0,"yOffset":-4,"xAdvance":20,"rect":{"x":81,"y":0,"width":21,"height":34}},"7859":{"xOffset":0,"yOffset":0,"xAdvance":17,"rect":{"x":205,"y":36,"width":16,"height":31}},"7860":{"xOffset":0,"yOffset":-3,"xAdvance":20,"rect":{"x":215,"y":0,"width":21,"height":33}},"7861":{"xOffset":0,"yOffset":-1,"xAdvance":17,"rect":{"x":455,"y":0,"width":16,"height":32}},"7862":{"xOffset":0,"yOffset":0,"xAdvance":20,"rect":{"x":0,"y":0,"width":21,"height":36}},"7863":{"xOffset":0,"yOffset":5,"xAdvance":17,"rect":{"x":237,"y":36,"width":16,"height":31}},"7864":{"xOffset":1,"yOffset":6,"xAdvance":18,"rect":{"x":485,"y":68,"width":16,"height":30}},"7865":{"xOffset":0,"yOffset":11,"xAdvance":17,"rect":{"x":191,"y":156,"width":17,"height":25}},"7866":{"xOffset":1,"yOffset":-1,"xAdvance":18,"rect":{"x":320,"y":36,"width":16,"height":31}},"7867":{"xOffset":0,"yOffset":4,"xAdvance":17,"rect":{"x":462,"y":99,"width":17,"height":27}},"7868":{"xOffset":1,"yOffset":0,"xAdvance":18,"rect":{"x":453,"y":68,"width":16,"height":30}},"7869":{"xOffset":0,"yOffset":5,"xAdvance":17,"rect":{"x":332,"y":129,"width":17,"height":26}},"7870":{"xOffset":1,"yOffset":-3,"xAdvance":18,"rect":{"x":389,"y":0,"width":19,"height":33}},"7871":{"xOffset":0,"yOffset":0,"xAdvance":17,"rect":{"x":371,"y":36,"width":19,"height":31}},"7872":{"xOffset":1,"yOffset":-3,"xAdvance":18,"rect":{"x":341,"y":0,"width":16,"height":33}},"7873":{"xOffset":0,"yOffset":0,"xAdvance":17,"rect":{"x":336,"y":36,"width":17,"height":31}},"7874":{"xOffset":1,"yOffset":-3,"xAdvance":18,"rect":{"x":357,"y":0,"width":16,"height":33}},"7875":{"xOffset":0,"yOffset":0,"xAdvance":17,"rect":{"x":353,"y":36,"width":18,"height":31}},"7876":{"xOffset":1,"yOffset":-3,"xAdvance":18,"rect":{"x":373,"y":0,"width":16,"height":33}},"7877":{"xOffset":0,"yOffset":-1,"xAdvance":17,"rect":{"x":487,"y":0,"width":17,"height":32}},"7878":{"xOffset":1,"yOffset":0,"xAdvance":18,"rect":{"x":42,"y":0,"width":16,"height":36}},"7879":{"xOffset":0,"yOffset":5,"xAdvance":17,"rect":{"x":390,"y":36,"width":17,"height":31}},"7880":{"xOffset":0,"yOffset":-1,"xAdvance":8,"rect":{"x":407,"y":36,"width":8,"height":31}},"7881":{"xOffset":0,"yOffset":4,"xAdvance":7,"rect":{"x":366,"y":129,"width":8,"height":26}},"7882":{"xOffset":1,"yOffset":6,"xAdvance":8,"rect":{"x":501,"y":68,"width":6,"height":30}},"7883":{"xOffset":0,"yOffset":5,"xAdvance":7,"rect":{"x":504,"y":0,"width":7,"height":31}},"7884":{"xOffset":0,"yOffset":6,"xAdvance":23,"rect":{"x":58,"y":99,"width":23,"height":30}},"7885":{"xOffset":0,"yOffset":11,"xAdvance":18,"rect":{"x":225,"y":156,"width":18,"height":25}},"7886":{"xOffset":0,"yOffset":-1,"xAdvance":23,"rect":{"x":0,"y":36,"width":23,"height":32}},"7887":{"xOffset":0,"yOffset":4,"xAdvance":18,"rect":{"x":18,"y":129,"width":18,"height":27}},"7888":{"xOffset":0,"yOffset":-3,"xAdvance":23,"rect":{"x":171,"y":0,"width":23,"height":34}},"7889":{"xOffset":0,"yOffset":0,"xAdvance":18,"rect":{"x":36,"y":68,"width":19,"height":31}},"7890":{"xOffset":0,"yOffset":-3,"xAdvance":23,"rect":{"x":102,"y":0,"width":23,"height":34}},"7891":{"xOffset":0,"yOffset":0,"xAdvance":18,"rect":{"x":0,"y":68,"width":18,"height":31}},"7892":{"xOffset":0,"yOffset":-3,"xAdvance":23,"rect":{"x":125,"y":0,"width":23,"height":34}},"7893":{"xOffset":0,"yOffset":0,"xAdvance":18,"rect":{"x":18,"y":68,"width":18,"height":31}},"7894":{"xOffset":0,"yOffset":-3,"xAdvance":23,"rect":{"x":148,"y":0,"width":23,"height":34}},"7895":{"xOffset":0,"yOffset":-1,"xAdvance":18,"rect":{"x":23,"y":36,"width":18,"height":32}},"7896":{"xOffset":0,"yOffset":0,"xAdvance":23,"rect":{"x":58,"y":0,"width":23,"height":36}},"7897":{"xOffset":0,"yOffset":5,"xAdvance":18,"rect":{"x":55,"y":68,"width":18,"height":31}},"7898":{"xOffset":0,"yOffset":0,"xAdvance":23,"rect":{"x":119,"y":68,"width":23,"height":31}},"7899":{"xOffset":0,"yOffset":4,"xAdvance":18,"rect":{"x":90,"y":129,"width":18,"height":27}},"7900":{"xOffset":0,"yOffset":0,"xAdvance":23,"rect":{"x":73,"y":68,"width":23,"height":31}},"7901":{"xOffset":0,"yOffset":4,"xAdvance":18,"rect":{"x":54,"y":129,"width":18,"height":27}},"7902":{"xOffset":0,"yOffset":-1,"xAdvance":23,"rect":{"x":41,"y":36,"width":23,"height":32}},"7903":{"xOffset":0,"yOffset":4,"xAdvance":18,"rect":{"x":72,"y":129,"width":18,"height":27}},"7904":{"xOffset":0,"yOffset":0,"xAdvance":23,"rect":{"x":96,"y":68,"width":23,"height":31}},"7905":{"xOffset":0,"yOffset":5,"xAdvance":18,"rect":{"x":420,"y":129,"width":18,"height":26}},"7906":{"xOffset":0,"yOffset":3,"xAdvance":23,"rect":{"x":408,"y":0,"width":23,"height":33}},"7907":{"xOffset":0,"yOffset":8,"xAdvance":18,"rect":{"x":295,"y":99,"width":18,"height":28}},"7908":{"xOffset":1,"yOffset":6,"xAdvance":22,"rect":{"x":81,"y":99,"width":20,"height":30}},"7909":{"xOffset":1,"yOffset":12,"xAdvance":18,"rect":{"x":319,"y":181,"width":16,"height":24}},"7910":{"xOffset":1,"yOffset":-1,"xAdvance":22,"rect":{"x":64,"y":36,"width":20,"height":32}},"7911":{"xOffset":1,"yOffset":4,"xAdvance":18,"rect":{"x":124,"y":129,"width":16,"height":27}},"7912":{"xOffset":1,"yOffset":0,"xAdvance":24,"rect":{"x":250,"y":68,"width":24,"height":31}},"7913":{"xOffset":1,"yOffset":4,"xAdvance":19,"rect":{"x":194,"y":129,"width":19,"height":27}},"7914":{"xOffset":1,"yOffset":0,"xAdvance":24,"rect":{"x":202,"y":68,"width":24,"height":31}},"7915":{"xOffset":1,"yOffset":4,"xAdvance":19,"rect":{"x":156,"y":129,"width":19,"height":27}},"7916":{"xOffset":1,"yOffset":-1,"xAdvance":24,"rect":{"x":84,"y":36,"width":24,"height":32}},"7917":{"xOffset":1,"yOffset":4,"xAdvance":19,"rect":{"x":175,"y":129,"width":19,"height":27}},"7918":{"xOffset":1,"yOffset":0,"xAdvance":24,"rect":{"x":226,"y":68,"width":24,"height":31}},"7919":{"xOffset":1,"yOffset":5,"xAdvance":19,"rect":{"x":454,"y":129,"width":19,"height":26}},"7920":{"xOffset":1,"yOffset":3,"xAdvance":24,"rect":{"x":431,"y":0,"width":24,"height":33}},"7921":{"xOffset":1,"yOffset":8,"xAdvance":19,"rect":{"x":337,"y":99,"width":19,"height":28}},"7922":{"xOffset":0,"yOffset":0,"xAdvance":20,"rect":{"x":101,"y":99,"width":20,"height":30}},"7923":{"xOffset":0,"yOffset":4,"xAdvance":16,"rect":{"x":108,"y":36,"width":17,"height":32}},"7924":{"xOffset":0,"yOffset":6,"xAdvance":20,"rect":{"x":161,"y":99,"width":20,"height":30}},"7925":{"xOffset":0,"yOffset":12,"xAdvance":16,"rect":{"x":335,"y":181,"width":17,"height":24}},"7926":{"xOffset":0,"yOffset":-1,"xAdvance":20,"rect":{"x":274,"y":68,"width":20,"height":31}},"7927":{"xOffset":0,"yOffset":4,"xAdvance":16,"rect":{"x":125,"y":36,"width":17,"height":32}},"7928":{"xOffset":0,"yOffset":0,"xAdvance":20,"rect":{"x":121,"y":99,"width":20,"height":30}},"7929":{"xOffset":0,"yOffset":5,"xAdvance":16,"rect":{"x":294,"y":68,"width":17,"height":31}},"8217":{"xOffset":1,"yOffset":6,"xAdvance":9,"rect":{"x":325,"y":205,"width":7,"height":11}}},"kerningDict":{"2228262":-1,"2228268":-3,"2228270":-3,"2228276":-2,"2228289":-2,"2228298":-4,"2228416":-2,"2228417":-2,"2228418":-2,"2228419":-2,"2228482":-2,"2236064":-2,"2236066":-2,"2236068":-2,"2236070":-2,"2236072":-2,"2236074":-2,"2236076":-2,"2236078":-2,"2236080":-2,"2236082":-2,"2236084":-2,"2236086":-2,"2433049":-2,"2490402":-1,"2490407":-1,"2490452":-2,"2490454":-2,"2490455":-1,"2490457":-2,"2490486":-1,"2490487":-1,"2490489":-1,"2490589":-2,"2490621":-1,"2498290":-2,"2498291":-1,"2498292":-2,"2498293":-1,"2498294":-2,"2498295":-1,"2498296":-2,"2498297":-1,"2498585":-1,"2555942":-1,"2555948":-3,"2555950":-3,"2555956":-2,"2555969":-2,"2555978":-4,"2556096":-2,"2556097":-2,"2556098":-2,"2556099":-2,"2556162":-2,"2563744":-2,"2563746":-2,"2563748":-2,"2563750":-2,"2563752":-2,"2563754":-2,"2563756":-2,"2563758":-2,"2563760":-2,"2563762":-2,"2563764":-2,"2563766":-2,"2621546":1,"2752550":-1,"2752556":-4,"2752558":-4,"2752564":-1,"2752577":-2,"2752586":-3,"2752607":-2,"2752704":-2,"2752705":-2,"2752706":-2,"2752707":-2,"2752770":-2,"2752784":1,"2760352":-2,"2760354":-2,"2760356":-2,"2760358":-2,"2760360":-2,"2760362":-2,"2760364":-2,"2760366":-2,"2760368":-2,"2760370":-2,"2760372":-2,"2760374":-2,"2818132":-2,"2818134":-1,"2818135":-1,"2818136":-2,"2818137":-2,"2818138":-1,"2818150":-1,"2818164":-1,"2818168":-1,"2818269":-2,"2825970":-2,"2825972":-2,"2825974":-2,"2825976":-2,"2883618":-3,"2883622":-1,"2883623":-3,"2883626":-4,"2883631":1,"2883632":-1,"2883633":-1,"2883634":-1,"2883635":-1,"2883636":-1,"2883637":-1,"2883638":-1,"2883640":-1,"2883641":-1,"2883651":-2,"2883655":-2,"2883663":-2,"2883665":-2,"2883668":-2,"2883669":-1,"2883670":-3,"2883671":-3,"2883673":-3,"2883676":-1,"2883678":-4,"2883683":-1,"2883684":-1,"2883685":-1,"2883686":-1,"2883687":-1,"2883695":-1,"2883697":-1,"2883700":-1,"2883702":-2,"2883703":-2,"2883705":-2,"2883794":-2,"2883795":-2,"2883796":-2,"2883797":-2,"2883801":-1,"2883802":-1,"2883805":-3,"2883816":-1,"2883817":-1,"2883818":-1,"2883826":-1,"2883827":-1,"2883828":-1,"2883829":-1,"2883837":-2,"2883857":-1,"2883944":-1,"2884000":-2,"2884001":-1,"2884015":-1,"2891449":-1,"2891451":-1,"2891453":-1,"2891455":-1,"2891457":-1,"2891459":-1,"2891461":-1,"2891463":-1,"2891468":-2,"2891469":-1,"2891470":-2,"2891471":-1,"2891472":-2,"2891473":-1,"2891474":-2,"2891475":-1,"2891476":-2,"2891477":-1,"2891478":-2,"2891479":-1,"2891480":-2,"2891481":-1,"2891482":-2,"2891483":-1,"2891484":-2,"2891485":-1,"2891486":-2,"2891487":-1,"2891488":-2,"2891489":-1,"2891490":-2,"2891491":-1,"2891492":-1,"2891494":-1,"2891496":-1,"2891498":-1,"2891500":-1,"2891502":-1,"2891504":-1,"2891506":-3,"2891507":-2,"2891508":-3,"2891509":-2,"2891510":-3,"2891511":-2,"2891512":-3,"2891513":-2,"2891801":-4,"2949204":-2,"2949206":-1,"2949207":-1,"2949208":-2,"2949209":-2,"2949210":-1,"2949222":-1,"2949236":-1,"2949240":-1,"2949341":-2,"2957042":-2,"2957044":-2,"2957046":-2,"2957048":-2,"3014690":-3,"3014694":-1,"3014695":-3,"3014698":-4,"3014703":1,"3014704":-1,"3014705":-1,"3014706":-1,"3014707":-1,"3014708":-1,"3014709":-1,"3014710":-1,"3014712":-1,"3014713":-1,"3014723":-2,"3014727":-2,"3014735":-2,"3014737":-2,"3014740":-2,"3014741":-1,"3014742":-3,"3014743":-3,"3014745":-3,"3014748":-1,"3014750":-4,"3014755":-1,"3014756":-1,"3014757":-1,"3014758":-1,"3014759":-1,"3014767":-1,"3014769":-1,"3014772":-1,"3014774":-2,"3014775":-2,"3014777":-2,"3014866":-2,"3014867":-2,"3014868":-2,"3014869":-2,"3014873":-1,"3014874":-1,"3014877":-3,"3014888":-1,"3014889":-1,"3014890":-1,"3014898":-1,"3014899":-1,"3014900":-1,"3014901":-1,"3014909":-2,"3014929":-1,"3015016":-1,"3015072":-2,"3015073":-1,"3015087":-1,"3022521":-1,"3022523":-1,"3022525":-1,"3022527":-1,"3022529":-1,"3022531":-1,"3022533":-1,"3022535":-1,"3022540":-2,"3022541":-1,"3022542":-2,"3022543":-1,"3022544":-2,"3022545":-1,"3022546":-2,"3022547":-1,"3022548":-2,"3022549":-1,"3022550":-2,"3022551":-1,"3022552":-2,"3022553":-1,"3022554":-2,"3022555":-1,"3022556":-2,"3022557":-1,"3022558":-2,"3022559":-1,"3022560":-2,"3022561":-1,"3022562":-2,"3022563":-1,"3022564":-1,"3022566":-1,"3022568":-1,"3022570":-1,"3022572":-1,"3022574":-1,"3022576":-1,"3022578":-3,"3022579":-2,"3022580":-3,"3022581":-2,"3022582":-3,"3022583":-2,"3022584":-3,"3022585":-2,"3022873":-4,"3080236":-1,"3080238":-1,"3080244":-1,"3080257":-1,"3080266":-1,"3080384":-1,"3080385":-1,"3080386":-1,"3080387":-1,"3080450":-1,"3088032":-1,"3088034":-1,"3088036":-1,"3088038":-1,"3088040":-1,"3088042":-1,"3088044":-1,"3088046":-1,"3088048":-1,"3088050":-1,"3088052":-1,"3088054":-1,"3145772":-1,"3145774":-1,"3145783":-1,"3145812":-1,"3145816":-1,"3145817":-1,"3145820":1,"3145823":-1,"3145949":-1,"3153650":-1,"3153652":-1,"3153654":-1,"3153656":-1,"3211298":-1,"3211303":-1,"3211308":-1,"3211310":-1,"3219481":-1,"3342380":-1,"3342382":-1,"3342425":-1,"3342557":-1,"3350258":-1,"3350260":-1,"3350262":-1,"3350264":-1,"3350553":-1,"3407916":-1,"3407918":-1,"3473452":-1,"3473454":-1,"3538988":-1,"3538990":-1,"3539039":-1,"3604515":-2,"3604518":-1,"3604524":-4,"3604526":-4,"3604527":-1,"3604532":-2,"3604535":1,"3604538":-1,"3604539":-1,"3604540":-3,"3604545":-3,"3604554":-2,"3604572":1,"3604575":-5,"3604577":-1,"3604579":-1,"3604580":-1,"3604581":-1,"3604583":-1,"3604591":-1,"3604593":-1,"3604595":-1,"3604597":-1,"3604600":-1,"3604672":-3,"3604673":-3,"3604674":-3,"3604675":-3,"3604704":-1,"3604705":-1,"3604706":-1,"3604707":-1,"3604712":-1,"3604713":-1,"3604714":-1,"3604722":-1,"3604723":-1,"3604724":-1,"3604725":-1,"3604729":-1,"3604730":-1,"3604738":-3,"3604739":-1,"3604753":-1,"3604841":-1,"3604897":-1,"3604912":-1,"3612320":-3,"3612321":-1,"3612322":-3,"3612323":-1,"3612324":-3,"3612325":-1,"3612326":-3,"3612327":-1,"3612328":-3,"3612329":-1,"3612330":-3,"3612331":-1,"3612332":-3,"3612333":-1,"3612334":-3,"3612335":-1,"3612336":-3,"3612337":-1,"3612338":-3,"3612339":-1,"3612340":-3,"3612341":-1,"3612342":-3,"3612343":-1,"3612345":-1,"3612347":-1,"3612349":-1,"3612351":-1,"3612353":-1,"3612355":-1,"3612357":-1,"3612359":-1,"3612365":-1,"3612367":-1,"3612369":-1,"3612371":-1,"3612373":-1,"3612375":-1,"3612377":-1,"3612379":-1,"3612381":-1,"3612383":-1,"3612385":-1,"3612387":-1,"3612389":-1,"3612391":-1,"3612393":-1,"3612395":-1,"3612397":-1,"3612399":-1,"3612401":-1,"3670060":-1,"3670062":-1,"3670105":-1,"3670111":-1,"3670237":-1,"3677938":-1,"3677940":-1,"3677942":-1,"3677944":-1,"3678233":-1,"3735596":-1,"3735598":-1,"3735607":-1,"3735636":-1,"3735640":-1,"3735641":-1,"3735644":1,"3735647":-1,"3735773":-1,"3743474":-1,"3743476":-1,"3743478":-1,"3743480":-1,"3801172":-1,"3801174":-2,"3801175":-1,"3801177":-2,"3801309":-2,"3809010":-2,"3809012":-2,"3809014":-2,"3809016":-2,"3866708":-1,"3866710":-2,"3866711":-1,"3866713":-2,"3866845":-2,"3874546":-2,"3874548":-2,"3874550":-2,"3874552":-2,"3997761":-1,"3997782":-2,"3997783":-2,"3997784":-1,"3997785":-3,"3997814":-1,"3997815":-1,"3997816":-1,"3997817":-1,"3997888":-1,"3997889":-1,"3997890":-1,"3997891":-1,"3997917":-3,"3997949":-1,"3997954":-1,"4005536":-1,"4005538":-1,"4005540":-1,"4005542":-1,"4005544":-1,"4005546":-1,"4005548":-1,"4005550":-1,"4005552":-1,"4005554":-1,"4005556":-1,"4005558":-1,"4005618":-3,"4005619":-1,"4005620":-3,"4005621":-1,"4005622":-3,"4005623":-1,"4005624":-3,"4005625":-1,"4063287":-2,"4063297":-1,"4063316":-2,"4063318":-2,"4063319":-2,"4063320":-2,"4063321":-3,"4063322":-2,"4063350":-1,"4063351":-1,"4063352":-1,"4063353":-1,"4063354":-1,"4063424":-1,"4063425":-1,"4063426":-1,"4063427":-1,"4063453":-3,"4063485":-1,"4063490":-1,"4071072":-1,"4071074":-1,"4071076":-1,"4071078":-1,"4071080":-1,"4071082":-1,"4071084":-1,"4071086":-1,"4071088":-1,"4071090":-1,"4071092":-1,"4071094":-1,"4071154":-3,"4071155":-1,"4071156":-3,"4071157":-1,"4071158":-3,"4071159":-1,"4071160":-3,"4071161":-1,"4128820":-1,"4128833":-2,"4128960":-2,"4128961":-2,"4128962":-2,"4128963":-2,"4129026":-2,"4136608":-2,"4136610":-2,"4136612":-2,"4136614":-2,"4136616":-2,"4136618":-2,"4136620":-2,"4136622":-2,"4136624":-2,"4136626":-2,"4136628":-2,"4136630":-2,"4259874":-2,"4259879":-2,"4259882":-2,"4259889":-1,"4259900":-1,"4259901":-1,"4259903":-2,"4259907":-1,"4259911":-1,"4259919":-1,"4259921":-1,"4259924":-2,"4259926":-2,"4259927":-2,"4259929":-2,"4259932":-1,"4259934":-2,"4259939":-1,"4259940":-1,"4259941":-1,"4259943":-1,"4259951":-1,"4259953":-1,"4259956":-1,"4259957":-1,"4259958":-2,"4259959":-2,"4259961":-2,"4260050":-1,"4260051":-1,"4260052":-1,"4260053":-1,"4260061":-2,"4260072":-1,"4260073":-1,"4260074":-1,"4260082":-1,"4260083":-1,"4260084":-1,"4260085":-1,"4260089":-1,"4260090":-1,"4260093":-2,"4260113":-1,"4260201":-1,"4260256":-1,"4260257":-1,"4260272":-1,"4267705":-1,"4267707":-1,"4267709":-1,"4267711":-1,"4267713":-1,"4267715":-1,"4267717":-1,"4267719":-1,"4267724":-1,"4267725":-1,"4267726":-1,"4267727":-1,"4267728":-1,"4267729":-1,"4267730":-1,"4267731":-1,"4267732":-1,"4267733":-1,"4267734":-1,"4267735":-1,"4267736":-1,"4267737":-1,"4267738":-1,"4267739":-1,"4267740":-1,"4267741":-1,"4267742":-1,"4267743":-1,"4267744":-1,"4267745":-1,"4267746":-1,"4267747":-1,"4267749":-1,"4267751":-1,"4267753":-1,"4267755":-1,"4267757":-1,"4267759":-1,"4267761":-1,"4267762":-2,"4267763":-2,"4267764":-2,"4267765":-2,"4267766":-2,"4267767":-2,"4267768":-2,"4267769":-2,"4268057":-3,"4325465":-1,"4325597":-1,"4325648":1,"4333298":-1,"4333300":-1,"4333302":-1,"4333304":-1,"4390977":-1,"4390996":-1,"4391007":-1,"4391104":-1,"4391105":-1,"4391106":-1,"4391107":-1,"4391170":-1,"4398752":-1,"4398754":-1,"4398756":-1,"4398758":-1,"4398760":-1,"4398762":-1,"4398764":-1,"4398766":-1,"4398768":-1,"4398770":-1,"4398772":-1,"4398774":-1,"4456492":-1,"4456494":-1,"4456495":-1,"4456513":-1,"4456532":-1,"4456534":-1,"4456535":-1,"4456536":-1,"4456537":-1,"4456538":-1,"4456543":-1,"4456640":-1,"4456641":-1,"4456642":-1,"4456643":-1,"4456669":-1,"4456706":-1,"4464288":-1,"4464290":-1,"4464292":-1,"4464294":-1,"4464296":-1,"4464298":-1,"4464300":-1,"4464302":-1,"4464304":-1,"4464306":-1,"4464308":-1,"4464310":-1,"4464370":-1,"4464372":-1,"4464374":-1,"4464376":-1,"4522076":1,"4587558":-1,"4587564":-2,"4587566":-2,"4587567":-1,"4587585":-1,"4587594":-1,"4587615":-2,"4587617":-1,"4587642":-1,"4587712":-1,"4587713":-1,"4587714":-1,"4587715":-1,"4587744":-1,"4587745":-1,"4587746":-1,"4587747":-1,"4587778":-1,"4587779":-1,"4595360":-1,"4595361":-1,"4595362":-1,"4595363":-1,"4595364":-1,"4595365":-1,"4595366":-1,"4595367":-1,"4595368":-1,"4595369":-1,"4595370":-1,"4595371":-1,"4595372":-1,"4595373":-1,"4595374":-1,"4595375":-1,"4595376":-1,"4595377":-1,"4595378":-1,"4595379":-1,"4595380":-1,"4595381":-1,"4595382":-1,"4595383":-1,"4718684":1,"4784220":1,"4849708":-1,"4849710":-1,"4849711":-1,"4849756":1,"4849759":-1,"4915243":-3,"4915245":-3,"4915248":-1,"4915252":-1,"4915254":-1,"4915260":-2,"4915261":-1,"4915267":-1,"4915271":-1,"4915279":-1,"4915281":-1,"4915283":-1,"4915299":-1,"4915300":-1,"4915301":-1,"4915303":-1,"4915311":-1,"4915313":-1,"4915315":-1,"4915316":-1,"4915317":-1,"4915318":-2,"4915319":-2,"4915321":-2,"4915410":-1,"4915411":-1,"4915412":-1,"4915413":-1,"4915432":-1,"4915433":-1,"4915434":-1,"4915442":-1,"4915443":-1,"4915444":-1,"4915445":-1,"4915449":-1,"4915450":-1,"4915453":-2,"4915473":-1,"4915561":-1,"4915616":-1,"4915617":-1,"4915632":-1,"4923065":-1,"4923067":-1,"4923069":-1,"4923071":-1,"4923073":-1,"4923075":-1,"4923077":-1,"4923079":-1,"4923084":-1,"4923085":-1,"4923086":-1,"4923087":-1,"4923088":-1,"4923089":-1,"4923090":-1,"4923091":-1,"4923092":-1,"4923093":-1,"4923094":-1,"4923095":-1,"4923096":-1,"4923097":-1,"4923098":-1,"4923099":-1,"4923100":-1,"4923101":-1,"4923102":-1,"4923103":-1,"4923104":-1,"4923105":-1,"4923106":-1,"4923107":-1,"4923109":-1,"4923111":-1,"4923113":-1,"4923115":-1,"4923117":-1,"4923119":-1,"4923121":-1,"4923123":-2,"4923125":-2,"4923127":-2,"4923129":-2,"4923417":-1,"4980770":-3,"4980775":-3,"4980778":-4,"4980779":-2,"4980781":-2,"4980785":-1,"4980796":-1,"4980799":-2,"4980803":-1,"4980807":-1,"4980815":-1,"4980817":-1,"4980820":-3,"4980821":-1,"4980822":-2,"4980823":-2,"4980825":-3,"4980828":-1,"4980830":-4,"4980835":-1,"4980836":-1,"4980837":-1,"4980839":-1,"4980847":-1,"4980849":-1,"4980852":-1,"4980854":-2,"4980855":-2,"4980857":-2,"4980946":-1,"4980947":-1,"4980948":-1,"4980949":-1,"4980953":-1,"4980954":-1,"4980957":-3,"4980968":-1,"4980969":-1,"4980970":-1,"4980978":-1,"4980979":-1,"4980980":-1,"4980981":-1,"4980989":-2,"4981009":-1,"4981096":-1,"4981152":-1,"4981153":-1,"4981167":-1,"4988601":-1,"4988603":-1,"4988605":-1,"4988607":-1,"4988609":-1,"4988611":-1,"4988613":-1,"4988615":-1,"4988620":-1,"4988621":-1,"4988622":-1,"4988623":-1,"4988624":-1,"4988625":-1,"4988626":-1,"4988627":-1,"4988628":-1,"4988629":-1,"4988630":-1,"4988631":-1,"4988632":-1,"4988633":-1,"4988634":-1,"4988635":-1,"4988636":-1,"4988637":-1,"4988638":-1,"4988639":-1,"4988640":-1,"4988641":-1,"4988642":-1,"4988643":-1,"4988644":-1,"4988646":-1,"4988648":-1,"4988650":-1,"4988652":-1,"4988654":-1,"4988656":-1,"4988658":-3,"4988659":-2,"4988660":-3,"4988661":-2,"4988662":-3,"4988663":-2,"4988664":-3,"4988665":-2,"4988953":-2,"5046364":1,"5111900":1,"5177388":-1,"5177390":-1,"5177391":-1,"5177409":-1,"5177428":-1,"5177430":-1,"5177431":-1,"5177432":-1,"5177433":-1,"5177434":-1,"5177439":-1,"5177536":-1,"5177537":-1,"5177538":-1,"5177539":-1,"5177565":-1,"5177602":-1,"5185184":-1,"5185186":-1,"5185188":-1,"5185190":-1,"5185192":-1,"5185194":-1,"5185196":-1,"5185198":-1,"5185200":-1,"5185202":-1,"5185204":-1,"5185206":-1,"5185266":-1,"5185268":-1,"5185270":-1,"5185272":-1,"5242918":-1,"5242924":-3,"5242926":-3,"5242927":-1,"5242932":-1,"5242945":-1,"5242954":-2,"5242968":-1,"5242969":-1,"5242970":-1,"5242975":-2,"5242977":-1,"5242982":1,"5242996":1,"5242998":1,"5243001":1,"5243072":-1,"5243073":-1,"5243074":-1,"5243075":-1,"5243101":-1,"5243104":-1,"5243105":-1,"5243106":-1,"5243107":-1,"5243133":1,"5243138":-1,"5243139":-1,"5250720":-1,"5250721":-1,"5250722":-1,"5250723":-1,"5250724":-1,"5250725":-1,"5250726":-1,"5250727":-1,"5250728":-1,"5250729":-1,"5250730":-1,"5250731":-1,"5250732":-1,"5250733":-1,"5250734":-1,"5250735":-1,"5250736":-1,"5250737":-1,"5250738":-1,"5250739":-1,"5250740":-1,"5250741":-1,"5250742":-1,"5250743":-1,"5250802":-1,"5250803":1,"5250804":-1,"5250805":1,"5250806":-1,"5250807":1,"5250808":-1,"5250809":1,"5308460":-1,"5308462":-1,"5308463":-1,"5308481":-1,"5308500":-1,"5308502":-1,"5308503":-1,"5308504":-1,"5308505":-1,"5308506":-1,"5308511":-1,"5308608":-1,"5308609":-1,"5308610":-1,"5308611":-1,"5308637":-1,"5308674":-1,"5316256":-1,"5316258":-1,"5316260":-1,"5316262":-1,"5316264":-1,"5316266":-1,"5316268":-1,"5316270":-1,"5316272":-1,"5316274":-1,"5316276":-1,"5316278":-1,"5316338":-1,"5316340":-1,"5316342":-1,"5316344":-1,"5374041":-1,"5374068":1,"5374173":-1,"5381874":-1,"5381876":-1,"5381878":-1,"5381880":-1,"5505062":-1,"5505067":-2,"5505068":-2,"5505069":-2,"5505070":-2,"5505071":-2,"5505072":-1,"5505076":-2,"5505078":-1,"5505082":-1,"5505083":-1,"5505084":-2,"5505089":-2,"5505091":-1,"5505095":-1,"5505098":-2,"5505103":-1,"5505105":-1,"5505116":1,"5505119":-2,"5505121":-3,"5505123":-3,"5505124":-3,"5505125":-3,"5505127":-3,"5505133":-2,"5505134":-2,"5505135":-3,"5505136":-2,"5505137":-3,"5505138":-2,"5505139":-2,"5505141":-2,"5505142":-2,"5505143":-2,"5505144":-2,"5505145":-2,"5505146":-2,"5505216":-2,"5505217":-2,"5505218":-2,"5505219":-2,"5505234":-1,"5505235":-1,"5505236":-1,"5505237":-1,"5505248":-2,"5505249":-3,"5505250":-2,"5505251":-2,"5505256":-2,"5505257":-3,"5505258":-2,"5505260":1,"5505266":-2,"5505267":-3,"5505268":-2,"5505269":-2,"5505273":-2,"5505274":-2,"5505277":-2,"5505282":-2,"5505283":-2,"5505297":-3,"5505321":1,"5505385":-2,"5505440":-1,"5505441":-3,"5505456":-2,"5512864":-2,"5512865":-3,"5512866":-2,"5512867":-3,"5512868":-2,"5512869":-2,"5512870":-2,"5512871":-2,"5512872":-2,"5512873":-2,"5512874":-2,"5512875":-2,"5512876":-2,"5512877":-2,"5512878":-2,"5512879":-2,"5512880":-2,"5512881":-2,"5512882":-2,"5512883":-2,"5512884":-2,"5512885":-2,"5512886":-2,"5512887":-2,"5512889":-3,"5512891":-3,"5512893":-2,"5512895":-2,"5512897":-2,"5512899":-2,"5512901":-2,"5512903":-2,"5512908":-1,"5512909":-3,"5512910":-1,"5512911":-3,"5512912":-1,"5512913":-2,"5512914":-1,"5512915":-2,"5512916":-1,"5512917":-2,"5512918":-1,"5512919":-2,"5512920":-1,"5512921":-2,"5512922":-1,"5512923":-3,"5512924":-1,"5512925":-2,"5512926":-1,"5512927":-3,"5512928":-1,"5512929":-2,"5512930":-1,"5512931":-3,"5512933":-2,"5512935":-2,"5512937":-2,"5512939":-2,"5512941":-2,"5512943":-2,"5512945":-2,"5512947":-2,"5512949":-2,"5512951":-2,"5512953":-2,"5570604":-1,"5570606":-1,"5570607":-1,"5570652":1,"5570655":-1,"5636134":-1,"5636139":-1,"5636140":-3,"5636141":-1,"5636142":-3,"5636143":-2,"5636148":-1,"5636154":-2,"5636155":-2,"5636156":-2,"5636157":-2,"5636161":-2,"5636163":-1,"5636167":-1,"5636170":-2,"5636175":-1,"5636177":-1,"5636188":1,"5636191":-2,"5636193":-1,"5636195":-1,"5636196":-1,"5636197":-1,"5636199":-1,"5636205":-1,"5636206":-1,"5636207":-1,"5636208":-1,"5636209":-1,"5636210":-1,"5636211":-1,"5636213":-1,"5636288":-2,"5636289":-2,"5636290":-2,"5636291":-2,"5636306":-1,"5636307":-1,"5636308":-1,"5636309":-1,"5636320":-1,"5636321":-1,"5636322":-1,"5636323":-1,"5636328":-1,"5636329":-1,"5636330":-1,"5636338":-1,"5636339":-1,"5636340":-1,"5636341":-1,"5636345":-1,"5636346":-1,"5636354":-2,"5636355":-1,"5636369":-1,"5636457":-1,"5636512":-1,"5636513":-1,"5636528":-1,"5643936":-2,"5643937":-1,"5643938":-2,"5643939":-1,"5643940":-2,"5643941":-1,"5643942":-2,"5643943":-1,"5643944":-2,"5643945":-1,"5643946":-2,"5643947":-1,"5643948":-2,"5643949":-1,"5643950":-2,"5643951":-1,"5643952":-2,"5643953":-1,"5643954":-2,"5643955":-1,"5643956":-2,"5643957":-1,"5643958":-2,"5643959":-1,"5643961":-1,"5643963":-1,"5643965":-1,"5643967":-1,"5643969":-1,"5643971":-1,"5643973":-1,"5643975":-1,"5643980":-1,"5643981":-1,"5643982":-1,"5643983":-1,"5643984":-1,"5643985":-1,"5643986":-1,"5643987":-1,"5643988":-1,"5643989":-1,"5643990":-1,"5643991":-1,"5643992":-1,"5643993":-1,"5643994":-1,"5643995":-1,"5643996":-1,"5643997":-1,"5643998":-1,"5643999":-1,"5644000":-1,"5644001":-1,"5644002":-1,"5644003":-1,"5644005":-1,"5644007":-1,"5644009":-1,"5644011":-1,"5644013":-1,"5644015":-1,"5644017":-1,"5701670":-1,"5701675":-1,"5701676":-3,"5701677":-1,"5701678":-3,"5701679":-2,"5701684":-1,"5701690":-1,"5701691":-1,"5701692":-2,"5701693":-2,"5701697":-2,"5701699":-1,"5701703":-1,"5701706":-2,"5701711":-1,"5701713":-1,"5701724":1,"5701727":-2,"5701729":-1,"5701731":-1,"5701732":-1,"5701733":-1,"5701735":-1,"5701741":-1,"5701742":-1,"5701743":-1,"5701744":-1,"5701745":-1,"5701746":-1,"5701747":-1,"5701749":-1,"5701824":-2,"5701825":-2,"5701826":-2,"5701827":-2,"5701842":-1,"5701843":-1,"5701844":-1,"5701845":-1,"5701856":-1,"5701857":-1,"5701858":-1,"5701859":-1,"5701864":-1,"5701865":-1,"5701866":-1,"5701874":-1,"5701875":-1,"5701876":-1,"5701877":-1,"5701881":-1,"5701882":-1,"5701890":-2,"5701891":-1,"5701905":-1,"5701993":-1,"5702048":-1,"5702049":-1,"5702064":-1,"5709472":-2,"5709473":-1,"5709474":-2,"5709475":-1,"5709476":-2,"5709477":-1,"5709478":-2,"5709479":-1,"5709480":-2,"5709481":-1,"5709482":-2,"5709483":-1,"5709484":-2,"5709485":-1,"5709486":-2,"5709487":-1,"5709488":-2,"5709489":-1,"5709490":-2,"5709491":-1,"5709492":-2,"5709493":-1,"5709494":-2,"5709495":-1,"5709497":-1,"5709499":-1,"5709501":-1,"5709503":-1,"5709505":-1,"5709507":-1,"5709509":-1,"5709511":-1,"5709516":-1,"5709517":-1,"5709518":-1,"5709519":-1,"5709520":-1,"5709521":-1,"5709522":-1,"5709523":-1,"5709524":-1,"5709525":-1,"5709526":-1,"5709527":-1,"5709528":-1,"5709529":-1,"5709530":-1,"5709531":-1,"5709532":-1,"5709533":-1,"5709534":-1,"5709535":-1,"5709536":-1,"5709537":-1,"5709538":-1,"5709539":-1,"5709541":-1,"5709543":-1,"5709545":-1,"5709547":-1,"5709549":-1,"5709551":-1,"5709553":-1,"5767211":-2,"5767213":-2,"5767216":-1,"5767222":-1,"5767228":-2,"5767229":-1,"5767235":-1,"5767239":-1,"5767242":-1,"5767247":-1,"5767249":-1,"5767267":-1,"5767268":-1,"5767269":-1,"5767271":-1,"5767279":-1,"5767281":-1,"5767284":-1,"5767286":-1,"5767287":-1,"5767289":-1,"5767378":-1,"5767379":-1,"5767380":-1,"5767381":-1,"5767400":-1,"5767401":-1,"5767402":-1,"5767410":-1,"5767411":-1,"5767412":-1,"5767413":-1,"5767421":-1,"5767441":-1,"5767584":-1,"5767585":-1,"5775033":-1,"5775035":-1,"5775037":-1,"5775039":-1,"5775041":-1,"5775043":-1,"5775045":-1,"5775047":-1,"5775052":-1,"5775053":-1,"5775054":-1,"5775055":-1,"5775056":-1,"5775057":-1,"5775058":-1,"5775059":-1,"5775060":-1,"5775061":-1,"5775062":-1,"5775063":-1,"5775064":-1,"5775065":-1,"5775066":-1,"5775067":-1,"5775068":-1,"5775069":-1,"5775070":-1,"5775071":-1,"5775072":-1,"5775073":-1,"5775074":-1,"5775075":-1,"5775091":-1,"5775093":-1,"5775095":-1,"5775097":-1,"5832742":-2,"5832747":-2,"5832748":-3,"5832749":-2,"5832750":-3,"5832751":-2,"5832752":-1,"5832755":-1,"5832756":-2,"5832758":-1,"5832760":-1,"5832762":-2,"5832763":-2,"5832764":-3,"5832765":-3,"5832769":-2,"5832771":-1,"5832775":-1,"5832778":-2,"5832783":-1,"5832785":-1,"5832799":-3,"5832801":-2,"5832803":-2,"5832804":-2,"5832805":-2,"5832806":-1,"5832807":-2,"5832813":-2,"5832814":-2,"5832815":-2,"5832816":-2,"5832817":-2,"5832818":-2,"5832819":-2,"5832821":-2,"5832822":-1,"5832823":-1,"5832824":-1,"5832825":-1,"5832826":-1,"5832896":-2,"5832897":-2,"5832898":-2,"5832899":-2,"5832914":-1,"5832915":-1,"5832916":-1,"5832917":-1,"5832928":-2,"5832929":-2,"5832930":-2,"5832931":-2,"5832936":-2,"5832937":-2,"5832938":-2,"5832946":-2,"5832947":-2,"5832948":-2,"5832949":-2,"5832953":-2,"5832954":-2,"5832957":-1,"5832962":-2,"5832963":-2,"5832977":-2,"5833065":-2,"5833120":-1,"5833121":-2,"5833136":-2,"5840544":-2,"5840545":-2,"5840546":-2,"5840547":-2,"5840548":-2,"5840549":-2,"5840550":-2,"5840551":-2,"5840552":-2,"5840553":-2,"5840554":-2,"5840555":-2,"5840556":-2,"5840557":-2,"5840558":-2,"5840559":-2,"5840560":-2,"5840561":-2,"5840562":-2,"5840563":-2,"5840564":-2,"5840565":-2,"5840566":-2,"5840567":-2,"5840569":-2,"5840571":-2,"5840573":-2,"5840575":-2,"5840577":-2,"5840579":-2,"5840581":-2,"5840583":-2,"5840588":-1,"5840589":-2,"5840590":-1,"5840591":-2,"5840592":-1,"5840593":-2,"5840594":-1,"5840595":-2,"5840596":-1,"5840597":-2,"5840598":-1,"5840599":-2,"5840600":-1,"5840601":-2,"5840602":-1,"5840603":-2,"5840604":-1,"5840605":-2,"5840606":-1,"5840607":-2,"5840608":-1,"5840609":-2,"5840610":-1,"5840611":-2,"5840613":-2,"5840615":-2,"5840617":-2,"5840619":-2,"5840621":-2,"5840623":-2,"5840625":-2,"5840627":-1,"5840629":-1,"5840631":-1,"5840633":-1,"5898283":-1,"5898285":-1,"5898292":-1,"5898300":-2,"5898307":-1,"5898311":-1,"5898319":-1,"5898321":-1,"5898450":-1,"5898451":-1,"5898452":-1,"5898453":-1,"5898656":-1,"5906124":-1,"5906126":-1,"5906128":-1,"5906130":-1,"5906132":-1,"5906134":-1,"5906136":-1,"5906138":-1,"5906140":-1,"5906142":-1,"5906144":-1,"5906146":-1,"5963882":1,"6029356":1,"6029358":1,"6029396":-1,"6029397":-1,"6029398":-1,"6029399":-1,"6029401":-1,"6029418":1,"6029430":-1,"6029431":-1,"6029433":-1,"6029529":-1,"6029530":-1,"6029533":-1,"6029565":-1,"6029672":-1,"6029743":-1,"6037220":-1,"6037222":-1,"6037224":-1,"6037226":-1,"6037228":-1,"6037230":-1,"6037232":-1,"6037234":-1,"6037235":-1,"6037236":-1,"6037237":-1,"6037238":-1,"6037239":-1,"6037240":-1,"6037241":-1,"6037529":-3,"6160422":-1,"6160428":-4,"6160430":-4,"6160436":-1,"6160449":-2,"6160458":-3,"6160479":-2,"6160576":-2,"6160577":-2,"6160578":-2,"6160579":-2,"6160642":-2,"6160656":1,"6168224":-2,"6168226":-2,"6168228":-2,"6168230":-2,"6168232":-2,"6168234":-2,"6168236":-2,"6168238":-2,"6168240":-2,"6168242":-2,"6168244":-2,"6168246":-2,"6225962":-2,"6225968":-1,"6225969":-3,"6225971":-1,"6225972":-2,"6225973":-1,"6225974":-1,"6225976":-1,"6225977":-1,"6225987":-1,"6225991":-1,"6225999":-1,"6226001":-1,"6226004":-2,"6226005":-1,"6226006":-2,"6226007":-2,"6226009":-3,"6226014":-2,"6226017":-1,"6226026":3,"6226032":1,"6226038":-2,"6226039":-2,"6226041":-2,"6226130":-1,"6226131":-1,"6226132":-1,"6226133":-1,"6226137":-1,"6226138":-1,"6226141":-3,"6226144":-1,"6226145":-1,"6226146":-1,"6226147":-1,"6226173":-2,"6226179":-1,"6226280":-1,"6226336":-1,"6226351":-1,"6233761":-1,"6233763":-1,"6233765":-1,"6233767":-1,"6233769":-1,"6233771":-1,"6233773":-1,"6233775":-1,"6233777":-1,"6233779":-1,"6233781":-1,"6233783":-1,"6233804":-1,"6233806":-1,"6233808":-1,"6233810":-1,"6233812":-1,"6233814":-1,"6233816":-1,"6233818":-1,"6233820":-1,"6233822":-1,"6233824":-1,"6233826":-1,"6233828":-1,"6233830":-1,"6233832":-1,"6233834":-1,"6233836":-1,"6233838":-1,"6233840":-1,"6233842":-3,"6233843":-2,"6233844":-3,"6233845":-2,"6233846":-3,"6233847":-2,"6233848":-3,"6233849":-2,"6357041":-1,"6357076":-2,"6357078":-1,"6357079":-1,"6357081":-2,"6357110":-1,"6357111":-1,"6357113":-1,"6357213":-2,"6357245":-1,"6364914":-2,"6364915":-1,"6364916":-2,"6364917":-1,"6364918":-2,"6364919":-1,"6364920":-2,"6364921":-1,"6422577":-1,"6422583":-1,"6422593":-1,"6422612":-3,"6422614":-1,"6422615":-1,"6422616":-1,"6422617":-2,"6422646":-1,"6422647":-1,"6422648":-1,"6422649":-1,"6422720":-1,"6422721":-1,"6422722":-1,"6422723":-1,"6422749":-2,"6422781":-1,"6422786":-1,"6430368":-1,"6430370":-1,"6430372":-1,"6430374":-1,"6430376":-1,"6430378":-1,"6430380":-1,"6430382":-1,"6430384":-1,"6430386":-1,"6430388":-1,"6430390":-1,"6430450":-2,"6430451":-1,"6430452":-2,"6430453":-1,"6430454":-2,"6430455":-1,"6430456":-2,"6430457":-1,"6488119":-1,"6488148":-2,"6488150":-1,"6488151":-1,"6488153":-1,"6488166":1,"6488285":-1,"6495986":-1,"6495988":-1,"6495990":-1,"6495992":-1,"6553836":1,"6619191":-1,"6619201":-1,"6619220":-3,"6619222":-1,"6619223":-1,"6619224":-1,"6619225":-2,"6619256":-1,"6619328":-1,"6619329":-1,"6619330":-1,"6619331":-1,"6619357":-2,"6619394":-1,"6626976":-1,"6626978":-1,"6626980":-1,"6626982":-1,"6626984":-1,"6626986":-1,"6626988":-1,"6626990":-1,"6626992":-1,"6626994":-1,"6626996":-1,"6626998":-1,"6627058":-2,"6627060":-2,"6627062":-2,"6627064":-2,"6684715":-1,"6684716":-2,"6684717":-1,"6684718":-2,"6684719":-1,"6684724":-2,"6684737":-1,"6684746":-2,"6684771":-1,"6684772":-1,"6684773":-1,"6684775":-1,"6684783":-1,"6684785":-1,"6684787":-1,"6684864":-1,"6684865":-1,"6684866":-1,"6684867":-1,"6684904":-1,"6684905":-1,"6684906":-1,"6684914":-1,"6684915":-1,"6684916":-1,"6684917":-1,"6684930":-1,"6684945":-1,"6685089":-1,"6692512":-1,"6692514":-1,"6692516":-1,"6692518":-1,"6692520":-1,"6692522":-1,"6692524":-1,"6692526":-1,"6692528":-1,"6692530":-1,"6692532":-1,"6692534":-1,"6692537":-1,"6692539":-1,"6692541":-1,"6692543":-1,"6692545":-1,"6692547":-1,"6692549":-1,"6692551":-1,"6692557":-1,"6692559":-1,"6692561":-1,"6692563":-1,"6692565":-1,"6692567":-1,"6692569":-1,"6692571":-1,"6692573":-1,"6692575":-1,"6692577":-1,"6692579":-1,"6692889":1,"6750303":1,"6815793":-1,"6815828":-2,"6815830":-1,"6815831":-1,"6815833":-2,"6815862":-1,"6815863":-1,"6815865":-1,"6815965":-2,"6815997":-1,"6823666":-2,"6823667":-1,"6823668":-2,"6823669":-1,"6823670":-2,"6823671":-1,"6823672":-2,"6823673":-1,"7012395":-1,"7012397":-1,"7012400":-1,"7012404":-1,"7012406":-1,"7012407":-1,"7012412":-2,"7012436":-2,"7012438":-1,"7012439":-1,"7012441":-1,"7012451":-1,"7012452":-1,"7012453":-1,"7012455":-1,"7012463":-1,"7012465":-1,"7012467":-1,"7012573":-1,"7012584":-1,"7012585":-1,"7012586":-1,"7012594":-1,"7012595":-1,"7012596":-1,"7012597":-1,"7012625":-1,"7012769":-1,"7020217":-1,"7020219":-1,"7020221":-1,"7020223":-1,"7020225":-1,"7020227":-1,"7020229":-1,"7020231":-1,"7020237":-1,"7020239":-1,"7020241":-1,"7020243":-1,"7020245":-1,"7020247":-1,"7020249":-1,"7020251":-1,"7020253":-1,"7020255":-1,"7020257":-1,"7020259":-1,"7020274":-1,"7020276":-1,"7020278":-1,"7020280":-1,"7078124":1,"7143473":-1,"7143508":-2,"7143510":-1,"7143511":-1,"7143513":-2,"7143542":-1,"7143543":-1,"7143545":-1,"7143645":-2,"7143677":-1,"7151346":-2,"7151347":-1,"7151348":-2,"7151349":-1,"7151350":-2,"7151351":-1,"7151352":-2,"7151353":-1,"7209009":-1,"7209044":-2,"7209046":-1,"7209047":-1,"7209049":-2,"7209078":-1,"7209079":-1,"7209081":-1,"7209181":-2,"7209213":-1,"7216882":-2,"7216883":-1,"7216884":-2,"7216885":-1,"7216886":-2,"7216887":-1,"7216888":-2,"7216889":-1,"7274545":-1,"7274551":-1,"7274561":-1,"7274580":-3,"7274582":-1,"7274583":-1,"7274584":-1,"7274585":-2,"7274614":-1,"7274615":-1,"7274616":-1,"7274617":-1,"7274688":-1,"7274689":-1,"7274690":-1,"7274691":-1,"7274717":-2,"7274749":-1,"7274754":-1,"7282336":-1,"7282338":-1,"7282340":-1,"7282342":-1,"7282344":-1,"7282346":-1,"7282348":-1,"7282350":-1,"7282352":-1,"7282354":-1,"7282356":-1,"7282358":-1,"7282418":-2,"7282419":-1,"7282420":-2,"7282421":-1,"7282422":-2,"7282423":-1,"7282424":-2,"7282425":-1,"7340081":-1,"7340087":-1,"7340097":-1,"7340116":-3,"7340118":-1,"7340119":-1,"7340120":-1,"7340121":-2,"7340150":-1,"7340151":-1,"7340152":-1,"7340153":-1,"7340224":-1,"7340225":-1,"7340226":-1,"7340227":-1,"7340253":-2,"7340285":-1,"7340290":-1,"7347872":-1,"7347874":-1,"7347876":-1,"7347878":-1,"7347880":-1,"7347882":-1,"7347884":-1,"7347886":-1,"7347888":-1,"7347890":-1,"7347892":-1,"7347894":-1,"7347954":-2,"7347955":-1,"7347956":-2,"7347957":-1,"7347958":-2,"7347959":-1,"7347960":-2,"7347961":-1,"7405663":1,"7471147":-1,"7471148":-2,"7471149":-1,"7471150":-2,"7471151":-1,"7471156":-1,"7471164":-1,"7471167":1,"7471169":-1,"7471178":-2,"7471188":-2,"7471194":-1,"7471199":-1,"7471206":1,"7471220":1,"7471296":-1,"7471297":-1,"7471298":-1,"7471299":-1,"7471362":-1,"7478944":-1,"7478946":-1,"7478948":-1,"7478950":-1,"7478952":-1,"7478954":-1,"7478956":-1,"7478958":-1,"7478960":-1,"7478962":-1,"7478964":-1,"7478966":-1,"7479321":2,"7536695":-1,"7536724":-2,"7536726":-1,"7536727":-1,"7536729":-2,"7536861":-2,"7544562":-2,"7544564":-2,"7544566":-2,"7544568":-2,"7602219":-1,"7602221":-1,"7602228":-1,"7602236":-1,"7602260":-1,"7602265":-1,"7602397":-1,"7610098":-1,"7610100":-1,"7610102":-1,"7610104":-1,"7610393":1,"7667796":-2,"7667798":-1,"7667799":-1,"7667801":-2,"7667933":-2,"7675634":-2,"7675636":-2,"7675638":-2,"7675640":-2,"7733286":-1,"7733292":-2,"7733294":-2,"7733295":-2,"7733300":-1,"7733308":-1,"7733309":-1,"7733313":-2,"7733322":-2,"7733332":-2,"7733336":-1,"7733337":-1,"7733338":-1,"7733343":-2,"7733345":-1,"7733347":-1,"7733348":-1,"7733349":-1,"7733351":-1,"7733359":-1,"7733361":-1,"7733440":-2,"7733441":-2,"7733442":-2,"7733443":-2,"7733469":-1,"7733472":-1,"7733473":-1,"7733474":-1,"7733475":-1,"7733480":-1,"7733481":-1,"7733482":-1,"7733490":-1,"7733491":-1,"7733492":-1,"7733493":-1,"7733506":-2,"7733507":-1,"7733521":-1,"7733665":-1,"7741088":-2,"7741089":-1,"7741090":-2,"7741091":-1,"7741092":-2,"7741093":-1,"7741094":-2,"7741095":-1,"7741096":-2,"7741097":-1,"7741098":-2,"7741099":-1,"7741100":-2,"7741101":-1,"7741102":-2,"7741103":-1,"7741104":-2,"7741105":-1,"7741106":-2,"7741107":-1,"7741108":-2,"7741109":-1,"7741110":-2,"7741111":-1,"7741113":-1,"7741115":-1,"7741117":-1,"7741119":-1,"7741121":-1,"7741123":-1,"7741125":-1,"7741127":-1,"7741133":-1,"7741135":-1,"7741137":-1,"7741139":-1,"7741141":-1,"7741143":-1,"7741145":-1,"7741147":-1,"7741149":-1,"7741151":-1,"7741153":-1,"7741155":-1,"7741170":-1,"7741172":-1,"7741174":-1,"7741176":-1,"7798822":-1,"7798828":-2,"7798830":-2,"7798831":-1,"7798836":-1,"7798844":-1,"7798845":-1,"7798849":-2,"7798858":-2,"7798868":-2,"7798872":-1,"7798873":-1,"7798874":-1,"7798879":-2,"7798883":-1,"7798884":-1,"7798885":-1,"7798887":-1,"7798895":-1,"7798897":-1,"7798976":-2,"7798977":-2,"7798978":-2,"7798979":-2,"7799005":-1,"7799016":-1,"7799017":-1,"7799018":-1,"7799026":-1,"7799027":-1,"7799028":-1,"7799029":-1,"7799042":-2,"7799057":-1,"7799201":-1,"7806624":-2,"7806626":-2,"7806628":-2,"7806630":-2,"7806632":-2,"7806634":-2,"7806636":-2,"7806638":-2,"7806640":-2,"7806642":-2,"7806644":-2,"7806646":-2,"7806649":-1,"7806651":-1,"7806653":-1,"7806655":-1,"7806657":-1,"7806659":-1,"7806661":-1,"7806663":-1,"7806669":-1,"7806671":-1,"7806673":-1,"7806675":-1,"7806677":-1,"7806679":-1,"7806681":-1,"7806683":-1,"7806685":-1,"7806687":-1,"7806689":-1,"7806691":-1,"7806706":-1,"7806708":-1,"7806710":-1,"7806712":-1,"7864363":-1,"7864365":-1,"7864372":-1,"7864380":-1,"7864381":-1,"7864404":-2,"7864409":-1,"7864419":-1,"7864420":-1,"7864421":-1,"7864422":1,"7864423":-1,"7864431":-1,"7864433":-1,"7864541":-1,"7864552":-1,"7864553":-1,"7864554":-1,"7864562":-1,"7864563":-1,"7864564":-1,"7864565":-1,"7864593":-1,"7864737":-1,"7872185":-1,"7872187":-1,"7872189":-1,"7872191":-1,"7872193":-1,"7872195":-1,"7872197":-1,"7872199":-1,"7872205":-1,"7872207":-1,"7872209":-1,"7872211":-1,"7872213":-1,"7872215":-1,"7872217":-1,"7872219":-1,"7872221":-1,"7872223":-1,"7872225":-1,"7872227":-1,"7872242":-1,"7872244":-1,"7872246":-1,"7872248":-1,"7929894":-1,"7929900":-2,"7929902":-2,"7929903":-2,"7929908":-1,"7929916":-1,"7929917":-1,"7929921":-2,"7929930":-2,"7929940":-2,"7929944":-1,"7929945":-1,"7929946":-1,"7929951":-2,"7929953":-1,"7929955":-1,"7929956":-1,"7929957":-1,"7929959":-1,"7929967":-1,"7929969":-1,"7930048":-2,"7930049":-2,"7930050":-2,"7930051":-2,"7930077":-1,"7930080":-1,"7930081":-1,"7930082":-1,"7930083":-1,"7930088":-1,"7930089":-1,"7930090":-1,"7930098":-1,"7930099":-1,"7930100":-1,"7930101":-1,"7930114":-2,"7930115":-1,"7930129":-1,"7930273":-1,"7937696":-2,"7937697":-1,"7937698":-2,"7937699":-1,"7937700":-2,"7937701":-1,"7937702":-2,"7937703":-1,"7937704":-2,"7937705":-1,"7937706":-2,"7937707":-1,"7937708":-2,"7937709":-1,"7937710":-2,"7937711":-1,"7937712":-2,"7937713":-1,"7937714":-2,"7937715":-1,"7937716":-2,"7937717":-1,"7937718":-2,"7937719":-1,"7937721":-1,"7937723":-1,"7937725":-1,"7937727":-1,"7937729":-1,"7937731":-1,"7937733":-1,"7937735":-1,"7937741":-1,"7937743":-1,"7937745":-1,"7937747":-1,"7937749":-1,"7937751":-1,"7937753":-1,"7937755":-1,"7937757":-1,"7937759":-1,"7937761":-1,"7937763":-1,"7937778":-1,"7937780":-1,"7937782":-1,"7937784":-1,"7995435":-2,"7995437":-2,"7995452":-2,"7995476":-2,"7995481":-1,"7995613":-1,"8003314":-1,"8003316":-1,"8003318":-1,"8003320":-1,"8061034":1,"12582946":-2,"12582951":-2,"12582954":-2,"12582961":-1,"12582972":-1,"12582973":-1,"12582975":-2,"12582979":-1,"12582983":-1,"12582991":-1,"12582993":-1,"12582996":-2,"12582998":-2,"12582999":-2,"12583001":-2,"12583004":-1,"12583006":-2,"12583011":-1,"12583012":-1,"12583013":-1,"12583015":-1,"12583023":-1,"12583025":-1,"12583028":-1,"12583029":-1,"12583030":-2,"12583031":-2,"12583033":-2,"12583122":-1,"12583123":-1,"12583124":-1,"12583125":-1,"12583133":-2,"12583144":-1,"12583145":-1,"12583146":-1,"12583154":-1,"12583155":-1,"12583156":-1,"12583157":-1,"12583161":-1,"12583162":-1,"12583165":-2,"12583185":-1,"12583273":-1,"12583328":-1,"12583329":-1,"12583344":-1,"12590777":-1,"12590779":-1,"12590781":-1,"12590783":-1,"12590785":-1,"12590787":-1,"12590789":-1,"12590791":-1,"12590796":-1,"12590797":-1,"12590798":-1,"12590799":-1,"12590800":-1,"12590801":-1,"12590802":-1,"12590803":-1,"12590804":-1,"12590805":-1,"12590806":-1,"12590807":-1,"12590808":-1,"12590809":-1,"12590810":-1,"12590811":-1,"12590812":-1,"12590813":-1,"12590814":-1,"12590815":-1,"12590816":-1,"12590817":-1,"12590818":-1,"12590819":-1,"12590821":-1,"12590823":-1,"12590825":-1,"12590827":-1,"12590829":-1,"12590831":-1,"12590833":-1,"12590834":-2,"12590835":-2,"12590836":-2,"12590837":-2,"12590838":-2,"12590839":-2,"12590840":-2,"12590841":-2,"12591129":-3,"12648482":-2,"12648487":-2,"12648490":-2,"12648497":-1,"12648508":-1,"12648509":-1,"12648511":-2,"12648515":-1,"12648519":-1,"12648527":-1,"12648529":-1,"12648532":-2,"12648534":-2,"12648535":-2,"12648537":-2,"12648540":-1,"12648542":-2,"12648547":-1,"12648548":-1,"12648549":-1,"12648551":-1,"12648559":-1,"12648561":-1,"12648564":-1,"12648565":-1,"12648566":-2,"12648567":-2,"12648569":-2,"12648658":-1,"12648659":-1,"12648660":-1,"12648661":-1,"12648669":-2,"12648680":-1,"12648681":-1,"12648682":-1,"12648690":-1,"12648691":-1,"12648692":-1,"12648693":-1,"12648697":-1,"12648698":-1,"12648701":-2,"12648721":-1,"12648809":-1,"12648864":-1,"12648865":-1,"12648880":-1,"12656313":-1,"12656315":-1,"12656317":-1,"12656319":-1,"12656321":-1,"12656323":-1,"12656325":-1,"12656327":-1,"12656332":-1,"12656333":-1,"12656334":-1,"12656335":-1,"12656336":-1,"12656337":-1,"12656338":-1,"12656339":-1,"12656340":-1,"12656341":-1,"12656342":-1,"12656343":-1,"12656344":-1,"12656345":-1,"12656346":-1,"12656347":-1,"12656348":-1,"12656349":-1,"12656350":-1,"12656351":-1,"12656352":-1,"12656353":-1,"12656354":-1,"12656355":-1,"12656357":-1,"12656359":-1,"12656361":-1,"12656363":-1,"12656365":-1,"12656367":-1,"12656369":-1,"12656370":-2,"12656371":-2,"12656372":-2,"12656373":-2,"12656374":-2,"12656375":-2,"12656376":-2,"12656377":-2,"12656665":-3,"12714018":-2,"12714023":-2,"12714026":-2,"12714033":-1,"12714044":-1,"12714045":-1,"12714047":-2,"12714051":-1,"12714055":-1,"12714063":-1,"12714065":-1,"12714068":-2,"12714070":-2,"12714071":-2,"12714073":-2,"12714076":-1,"12714078":-2,"12714083":-1,"12714084":-1,"12714085":-1,"12714087":-1,"12714095":-1,"12714097":-1,"12714100":-1,"12714101":-1,"12714102":-2,"12714103":-2,"12714105":-2,"12714194":-1,"12714195":-1,"12714196":-1,"12714197":-1,"12714205":-2,"12714216":-1,"12714217":-1,"12714218":-1,"12714226":-1,"12714227":-1,"12714228":-1,"12714229":-1,"12714233":-1,"12714234":-1,"12714237":-2,"12714257":-1,"12714345":-1,"12714400":-1,"12714401":-1,"12714416":-1,"12721849":-1,"12721851":-1,"12721853":-1,"12721855":-1,"12721857":-1,"12721859":-1,"12721861":-1,"12721863":-1,"12721868":-1,"12721869":-1,"12721870":-1,"12721871":-1,"12721872":-1,"12721873":-1,"12721874":-1,"12721875":-1,"12721876":-1,"12721877":-1,"12721878":-1,"12721879":-1,"12721880":-1,"12721881":-1,"12721882":-1,"12721883":-1,"12721884":-1,"12721885":-1,"12721886":-1,"12721887":-1,"12721888":-1,"12721889":-1,"12721890":-1,"12721891":-1,"12721893":-1,"12721895":-1,"12721897":-1,"12721899":-1,"12721901":-1,"12721903":-1,"12721905":-1,"12721906":-2,"12721907":-2,"12721908":-2,"12721909":-2,"12721910":-2,"12721911":-2,"12721912":-2,"12721913":-2,"12722201":-3,"12779554":-2,"12779559":-2,"12779562":-2,"12779569":-1,"12779580":-1,"12779581":-1,"12779583":-2,"12779587":-1,"12779591":-1,"12779599":-1,"12779601":-1,"12779604":-2,"12779606":-2,"12779607":-2,"12779609":-2,"12779612":-1,"12779614":-2,"12779619":-1,"12779620":-1,"12779621":-1,"12779623":-1,"12779631":-1,"12779633":-1,"12779636":-1,"12779637":-1,"12779638":-2,"12779639":-2,"12779641":-2,"12779730":-1,"12779731":-1,"12779732":-1,"12779733":-1,"12779741":-2,"12779752":-1,"12779753":-1,"12779754":-1,"12779762":-1,"12779763":-1,"12779764":-1,"12779765":-1,"12779769":-1,"12779770":-1,"12779773":-2,"12779793":-1,"12779881":-1,"12779936":-1,"12779937":-1,"12779952":-1,"12787385":-1,"12787387":-1,"12787389":-1,"12787391":-1,"12787393":-1,"12787395":-1,"12787397":-1,"12787399":-1,"12787404":-1,"12787405":-1,"12787406":-1,"12787407":-1,"12787408":-1,"12787409":-1,"12787410":-1,"12787411":-1,"12787412":-1,"12787413":-1,"12787414":-1,"12787415":-1,"12787416":-1,"12787417":-1,"12787418":-1,"12787419":-1,"12787420":-1,"12787421":-1,"12787422":-1,"12787423":-1,"12787424":-1,"12787425":-1,"12787426":-1,"12787427":-1,"12787429":-1,"12787431":-1,"12787433":-1,"12787435":-1,"12787437":-1,"12787439":-1,"12787441":-1,"12787442":-2,"12787443":-2,"12787444":-2,"12787445":-2,"12787446":-2,"12787447":-2,"12787448":-2,"12787449":-2,"12787737":-3,"13107292":1,"13172828":1,"13238364":1,"13369436":1,"13434972":1,"13762604":-1,"13762606":-1,"13762607":-1,"13762625":-1,"13762644":-1,"13762646":-1,"13762647":-1,"13762648":-1,"13762649":-1,"13762650":-1,"13762655":-1,"13762752":-1,"13762753":-1,"13762754":-1,"13762755":-1,"13762781":-1,"13762818":-1,"13770400":-1,"13770402":-1,"13770404":-1,"13770406":-1,"13770408":-1,"13770410":-1,"13770412":-1,"13770414":-1,"13770416":-1,"13770418":-1,"13770420":-1,"13770422":-1,"13770482":-1,"13770484":-1,"13770486":-1,"13770488":-1,"13828140":-1,"13828142":-1,"13828143":-1,"13828161":-1,"13828180":-1,"13828182":-1,"13828183":-1,"13828184":-1,"13828185":-1,"13828186":-1,"13828191":-1,"13828288":-1,"13828289":-1,"13828290":-1,"13828291":-1,"13828317":-1,"13828354":-1,"13835936":-1,"13835938":-1,"13835940":-1,"13835942":-1,"13835944":-1,"13835946":-1,"13835948":-1,"13835950":-1,"13835952":-1,"13835954":-1,"13835956":-1,"13835958":-1,"13836018":-1,"13836020":-1,"13836022":-1,"13836024":-1,"13893676":-1,"13893678":-1,"13893679":-1,"13893697":-1,"13893716":-1,"13893718":-1,"13893719":-1,"13893720":-1,"13893721":-1,"13893722":-1,"13893727":-1,"13893824":-1,"13893825":-1,"13893826":-1,"13893827":-1,"13893853":-1,"13893890":-1,"13901472":-1,"13901474":-1,"13901476":-1,"13901478":-1,"13901480":-1,"13901482":-1,"13901484":-1,"13901486":-1,"13901488":-1,"13901490":-1,"13901492":-1,"13901494":-1,"13901554":-1,"13901556":-1,"13901558":-1,"13901560":-1,"13959212":-1,"13959214":-1,"13959215":-1,"13959233":-1,"13959252":-1,"13959254":-1,"13959255":-1,"13959256":-1,"13959257":-1,"13959258":-1,"13959263":-1,"13959360":-1,"13959361":-1,"13959362":-1,"13959363":-1,"13959389":-1,"13959426":-1,"13967008":-1,"13967010":-1,"13967012":-1,"13967014":-1,"13967016":-1,"13967018":-1,"13967020":-1,"13967022":-1,"13967024":-1,"13967026":-1,"13967028":-1,"13967030":-1,"13967090":-1,"13967092":-1,"13967094":-1,"13967096":-1,"14221356":-1,"14221358":-1,"14221359":-1,"14221404":1,"14221407":-1,"14286892":-1,"14286894":-1,"14286895":-1,"14286940":1,"14286943":-1,"14483494":-2,"14483499":-2,"14483500":-3,"14483501":-2,"14483502":-3,"14483503":-2,"14483504":-1,"14483507":-1,"14483508":-2,"14483510":-1,"14483512":-1,"14483514":-2,"14483515":-2,"14483516":-3,"14483517":-3,"14483521":-2,"14483523":-1,"14483527":-1,"14483530":-2,"14483535":-1,"14483537":-1,"14483551":-3,"14483553":-2,"14483555":-2,"14483556":-2,"14483557":-2,"14483558":-1,"14483559":-2,"14483565":-2,"14483566":-2,"14483567":-2,"14483568":-2,"14483569":-2,"14483570":-2,"14483571":-2,"14483573":-2,"14483574":-1,"14483575":-1,"14483576":-1,"14483577":-1,"14483578":-1,"14483648":-2,"14483649":-2,"14483650":-2,"14483651":-2,"14483666":-1,"14483667":-1,"14483668":-1,"14483669":-1,"14483680":-2,"14483681":-2,"14483682":-2,"14483683":-2,"14483688":-2,"14483689":-2,"14483690":-2,"14483698":-2,"14483699":-2,"14483700":-2,"14483701":-2,"14483705":-2,"14483706":-2,"14483709":-1,"14483714":-2,"14483715":-2,"14483729":-2,"14483817":-2,"14483872":-1,"14483873":-2,"14483888":-2,"14491296":-2,"14491297":-2,"14491298":-2,"14491299":-2,"14491300":-2,"14491301":-2,"14491302":-2,"14491303":-2,"14491304":-2,"14491305":-2,"14491306":-2,"14491307":-2,"14491308":-2,"14491309":-2,"14491310":-2,"14491311":-2,"14491312":-2,"14491313":-2,"14491314":-2,"14491315":-2,"14491316":-2,"14491317":-2,"14491318":-2,"14491319":-2,"14491321":-2,"14491323":-2,"14491325":-2,"14491327":-2,"14491329":-2,"14491331":-2,"14491333":-2,"14491335":-2,"14491340":-1,"14491341":-2,"14491342":-1,"14491343":-2,"14491344":-1,"14491345":-2,"14491346":-1,"14491347":-2,"14491348":-1,"14491349":-2,"14491350":-1,"14491351":-2,"14491352":-1,"14491353":-2,"14491354":-1,"14491355":-2,"14491356":-1,"14491357":-2,"14491358":-1,"14491359":-2,"14491360":-1,"14491361":-2,"14491362":-1,"14491363":-2,"14491365":-2,"14491367":-2,"14491369":-2,"14491371":-2,"14491373":-2,"14491375":-2,"14491377":-2,"14491379":-1,"14491381":-1,"14491383":-1,"14491385":-1,"14680113":-1,"14680148":-2,"14680150":-1,"14680151":-1,"14680153":-2,"14680182":-1,"14680183":-1,"14680185":-1,"14680285":-2,"14680317":-1,"14687986":-2,"14687987":-1,"14687988":-2,"14687989":-1,"14687990":-2,"14687991":-1,"14687992":-2,"14687993":-1,"14745649":-1,"14745684":-2,"14745686":-1,"14745687":-1,"14745689":-2,"14745718":-1,"14745719":-1,"14745721":-1,"14745821":-2,"14745853":-1,"14753522":-2,"14753524":-2,"14753525":-1,"14753526":-2,"14753527":-1,"14753528":-2,"14811185":-1,"14811220":-2,"14811222":-1,"14811223":-1,"14811225":-2,"14811254":-1,"14811255":-1,"14811257":-1,"14811357":-2,"14811389":-1,"14819058":-2,"14819060":-2,"14819061":-1,"14819062":-2,"14819063":-1,"14819064":-2,"14876721":-1,"14876756":-2,"14876758":-1,"14876759":-1,"14876761":-2,"14876790":-1,"14876791":-1,"14876793":-1,"14876893":-2,"14876925":-1,"14884594":-2,"14884596":-2,"14884597":-1,"14884598":-2,"14884599":-1,"14884600":-2,"15204407":-1,"15204417":-1,"15204436":-3,"15204438":-1,"15204439":-1,"15204440":-1,"15204441":-2,"15204472":-1,"15204544":-1,"15204545":-1,"15204546":-1,"15204547":-1,"15204573":-2,"15204610":-1,"15212192":-1,"15212194":-1,"15212196":-1,"15212198":-1,"15212200":-1,"15212202":-1,"15212204":-1,"15212206":-1,"15212208":-1,"15212210":-1,"15212212":-1,"15212214":-1,"15212274":-2,"15212276":-2,"15212278":-2,"15212280":-2,"15269972":-2,"15335508":-2,"15532116":1,"15859761":-1,"15859767":-1,"15859777":-1,"15859796":-3,"15859798":-1,"15859799":-1,"15859800":-1,"15859801":-2,"15859830":-1,"15859831":-1,"15859832":-1,"15859833":-1,"15859904":-1,"15859905":-1,"15859906":-1,"15859907":-1,"15859933":-2,"15859965":-1,"15859970":-1,"15867552":-1,"15867554":-1,"15867556":-1,"15867558":-1,"15867560":-1,"15867562":-1,"15867564":-1,"15867566":-1,"15867568":-1,"15867570":-1,"15867572":-1,"15867574":-1,"15867634":-2,"15867635":-1,"15867636":-2,"15867637":-1,"15867638":-2,"15867639":-1,"15867640":-2,"15867641":-1,"15925297":-1,"15925303":-1,"15925313":-1,"15925332":-2,"15925334":-1,"15925335":-1,"15925336":-1,"15925337":-2,"15925366":-1,"15925367":-1,"15925368":-1,"15925369":-1,"15925440":-1,"15925441":-1,"15925442":-1,"15925443":-1,"15925469":-2,"15925501":-1,"15925506":-1,"15933088":-1,"15933090":-1,"15933092":-1,"15933094":-1,"15933096":-1,"15933098":-1,"15933100":-1,"15933102":-1,"15933104":-1,"15933106":-1,"15933108":-1,"15933110":-1,"15933170":-2,"15933172":-2,"15933173":-1,"15933174":-2,"15933175":-1,"15933176":-2,"15990833":-1,"15990839":-1,"15990849":-1,"15990868":-2,"15990870":-1,"15990871":-1,"15990872":-1,"15990873":-2,"15990902":-1,"15990903":-1,"15990904":-1,"15990905":-1,"15990976":-1,"15990977":-1,"15990978":-1,"15990979":-1,"15991005":-2,"15991037":-1,"15991042":-1,"15998624":-1,"15998626":-1,"15998628":-1,"15998630":-1,"15998632":-1,"15998634":-1,"15998636":-1,"15998638":-1,"15998640":-1,"15998642":-1,"15998644":-1,"15998646":-1,"15998706":-2,"15998708":-2,"15998709":-1,"15998710":-2,"15998711":-1,"15998712":-2,"16056369":-1,"16056375":-1,"16056385":-1,"16056404":-2,"16056406":-1,"16056407":-1,"16056408":-1,"16056409":-2,"16056438":-1,"16056439":-1,"16056440":-1,"16056441":-1,"16056512":-1,"16056513":-1,"16056514":-1,"16056515":-1,"16056541":-2,"16056573":-1,"16056578":-1,"16064160":-1,"16064162":-1,"16064164":-1,"16064166":-1,"16064168":-1,"16064170":-1,"16064172":-1,"16064174":-1,"16064176":-1,"16064178":-1,"16064180":-1,"16064182":-1,"16064242":-2,"16064244":-2,"16064245":-1,"16064246":-2,"16064247":-1,"16064248":-2,"16318548":-2,"16318550":-1,"16318551":-1,"16318553":-2,"16318685":-2,"16326386":-2,"16326388":-2,"16326390":-2,"16326392":-2,"16384084":-2,"16384086":-1,"16384087":-1,"16384089":-2,"16384221":-2,"16391922":-2,"16391924":-2,"16391926":-2,"16391928":-2,"16580646":-1,"16580652":-2,"16580654":-2,"16580655":-2,"16580660":-1,"16580668":-1,"16580669":-1,"16580673":-2,"16580682":-2,"16580692":-2,"16580696":-1,"16580697":-1,"16580698":-1,"16580703":-2,"16580705":-1,"16580707":-1,"16580708":-1,"16580709":-1,"16580711":-1,"16580719":-1,"16580721":-1,"16580800":-2,"16580801":-2,"16580802":-2,"16580803":-2,"16580829":-1,"16580833":-1,"16580841":-1,"16580851":-1,"16580866":-2,"16580881":-1,"16581025":-1,"16588448":-2,"16588449":-1,"16588450":-2,"16588451":-1,"16588452":-2,"16588454":-2,"16588456":-2,"16588458":-2,"16588460":-2,"16588462":-2,"16588464":-2,"16588466":-2,"16588468":-2,"16588470":-2,"16588473":-1,"16588475":-1,"16588493":-1,"16588495":-1,"16588507":-1,"16588511":-1,"16588515":-1,"16588530":-1,"16588532":-1,"16588534":-1,"16588536":-1,"16908322":-2,"16908327":-2,"16908330":-2,"16908337":-1,"16908348":-1,"16908349":-1,"16908351":-2,"16908355":-1,"16908359":-1,"16908367":-1,"16908369":-1,"16908372":-2,"16908374":-2,"16908375":-2,"16908377":-2,"16908380":-1,"16908382":-2,"16908387":-1,"16908388":-1,"16908389":-1,"16908391":-1,"16908399":-1,"16908401":-1,"16908404":-1,"16908405":-1,"16908406":-2,"16908407":-2,"16908409":-2,"16908498":-1,"16908499":-1,"16908500":-1,"16908501":-1,"16908509":-2,"16908520":-1,"16908521":-1,"16908522":-1,"16908530":-1,"16908531":-1,"16908532":-1,"16908533":-1,"16908537":-1,"16908538":-1,"16908541":-2,"16908561":-1,"16908649":-1,"16908704":-1,"16908705":-1,"16908720":-1,"16916153":-1,"16916155":-1,"16916157":-1,"16916159":-1,"16916161":-1,"16916163":-1,"16916165":-1,"16916167":-1,"16916172":-1,"16916173":-1,"16916174":-1,"16916175":-1,"16916176":-1,"16916177":-1,"16916178":-1,"16916179":-1,"16916180":-1,"16916181":-1,"16916182":-1,"16916183":-1,"16916184":-1,"16916185":-1,"16916186":-1,"16916187":-1,"16916188":-1,"16916189":-1,"16916190":-1,"16916191":-1,"16916192":-1,"16916193":-1,"16916194":-1,"16916195":-1,"16916197":-1,"16916199":-1,"16916201":-1,"16916203":-1,"16916205":-1,"16916207":-1,"16916209":-1,"16916210":-2,"16916211":-2,"16916212":-2,"16916213":-2,"16916214":-2,"16916215":-2,"16916216":-2,"16916217":-2,"16916505":-3,"16973873":-1,"16973908":-2,"16973910":-1,"16973911":-1,"16973913":-2,"16973942":-1,"16973943":-1,"16973945":-1,"16974045":-2,"16974077":-1,"16981746":-2,"16981748":-2,"16981749":-1,"16981750":-2,"16981751":-1,"16981752":-2,"17825836":-1,"17825838":-1,"17825839":-1,"17825857":-1,"17825876":-1,"17825878":-1,"17825879":-1,"17825880":-1,"17825881":-1,"17825882":-1,"17825887":-1,"17825984":-1,"17825985":-1,"17825986":-1,"17825987":-1,"17826013":-1,"17826050":-1,"17833632":-1,"17833634":-1,"17833636":-1,"17833638":-1,"17833640":-1,"17833642":-1,"17833644":-1,"17833646":-1,"17833648":-1,"17833650":-1,"17833652":-1,"17833654":-1,"17833714":-1,"17833716":-1,"17833718":-1,"17833720":-1,"17891564":2,"17891625":2,"19398748":1,"19464276":1,"23593004":-1,"23593006":-1,"23593007":-1,"23593052":1,"23593055":-1,"23658580":-2,"23658582":-1,"23658583":-1,"23658585":-2,"23658717":-2,"23666418":-2,"23666420":-2,"23666422":-2,"23666424":-2,"27263010":1,"27263015":1,"27263020":-1,"27263022":-1,"27263031":1,"27263041":-1,"27263168":-1,"27263169":-1,"27263170":-1,"27263171":-1,"27263212":1,"27263234":-1,"27263273":2,"27270816":-1,"27270818":-1,"27270820":-1,"27270822":-1,"27270824":-1,"27270826":-1,"27270828":-1,"27270830":-1,"27270832":-1,"27270834":-1,"27270836":-1,"27270838":-1,"27328556":-1,"27328558":-1,"27328575":1,"27328577":-1,"27328604":2,"27328628":1,"27328704":-1,"27328705":-1,"27328706":-1,"27328707":-1,"27328770":-1,"27328784":1,"27336352":-1,"27336354":-1,"27336356":-1,"27336358":-1,"27336360":-1,"27336362":-1,"27336364":-1,"27336366":-1,"27336368":-1,"27336370":-1,"27336372":-1,"27336374":-1,"27336729":1,"28246054":-1,"28246057":1,"28246059":-2,"28246060":-3,"28246061":-2,"28246062":-3,"28246063":-1,"28246064":-1,"28246068":-1,"28246070":-1,"28246074":-2,"28246075":-2,"28246076":-2,"28246077":-2,"28246081":-2,"28246083":-1,"28246087":-1,"28246090":-3,"28246095":-1,"28246097":-1,"28246105":1,"28246109":1,"28246113":-2,"28246115":-2,"28246116":-2,"28246117":-2,"28246119":-2,"28246125":-2,"28246126":-2,"28246127":-2,"28246128":-2,"28246129":-2,"28246130":-2,"28246131":-2,"28246132":-1,"28246133":-2,"28246134":-2,"28246135":-1,"28246136":-1,"28246137":-2,"28246138":-2,"28246141":1,"28246142":-2,"28246208":-2,"28246209":-2,"28246210":-2,"28246211":-2,"28246226":-1,"28246227":-1,"28246228":-1,"28246229":-1,"28246237":1,"28246240":-2,"28246241":-2,"28246242":-2,"28246243":-2,"28246248":-2,"28246249":-2,"28246250":-2,"28246252":2,"28246258":-2,"28246259":-2,"28246260":-2,"28246261":-2,"28246265":-2,"28246266":-2,"28246269":-2,"28246274":-2,"28246275":-2,"28246289":-2,"28246313":2,"28246377":-2,"28246432":-1,"28246433":-2,"28246448":-2,"28253856":-2,"28253857":-2,"28253858":-2,"28253859":-2,"28253860":-2,"28253861":-2,"28253862":-2,"28253863":-2,"28253864":-2,"28253865":-2,"28253866":-2,"28253867":-2,"28253868":-2,"28253869":-2,"28253870":-2,"28253871":-2,"28253872":-2,"28253873":-2,"28253874":-2,"28253875":-2,"28253876":-2,"28253877":-2,"28253878":-2,"28253879":-2,"28253881":-2,"28253883":-2,"28253885":-2,"28253887":-2,"28253889":-2,"28253891":-2,"28253893":-2,"28253895":-2,"28253900":-1,"28253901":-2,"28253902":-1,"28253903":-2,"28253904":-1,"28253905":-2,"28253906":-1,"28253907":-2,"28253908":-1,"28253909":-2,"28253910":-1,"28253911":-2,"28253912":-1,"28253913":-2,"28253914":-1,"28253915":-2,"28253916":-1,"28253917":-2,"28253918":-1,"28253919":-2,"28253920":-1,"28253921":-2,"28253922":-1,"28253923":-2,"28253925":-2,"28253927":-2,"28253929":-2,"28253931":-2,"28253933":-2,"28253935":-2,"28253937":-2,"28253938":1,"28253939":-2,"28253940":1,"28253941":-2,"28253942":1,"28253943":-2,"28253944":1,"28253945":-2,"28311593":1,"28311596":-1,"28311598":-1,"28311599":-1,"28311601":1,"28311604":-1,"28311612":-1,"28311615":1,"28311617":-1,"28311626":-1,"28311644":1,"28311645":1,"28311647":-1,"28311651":-1,"28311652":-1,"28311653":-1,"28311655":-1,"28311663":-1,"28311665":-1,"28311677":1,"28311744":-1,"28311745":-1,"28311746":-1,"28311747":-1,"28311784":-1,"28311785":-1,"28311786":-1,"28311794":-1,"28311795":-1,"28311796":-1,"28311797":-1,"28311810":-1,"28311825":-1,"28311969":-1,"28319392":-1,"28319394":-1,"28319396":-1,"28319398":-1,"28319400":-1,"28319402":-1,"28319404":-1,"28319406":-1,"28319408":-1,"28319410":-1,"28319412":-1,"28319414":-1,"28319417":-1,"28319419":-1,"28319421":-1,"28319423":-1,"28319425":-1,"28319427":-1,"28319429":-1,"28319431":-1,"28319437":-1,"28319439":-1,"28319441":-1,"28319443":-1,"28319445":-1,"28319447":-1,"28319449":-1,"28319451":-1,"28319453":-1,"28319455":-1,"28319457":-1,"28319459":-1,"28319769":1,"513802274":-2,"513802279":-2,"513802282":-2,"513802289":-1,"513802300":-1,"513802301":-1,"513802303":-2,"513802307":-1,"513802311":-1,"513802319":-1,"513802321":-1,"513802324":-2,"513802326":-2,"513802327":-2,"513802329":-2,"513802332":-1,"513802334":-2,"513802339":-1,"513802340":-1,"513802341":-1,"513802343":-1,"513802351":-1,"513802353":-1,"513802356":-1,"513802357":-1,"513802358":-2,"513802359":-2,"513802361":-2,"513802450":-1,"513802451":-1,"513802452":-1,"513802453":-1,"513802461":-2,"513802472":-1,"513802473":-1,"513802474":-1,"513802482":-1,"513802483":-1,"513802484":-1,"513802485":-1,"513802489":-1,"513802490":-1,"513802493":-2,"513802513":-1,"513802601":-1,"513802656":-1,"513802657":-1,"513802672":-1,"513810105":-1,"513810107":-1,"513810109":-1,"513810111":-1,"513810113":-1,"513810115":-1,"513810117":-1,"513810119":-1,"513810124":-1,"513810125":-1,"513810126":-1,"513810127":-1,"513810128":-1,"513810129":-1,"513810130":-1,"513810131":-1,"513810132":-1,"513810133":-1,"513810134":-1,"513810135":-1,"513810136":-1,"513810137":-1,"513810138":-1,"513810139":-1,"513810140":-1,"513810141":-1,"513810142":-1,"513810143":-1,"513810144":-1,"513810145":-1,"513810146":-1,"513810147":-1,"513810149":-1,"513810151":-1,"513810153":-1,"513810155":-1,"513810157":-1,"513810159":-1,"513810161":-1,"513810162":-2,"513810163":-2,"513810164":-2,"513810165":-2,"513810166":-2,"513810167":-2,"513810168":-2,"513810169":-2,"513810457":-3,"513867825":-1,"513867860":-2,"513867862":-1,"513867863":-1,"513867865":-2,"513867894":-1,"513867895":-1,"513867897":-1,"513867997":-2,"513868029":-1,"513875698":-2,"513875699":-1,"513875700":-2,"513875701":-1,"513875702":-2,"513875703":-1,"513875704":-2,"513875705":-1,"513933346":-2,"513933351":-2,"513933354":-2,"513933361":-1,"513933372":-1,"513933373":-1,"513933375":-2,"513933379":-1,"513933383":-1,"513933391":-1,"513933393":-1,"513933396":-2,"513933398":-2,"513933399":-2,"513933401":-2,"513933404":-1,"513933406":-2,"513933411":-1,"513933412":-1,"513933413":-1,"513933415":-1,"513933423":-1,"513933425":-1,"513933428":-1,"513933429":-1,"513933430":-2,"513933431":-2,"513933433":-2,"513933522":-1,"513933523":-1,"513933524":-1,"513933525":-1,"513933533":-2,"513933544":-1,"513933545":-1,"513933546":-1,"513933554":-1,"513933555":-1,"513933556":-1,"513933557":-1,"513933561":-1,"513933562":-1,"513933565":-2,"513933585":-1,"513933673":-1,"513933728":-1,"513933729":-1,"513933744":-1,"513941177":-1,"513941179":-1,"513941181":-1,"513941183":-1,"513941185":-1,"513941187":-1,"513941189":-1,"513941191":-1,"513941196":-1,"513941197":-1,"513941198":-1,"513941199":-1,"513941200":-1,"513941201":-1,"513941202":-1,"513941203":-1,"513941204":-1,"513941205":-1,"513941206":-1,"513941207":-1,"513941208":-1,"513941209":-1,"513941210":-1,"513941211":-1,"513941212":-1,"513941213":-1,"513941214":-1,"513941215":-1,"513941216":-1,"513941217":-1,"513941218":-1,"513941219":-1,"513941221":-1,"513941223":-1,"513941225":-1,"513941227":-1,"513941229":-1,"513941231":-1,"513941233":-1,"513941234":-2,"513941235":-2,"513941236":-2,"513941237":-2,"513941238":-2,"513941239":-2,"513941240":-2,"513941241":-2,"513941529":-3,"513998897":-1,"513998932":-2,"513998934":-1,"513998935":-1,"513998937":-2,"513998966":-1,"513998967":-1,"513998969":-1,"513999069":-2,"513999101":-1,"514006770":-2,"514006771":-1,"514006772":-2,"514006773":-1,"514006774":-2,"514006775":-1,"514006776":-2,"514006777":-1,"514064418":-2,"514064423":-2,"514064426":-2,"514064433":-1,"514064444":-1,"514064445":-1,"514064447":-2,"514064451":-1,"514064455":-1,"514064463":-1,"514064465":-1,"514064468":-2,"514064470":-2,"514064471":-2,"514064473":-2,"514064476":-1,"514064478":-2,"514064483":-1,"514064484":-1,"514064485":-1,"514064487":-1,"514064495":-1,"514064497":-1,"514064500":-1,"514064501":-1,"514064502":-2,"514064503":-2,"514064505":-2,"514064594":-1,"514064595":-1,"514064596":-1,"514064597":-1,"514064605":-2,"514064616":-1,"514064617":-1,"514064618":-1,"514064626":-1,"514064627":-1,"514064628":-1,"514064629":-1,"514064633":-1,"514064634":-1,"514064637":-2,"514064657":-1,"514064745":-1,"514064800":-1,"514064801":-1,"514064816":-1,"514072249":-1,"514072251":-1,"514072253":-1,"514072255":-1,"514072257":-1,"514072259":-1,"514072261":-1,"514072263":-1,"514072268":-1,"514072269":-1,"514072270":-1,"514072271":-1,"514072272":-1,"514072273":-1,"514072274":-1,"514072275":-1,"514072276":-1,"514072277":-1,"514072278":-1,"514072279":-1,"514072280":-1,"514072281":-1,"514072282":-1,"514072283":-1,"514072284":-1,"514072285":-1,"514072286":-1,"514072287":-1,"514072288":-1,"514072289":-1,"514072290":-1,"514072291":-1,"514072293":-1,"514072295":-1,"514072297":-1,"514072299":-1,"514072301":-1,"514072303":-1,"514072305":-1,"514072306":-2,"514072307":-2,"514072308":-2,"514072309":-2,"514072310":-2,"514072311":-2,"514072312":-2,"514072313":-2,"514072601":-3,"514129969":-1,"514130004":-2,"514130006":-1,"514130007":-1,"514130009":-2,"514130038":-1,"514130039":-1,"514130041":-1,"514130141":-2,"514130173":-1,"514137842":-2,"514137844":-2,"514137845":-1,"514137846":-2,"514137847":-1,"514137848":-2,"514195490":-2,"514195495":-2,"514195498":-2,"514195505":-1,"514195516":-1,"514195517":-1,"514195519":-2,"514195523":-1,"514195527":-1,"514195535":-1,"514195537":-1,"514195540":-2,"514195542":-2,"514195543":-2,"514195545":-2,"514195548":-1,"514195550":-2,"514195555":-1,"514195556":-1,"514195557":-1,"514195559":-1,"514195567":-1,"514195569":-1,"514195572":-1,"514195573":-1,"514195574":-2,"514195575":-2,"514195577":-2,"514195666":-1,"514195667":-1,"514195668":-1,"514195669":-1,"514195677":-2,"514195688":-1,"514195689":-1,"514195690":-1,"514195698":-1,"514195699":-1,"514195700":-1,"514195701":-1,"514195705":-1,"514195706":-1,"514195709":-2,"514195729":-1,"514195817":-1,"514195872":-1,"514195873":-1,"514195888":-1,"514203321":-1,"514203323":-1,"514203325":-1,"514203327":-1,"514203329":-1,"514203331":-1,"514203333":-1,"514203335":-1,"514203340":-1,"514203341":-1,"514203342":-1,"514203343":-1,"514203344":-1,"514203345":-1,"514203346":-1,"514203347":-1,"514203348":-1,"514203349":-1,"514203350":-1,"514203351":-1,"514203352":-1,"514203353":-1,"514203354":-1,"514203355":-1,"514203356":-1,"514203357":-1,"514203358":-1,"514203359":-1,"514203360":-1,"514203361":-1,"514203362":-1,"514203363":-1,"514203365":-1,"514203367":-1,"514203369":-1,"514203371":-1,"514203373":-1,"514203375":-1,"514203377":-1,"514203378":-2,"514203379":-2,"514203380":-2,"514203381":-2,"514203382":-2,"514203383":-2,"514203384":-2,"514203385":-2,"514203673":-3,"514261041":-1,"514261076":-2,"514261078":-1,"514261079":-1,"514261081":-2,"514261110":-1,"514261111":-1,"514261113":-1,"514261213":-2,"514261245":-1,"514268914":-2,"514268916":-2,"514268917":-1,"514268918":-2,"514268919":-1,"514268920":-2,"514326562":-2,"514326567":-2,"514326570":-2,"514326577":-1,"514326588":-1,"514326589":-1,"514326591":-2,"514326595":-1,"514326599":-1,"514326607":-1,"514326609":-1,"514326612":-2,"514326614":-2,"514326615":-2,"514326617":-2,"514326620":-1,"514326622":-2,"514326627":-1,"514326628":-1,"514326629":-1,"514326631":-1,"514326639":-1,"514326641":-1,"514326644":-1,"514326645":-1,"514326646":-2,"514326647":-2,"514326649":-2,"514326738":-1,"514326739":-1,"514326740":-1,"514326741":-1,"514326749":-2,"514326760":-1,"514326761":-1,"514326762":-1,"514326770":-1,"514326771":-1,"514326772":-1,"514326773":-1,"514326777":-1,"514326778":-1,"514326781":-2,"514326801":-1,"514326889":-1,"514326944":-1,"514326945":-1,"514326960":-1,"514334393":-1,"514334395":-1,"514334397":-1,"514334399":-1,"514334401":-1,"514334403":-1,"514334405":-1,"514334407":-1,"514334412":-1,"514334413":-1,"514334414":-1,"514334415":-1,"514334416":-1,"514334417":-1,"514334418":-1,"514334419":-1,"514334420":-1,"514334421":-1,"514334422":-1,"514334423":-1,"514334424":-1,"514334425":-1,"514334426":-1,"514334427":-1,"514334428":-1,"514334429":-1,"514334430":-1,"514334431":-1,"514334432":-1,"514334433":-1,"514334434":-1,"514334435":-1,"514334437":-1,"514334439":-1,"514334441":-1,"514334443":-1,"514334445":-1,"514334447":-1,"514334449":-1,"514334450":-2,"514334451":-2,"514334452":-2,"514334453":-2,"514334454":-2,"514334455":-2,"514334456":-2,"514334457":-2,"514334745":-3,"514392113":-1,"514392148":-2,"514392150":-1,"514392151":-1,"514392153":-2,"514392182":-1,"514392183":-1,"514392185":-1,"514392285":-2,"514392317":-1,"514399986":-2,"514399988":-2,"514399989":-1,"514399990":-2,"514399991":-1,"514399992":-2,"514457634":-2,"514457639":-2,"514457642":-2,"514457649":-1,"514457660":-1,"514457661":-1,"514457663":-2,"514457667":-1,"514457671":-1,"514457679":-1,"514457681":-1,"514457684":-2,"514457686":-2,"514457687":-2,"514457689":-2,"514457692":-1,"514457694":-2,"514457699":-1,"514457700":-1,"514457701":-1,"514457703":-1,"514457711":-1,"514457713":-1,"514457716":-1,"514457717":-1,"514457718":-2,"514457719":-2,"514457721":-2,"514457810":-1,"514457811":-1,"514457812":-1,"514457813":-1,"514457821":-2,"514457832":-1,"514457833":-1,"514457834":-1,"514457842":-1,"514457843":-1,"514457844":-1,"514457845":-1,"514457849":-1,"514457850":-1,"514457853":-2,"514457873":-1,"514457961":-1,"514458016":-1,"514458017":-1,"514458032":-1,"514465465":-1,"514465467":-1,"514465469":-1,"514465471":-1,"514465473":-1,"514465475":-1,"514465477":-1,"514465479":-1,"514465484":-1,"514465485":-1,"514465486":-1,"514465487":-1,"514465488":-1,"514465489":-1,"514465490":-1,"514465491":-1,"514465492":-1,"514465493":-1,"514465494":-1,"514465495":-1,"514465496":-1,"514465497":-1,"514465498":-1,"514465499":-1,"514465500":-1,"514465501":-1,"514465502":-1,"514465503":-1,"514465504":-1,"514465505":-1,"514465506":-1,"514465507":-1,"514465509":-1,"514465511":-1,"514465513":-1,"514465515":-1,"514465517":-1,"514465519":-1,"514465521":-1,"514465522":-2,"514465523":-2,"514465524":-2,"514465525":-2,"514465526":-2,"514465527":-2,"514465528":-2,"514465529":-2,"514465817":-3,"514523185":-1,"514523220":-2,"514523222":-1,"514523223":-1,"514523225":-2,"514523254":-1,"514523255":-1,"514523257":-1,"514523357":-2,"514523389":-1,"514531058":-2,"514531060":-2,"514531061":-1,"514531062":-2,"514531063":-1,"514531064":-2,"514588706":-2,"514588711":-2,"514588714":-2,"514588721":-1,"514588732":-1,"514588733":-1,"514588735":-2,"514588739":-1,"514588743":-1,"514588751":-1,"514588753":-1,"514588756":-2,"514588758":-2,"514588759":-2,"514588761":-2,"514588764":-1,"514588766":-2,"514588771":-1,"514588772":-1,"514588773":-1,"514588775":-1,"514588783":-1,"514588785":-1,"514588788":-1,"514588789":-1,"514588790":-2,"514588791":-2,"514588793":-2,"514588882":-1,"514588883":-1,"514588884":-1,"514588885":-1,"514588893":-2,"514588904":-1,"514588905":-1,"514588906":-1,"514588914":-1,"514588915":-1,"514588916":-1,"514588917":-1,"514588921":-1,"514588922":-1,"514588925":-2,"514588945":-1,"514589033":-1,"514589088":-1,"514589089":-1,"514589104":-1,"514596537":-1,"514596539":-1,"514596541":-1,"514596543":-1,"514596545":-1,"514596547":-1,"514596549":-1,"514596551":-1,"514596556":-1,"514596557":-1,"514596558":-1,"514596559":-1,"514596560":-1,"514596561":-1,"514596562":-1,"514596563":-1,"514596564":-1,"514596565":-1,"514596566":-1,"514596567":-1,"514596568":-1,"514596569":-1,"514596570":-1,"514596571":-1,"514596572":-1,"514596573":-1,"514596574":-1,"514596575":-1,"514596576":-1,"514596577":-1,"514596578":-1,"514596579":-1,"514596581":-1,"514596583":-1,"514596585":-1,"514596587":-1,"514596589":-1,"514596591":-1,"514596593":-1,"514596594":-2,"514596595":-2,"514596596":-2,"514596597":-2,"514596598":-2,"514596599":-2,"514596600":-2,"514596601":-2,"514596889":-3,"514654257":-1,"514654292":-2,"514654294":-1,"514654295":-1,"514654297":-2,"514654326":-1,"514654327":-1,"514654329":-1,"514654429":-2,"514654461":-1,"514662130":-2,"514662132":-2,"514662133":-1,"514662134":-2,"514662135":-1,"514662136":-2,"514719778":-2,"514719783":-2,"514719786":-2,"514719793":-1,"514719804":-1,"514719805":-1,"514719807":-2,"514719811":-1,"514719815":-1,"514719823":-1,"514719825":-1,"514719828":-2,"514719830":-2,"514719831":-2,"514719833":-2,"514719836":-1,"514719838":-2,"514719843":-1,"514719844":-1,"514719845":-1,"514719847":-1,"514719855":-1,"514719857":-1,"514719860":-1,"514719861":-1,"514719862":-2,"514719863":-2,"514719865":-2,"514719954":-1,"514719955":-1,"514719956":-1,"514719957":-1,"514719965":-2,"514719976":-1,"514719977":-1,"514719978":-1,"514719986":-1,"514719987":-1,"514719988":-1,"514719989":-1,"514719993":-1,"514719994":-1,"514719997":-2,"514720017":-1,"514720105":-1,"514720160":-1,"514720161":-1,"514720176":-1,"514727609":-1,"514727611":-1,"514727613":-1,"514727615":-1,"514727617":-1,"514727619":-1,"514727621":-1,"514727623":-1,"514727628":-1,"514727629":-1,"514727630":-1,"514727631":-1,"514727632":-1,"514727633":-1,"514727634":-1,"514727635":-1,"514727636":-1,"514727637":-1,"514727638":-1,"514727639":-1,"514727640":-1,"514727641":-1,"514727642":-1,"514727643":-1,"514727644":-1,"514727645":-1,"514727646":-1,"514727647":-1,"514727648":-1,"514727649":-1,"514727650":-1,"514727651":-1,"514727653":-1,"514727655":-1,"514727657":-1,"514727659":-1,"514727661":-1,"514727663":-1,"514727665":-1,"514727666":-2,"514727667":-2,"514727668":-2,"514727669":-2,"514727670":-2,"514727671":-2,"514727672":-2,"514727673":-2,"514727961":-3,"514785329":-1,"514785364":-2,"514785366":-1,"514785367":-1,"514785369":-2,"514785398":-1,"514785399":-1,"514785401":-1,"514785501":-2,"514785533":-1,"514793202":-2,"514793204":-2,"514793205":-1,"514793206":-2,"514793207":-1,"514793208":-2,"514850850":-2,"514850855":-2,"514850858":-2,"514850865":-1,"514850876":-1,"514850877":-1,"514850879":-2,"514850883":-1,"514850887":-1,"514850895":-1,"514850897":-1,"514850900":-2,"514850902":-2,"514850903":-2,"514850905":-2,"514850908":-1,"514850910":-2,"514850915":-1,"514850916":-1,"514850917":-1,"514850919":-1,"514850927":-1,"514850929":-1,"514850932":-1,"514850933":-1,"514850934":-2,"514850935":-2,"514850937":-2,"514851026":-1,"514851027":-1,"514851028":-1,"514851029":-1,"514851037":-2,"514851048":-1,"514851049":-1,"514851050":-1,"514851058":-1,"514851059":-1,"514851060":-1,"514851061":-1,"514851065":-1,"514851066":-1,"514851069":-2,"514851089":-1,"514851177":-1,"514851232":-1,"514851233":-1,"514851248":-1,"514858681":-1,"514858683":-1,"514858685":-1,"514858687":-1,"514858689":-1,"514858691":-1,"514858693":-1,"514858695":-1,"514858700":-1,"514858701":-1,"514858702":-1,"514858703":-1,"514858704":-1,"514858705":-1,"514858706":-1,"514858707":-1,"514858708":-1,"514858709":-1,"514858710":-1,"514858711":-1,"514858712":-1,"514858713":-1,"514858714":-1,"514858715":-1,"514858716":-1,"514858717":-1,"514858718":-1,"514858719":-1,"514858720":-1,"514858721":-1,"514858722":-1,"514858723":-1,"514858725":-1,"514858727":-1,"514858729":-1,"514858731":-1,"514858733":-1,"514858735":-1,"514858737":-1,"514858738":-2,"514858739":-2,"514858740":-2,"514858741":-2,"514858742":-2,"514858743":-2,"514858744":-2,"514858745":-2,"514859033":-3,"514916401":-1,"514916436":-2,"514916438":-1,"514916439":-1,"514916441":-2,"514916470":-1,"514916471":-1,"514916473":-1,"514916573":-2,"514916605":-1,"514924274":-2,"514924276":-2,"514924277":-1,"514924278":-2,"514924279":-1,"514924280":-2,"514981922":-2,"514981927":-2,"514981930":-2,"514981937":-1,"514981948":-1,"514981949":-1,"514981951":-2,"514981955":-1,"514981959":-1,"514981967":-1,"514981969":-1,"514981972":-2,"514981974":-2,"514981975":-2,"514981977":-2,"514981980":-1,"514981982":-2,"514981987":-1,"514981988":-1,"514981989":-1,"514981991":-1,"514981999":-1,"514982001":-1,"514982004":-1,"514982005":-1,"514982006":-2,"514982007":-2,"514982009":-2,"514982098":-1,"514982099":-1,"514982100":-1,"514982101":-1,"514982109":-2,"514982120":-1,"514982121":-1,"514982122":-1,"514982130":-1,"514982131":-1,"514982132":-1,"514982133":-1,"514982137":-1,"514982138":-1,"514982141":-2,"514982161":-1,"514982249":-1,"514982304":-1,"514982305":-1,"514982320":-1,"514989753":-1,"514989755":-1,"514989757":-1,"514989759":-1,"514989761":-1,"514989763":-1,"514989765":-1,"514989767":-1,"514989772":-1,"514989773":-1,"514989774":-1,"514989775":-1,"514989776":-1,"514989777":-1,"514989778":-1,"514989779":-1,"514989780":-1,"514989781":-1,"514989782":-1,"514989783":-1,"514989784":-1,"514989785":-1,"514989786":-1,"514989787":-1,"514989788":-1,"514989789":-1,"514989790":-1,"514989791":-1,"514989792":-1,"514989793":-1,"514989794":-1,"514989795":-1,"514989797":-1,"514989799":-1,"514989801":-1,"514989803":-1,"514989805":-1,"514989807":-1,"514989809":-1,"514989810":-2,"514989811":-2,"514989812":-2,"514989813":-2,"514989814":-2,"514989815":-2,"514989816":-2,"514989817":-2,"514990105":-3,"515047473":-1,"515047508":-2,"515047510":-1,"515047511":-1,"515047513":-2,"515047542":-1,"515047543":-1,"515047545":-1,"515047645":-2,"515047677":-1,"515055346":-2,"515055348":-2,"515055349":-1,"515055350":-2,"515055351":-1,"515055352":-2,"515112994":-2,"515112999":-2,"515113002":-2,"515113009":-1,"515113020":-1,"515113021":-1,"515113023":-2,"515113027":-1,"515113031":-1,"515113039":-1,"515113041":-1,"515113044":-2,"515113046":-2,"515113047":-2,"515113049":-2,"515113052":-1,"515113054":-2,"515113059":-1,"515113060":-1,"515113061":-1,"515113063":-1,"515113071":-1,"515113073":-1,"515113076":-1,"515113077":-1,"515113078":-2,"515113079":-2,"515113081":-2,"515113170":-1,"515113171":-1,"515113172":-1,"515113173":-1,"515113181":-2,"515113192":-1,"515113193":-1,"515113194":-1,"515113202":-1,"515113203":-1,"515113204":-1,"515113205":-1,"515113209":-1,"515113210":-1,"515113213":-2,"515113233":-1,"515113321":-1,"515113376":-1,"515113377":-1,"515113392":-1,"515120825":-1,"515120827":-1,"515120829":-1,"515120831":-1,"515120833":-1,"515120835":-1,"515120837":-1,"515120839":-1,"515120844":-1,"515120845":-1,"515120846":-1,"515120847":-1,"515120848":-1,"515120849":-1,"515120850":-1,"515120851":-1,"515120852":-1,"515120853":-1,"515120854":-1,"515120855":-1,"515120856":-1,"515120857":-1,"515120858":-1,"515120859":-1,"515120860":-1,"515120861":-1,"515120862":-1,"515120863":-1,"515120864":-1,"515120865":-1,"515120866":-1,"515120867":-1,"515120869":-1,"515120871":-1,"515120873":-1,"515120875":-1,"515120877":-1,"515120879":-1,"515120881":-1,"515120882":-2,"515120883":-2,"515120884":-2,"515120885":-2,"515120886":-2,"515120887":-2,"515120888":-2,"515120889":-2,"515121177":-3,"515178545":-1,"515178580":-2,"515178582":-1,"515178583":-1,"515178585":-2,"515178614":-1,"515178615":-1,"515178617":-1,"515178717":-2,"515178749":-1,"515186418":-2,"515186420":-2,"515186421":-1,"515186422":-2,"515186423":-1,"515186424":-2,"515244066":-2,"515244071":-2,"515244074":-2,"515244081":-1,"515244092":-1,"515244093":-1,"515244095":-2,"515244099":-1,"515244103":-1,"515244111":-1,"515244113":-1,"515244116":-2,"515244118":-2,"515244119":-2,"515244121":-2,"515244124":-1,"515244126":-2,"515244131":-1,"515244132":-1,"515244133":-1,"515244135":-1,"515244143":-1,"515244145":-1,"515244148":-1,"515244149":-1,"515244150":-2,"515244151":-2,"515244153":-2,"515244242":-1,"515244243":-1,"515244244":-1,"515244245":-1,"515244253":-2,"515244264":-1,"515244265":-1,"515244266":-1,"515244274":-1,"515244275":-1,"515244276":-1,"515244277":-1,"515244281":-1,"515244282":-1,"515244285":-2,"515244305":-1,"515244393":-1,"515244448":-1,"515244449":-1,"515244464":-1,"515251897":-1,"515251899":-1,"515251901":-1,"515251903":-1,"515251905":-1,"515251907":-1,"515251909":-1,"515251911":-1,"515251916":-1,"515251917":-1,"515251918":-1,"515251919":-1,"515251920":-1,"515251921":-1,"515251922":-1,"515251923":-1,"515251924":-1,"515251925":-1,"515251926":-1,"515251927":-1,"515251928":-1,"515251929":-1,"515251930":-1,"515251931":-1,"515251932":-1,"515251933":-1,"515251934":-1,"515251935":-1,"515251936":-1,"515251937":-1,"515251938":-1,"515251939":-1,"515251941":-1,"515251943":-1,"515251945":-1,"515251947":-1,"515251949":-1,"515251951":-1,"515251953":-1,"515251954":-2,"515251955":-2,"515251956":-2,"515251957":-2,"515251958":-2,"515251959":-2,"515251960":-2,"515251961":-2,"515252249":-3,"515309617":-1,"515309652":-2,"515309654":-1,"515309655":-1,"515309657":-2,"515309686":-1,"515309687":-1,"515309689":-1,"515309789":-2,"515309821":-1,"515317490":-2,"515317492":-2,"515317493":-1,"515317494":-2,"515317495":-1,"515317496":-2,"515375196":1,"515440695":-1,"515440705":-1,"515440724":-3,"515440726":-1,"515440727":-1,"515440728":-1,"515440729":-2,"515440760":-1,"515440832":-1,"515440833":-1,"515440834":-1,"515440835":-1,"515440861":-2,"515440898":-1,"515448480":-1,"515448482":-1,"515448484":-1,"515448486":-1,"515448488":-1,"515448490":-1,"515448492":-1,"515448494":-1,"515448496":-1,"515448498":-1,"515448500":-1,"515448502":-1,"515448562":-2,"515448564":-2,"515448566":-2,"515448568":-2,"515506268":1,"515571767":-1,"515571777":-1,"515571796":-3,"515571798":-1,"515571799":-1,"515571800":-1,"515571801":-2,"515571832":-1,"515571904":-1,"515571905":-1,"515571906":-1,"515571907":-1,"515571933":-2,"515571970":-1,"515579552":-1,"515579554":-1,"515579556":-1,"515579558":-1,"515579560":-1,"515579562":-1,"515579564":-1,"515579566":-1,"515579568":-1,"515579570":-1,"515579572":-1,"515579574":-1,"515579634":-2,"515579636":-2,"515579638":-2,"515579640":-2,"515637340":1,"515702868":-2,"515768412":1,"515833940":-2,"515899484":1,"515965012":-2,"516030556":1,"516096084":-2,"516161628":1,"516227156":-2,"516292700":1,"516358228":-2,"516423772":1,"516554844":1,"516685868":-1,"516685870":-1,"516685871":-1,"516685889":-1,"516685908":-1,"516685910":-1,"516685911":-1,"516685912":-1,"516685913":-1,"516685914":-1,"516685919":-1,"516686016":-1,"516686017":-1,"516686018":-1,"516686019":-1,"516686045":-1,"516686082":-1,"516693664":-1,"516693666":-1,"516693668":-1,"516693670":-1,"516693672":-1,"516693674":-1,"516693676":-1,"516693678":-1,"516693680":-1,"516693682":-1,"516693684":-1,"516693686":-1,"516693746":-1,"516693748":-1,"516693750":-1,"516693752":-1,"516751409":-1,"516751415":-1,"516751425":-1,"516751444":-3,"516751446":-1,"516751447":-1,"516751448":-1,"516751449":-2,"516751478":-1,"516751479":-1,"516751480":-1,"516751481":-1,"516751552":-1,"516751553":-1,"516751554":-1,"516751555":-1,"516751581":-2,"516751613":-1,"516751618":-1,"516759200":-1,"516759202":-1,"516759204":-1,"516759206":-1,"516759208":-1,"516759210":-1,"516759212":-1,"516759214":-1,"516759216":-1,"516759218":-1,"516759220":-1,"516759222":-1,"516759282":-2,"516759283":-1,"516759284":-2,"516759285":-1,"516759286":-2,"516759287":-1,"516759288":-2,"516759289":-1,"516816940":-1,"516816942":-1,"516816943":-1,"516816961":-1,"516816980":-1,"516816982":-1,"516816983":-1,"516816984":-1,"516816985":-1,"516816986":-1,"516816991":-1,"516817088":-1,"516817089":-1,"516817090":-1,"516817091":-1,"516817117":-1,"516817154":-1,"516824736":-1,"516824738":-1,"516824740":-1,"516824742":-1,"516824744":-1,"516824746":-1,"516824748":-1,"516824750":-1,"516824752":-1,"516824754":-1,"516824756":-1,"516824758":-1,"516824818":-1,"516824820":-1,"516824822":-1,"516824824":-1,"516882481":-1,"516882487":-1,"516882497":-1,"516882516":-3,"516882518":-1,"516882519":-1,"516882520":-1,"516882521":-2,"516882550":-1,"516882551":-1,"516882552":-1,"516882553":-1,"516882624":-1,"516882625":-1,"516882626":-1,"516882627":-1,"516882653":-2,"516882685":-1,"516882690":-1,"516890272":-1,"516890274":-1,"516890276":-1,"516890278":-1,"516890280":-1,"516890282":-1,"516890284":-1,"516890286":-1,"516890288":-1,"516890290":-1,"516890292":-1,"516890294":-1,"516890354":-2,"516890355":-1,"516890356":-2,"516890357":-1,"516890358":-2,"516890359":-1,"516890360":-2,"516890361":-1,"516948012":-1,"516948014":-1,"516948015":-1,"516948033":-1,"516948052":-1,"516948054":-1,"516948055":-1,"516948056":-1,"516948057":-1,"516948058":-1,"516948063":-1,"516948160":-1,"516948161":-1,"516948162":-1,"516948163":-1,"516948189":-1,"516948226":-1,"516955808":-1,"516955810":-1,"516955812":-1,"516955814":-1,"516955816":-1,"516955818":-1,"516955820":-1,"516955822":-1,"516955824":-1,"516955826":-1,"516955828":-1,"516955830":-1,"516955890":-1,"516955892":-1,"516955894":-1,"516955896":-1,"517013553":-1,"517013559":-1,"517013569":-1,"517013588":-2,"517013590":-1,"517013591":-1,"517013592":-1,"517013593":-2,"517013622":-1,"517013623":-1,"517013624":-1,"517013625":-1,"517013696":-1,"517013697":-1,"517013698":-1,"517013699":-1,"517013725":-2,"517013757":-1,"517013762":-1,"517021344":-1,"517021346":-1,"517021348":-1,"517021350":-1,"517021352":-1,"517021354":-1,"517021356":-1,"517021358":-1,"517021360":-1,"517021362":-1,"517021364":-1,"517021366":-1,"517021426":-2,"517021428":-2,"517021429":-1,"517021430":-2,"517021431":-1,"517021432":-2,"517079084":-1,"517079086":-1,"517079087":-1,"517079105":-1,"517079124":-1,"517079126":-1,"517079127":-1,"517079128":-1,"517079129":-1,"517079130":-1,"517079135":-1,"517079232":-1,"517079233":-1,"517079234":-1,"517079235":-1,"517079261":-1,"517079298":-1,"517086880":-1,"517086882":-1,"517086884":-1,"517086886":-1,"517086888":-1,"517086890":-1,"517086892":-1,"517086894":-1,"517086896":-1,"517086898":-1,"517086900":-1,"517086902":-1,"517086962":-1,"517086964":-1,"517086966":-1,"517086968":-1,"517144625":-1,"517144631":-1,"517144641":-1,"517144660":-2,"517144662":-1,"517144663":-1,"517144664":-1,"517144665":-2,"517144694":-1,"517144695":-1,"517144696":-1,"517144697":-1,"517144768":-1,"517144769":-1,"517144770":-1,"517144771":-1,"517144797":-2,"517144829":-1,"517144834":-1,"517152416":-1,"517152418":-1,"517152420":-1,"517152422":-1,"517152424":-1,"517152426":-1,"517152428":-1,"517152430":-1,"517152432":-1,"517152434":-1,"517152436":-1,"517152438":-1,"517152498":-2,"517152500":-2,"517152501":-1,"517152502":-2,"517152503":-1,"517152504":-2,"517210156":-1,"517210158":-1,"517210159":-1,"517210177":-1,"517210196":-1,"517210198":-1,"517210199":-1,"517210200":-1,"517210201":-1,"517210202":-1,"517210207":-1,"517210304":-1,"517210305":-1,"517210306":-1,"517210307":-1,"517210333":-1,"517210370":-1,"517217952":-1,"517217954":-1,"517217956":-1,"517217958":-1,"517217960":-1,"517217962":-1,"517217964":-1,"517217966":-1,"517217968":-1,"517217970":-1,"517217972":-1,"517217974":-1,"517218034":-1,"517218036":-1,"517218038":-1,"517218040":-1,"517275697":-1,"517275703":-1,"517275713":-1,"517275732":-2,"517275734":-1,"517275735":-1,"517275736":-1,"517275737":-2,"517275766":-1,"517275767":-1,"517275768":-1,"517275769":-1,"517275840":-1,"517275841":-1,"517275842":-1,"517275843":-1,"517275869":-2,"517275901":-1,"517275906":-1,"517283488":-1,"517283490":-1,"517283492":-1,"517283494":-1,"517283496":-1,"517283498":-1,"517283500":-1,"517283502":-1,"517283504":-1,"517283506":-1,"517283508":-1,"517283510":-1,"517283570":-2,"517283572":-2,"517283573":-1,"517283574":-2,"517283575":-1,"517283576":-2,"517341228":-1,"517341230":-1,"517341231":-1,"517341249":-1,"517341268":-1,"517341270":-1,"517341271":-1,"517341272":-1,"517341273":-1,"517341274":-1,"517341279":-1,"517341376":-1,"517341377":-1,"517341378":-1,"517341379":-1,"517341405":-1,"517341442":-1,"517349024":-1,"517349026":-1,"517349028":-1,"517349030":-1,"517349032":-1,"517349034":-1,"517349036":-1,"517349038":-1,"517349040":-1,"517349042":-1,"517349044":-1,"517349046":-1,"517349106":-1,"517349108":-1,"517349110":-1,"517349112":-1,"517406769":-1,"517406775":-1,"517406785":-1,"517406804":-2,"517406806":-1,"517406807":-1,"517406808":-1,"517406809":-2,"517406838":-1,"517406839":-1,"517406840":-1,"517406841":-1,"517406912":-1,"517406913":-1,"517406914":-1,"517406915":-1,"517406941":-2,"517406973":-1,"517406978":-1,"517414560":-1,"517414562":-1,"517414564":-1,"517414566":-1,"517414568":-1,"517414570":-1,"517414572":-1,"517414574":-1,"517414576":-1,"517414578":-1,"517414580":-1,"517414582":-1,"517414642":-2,"517414644":-2,"517414645":-1,"517414646":-2,"517414647":-1,"517414648":-2,"517472300":-1,"517472302":-1,"517472303":-1,"517472321":-1,"517472340":-1,"517472342":-1,"517472343":-1,"517472344":-1,"517472345":-1,"517472346":-1,"517472351":-1,"517472448":-1,"517472449":-1,"517472450":-1,"517472451":-1,"517472477":-1,"517472514":-1,"517480096":-1,"517480098":-1,"517480100":-1,"517480102":-1,"517480104":-1,"517480106":-1,"517480108":-1,"517480110":-1,"517480112":-1,"517480114":-1,"517480116":-1,"517480118":-1,"517480178":-1,"517480180":-1,"517480182":-1,"517480184":-1,"517537841":-1,"517537847":-1,"517537857":-1,"517537876":-2,"517537878":-1,"517537879":-1,"517537880":-1,"517537881":-2,"517537910":-1,"517537911":-1,"517537912":-1,"517537913":-1,"517537984":-1,"517537985":-1,"517537986":-1,"517537987":-1,"517538013":-2,"517538045":-1,"517538050":-1,"517545632":-1,"517545634":-1,"517545636":-1,"517545638":-1,"517545640":-1,"517545642":-1,"517545644":-1,"517545646":-1,"517545648":-1,"517545650":-1,"517545652":-1,"517545654":-1,"517545714":-2,"517545716":-2,"517545717":-1,"517545718":-2,"517545719":-1,"517545720":-2,"517603362":1,"517603367":1,"517603372":-1,"517603374":-1,"517603383":1,"517603393":-1,"517603520":-1,"517603521":-1,"517603522":-1,"517603523":-1,"517603564":1,"517603586":-1,"517603625":2,"517611168":-1,"517611170":-1,"517611172":-1,"517611174":-1,"517611176":-1,"517611178":-1,"517611180":-1,"517611182":-1,"517611184":-1,"517611186":-1,"517611188":-1,"517611190":-1,"517668908":-1,"517668910":-1,"517668927":1,"517668929":-1,"517668956":2,"517668980":1,"517669056":-1,"517669057":-1,"517669058":-1,"517669059":-1,"517669122":-1,"517669136":1,"517676704":-1,"517676706":-1,"517676708":-1,"517676710":-1,"517676712":-1,"517676714":-1,"517676716":-1,"517676718":-1,"517676720":-1,"517676722":-1,"517676724":-1,"517676726":-1,"517677081":1,"517734434":1,"517734439":1,"517734444":-1,"517734446":-1,"517734455":1,"517734465":-1,"517734592":-1,"517734593":-1,"517734594":-1,"517734595":-1,"517734636":1,"517734658":-1,"517734697":2,"517742240":-1,"517742242":-1,"517742244":-1,"517742246":-1,"517742248":-1,"517742250":-1,"517742252":-1,"517742254":-1,"517742256":-1,"517742258":-1,"517742260":-1,"517742262":-1,"517799980":-1,"517799982":-1,"517799999":1,"517800001":-1,"517800028":2,"517800052":1,"517800128":-1,"517800129":-1,"517800130":-1,"517800131":-1,"517800194":-1,"517800208":1,"517807776":-1,"517807778":-1,"517807780":-1,"517807782":-1,"517807784":-1,"517807786":-1,"517807788":-1,"517807790":-1,"517807792":-1,"517807794":-1,"517807796":-1,"517807798":-1,"517808153":1,"517865506":1,"517865511":1,"517865516":-1,"517865518":-1,"517865527":1,"517865537":-1,"517865664":-1,"517865665":-1,"517865666":-1,"517865667":-1,"517865708":1,"517865730":-1,"517865769":2,"517873312":-1,"517873314":-1,"517873316":-1,"517873318":-1,"517873320":-1,"517873322":-1,"517873324":-1,"517873326":-1,"517873328":-1,"517873330":-1,"517873332":-1,"517873334":-1,"517931052":-1,"517931054":-1,"517931071":1,"517931073":-1,"517931100":2,"517931124":1,"517931200":-1,"517931201":-1,"517931202":-1,"517931203":-1,"517931266":-1,"517931280":1,"517938848":-1,"517938850":-1,"517938852":-1,"517938854":-1,"517938856":-1,"517938858":-1,"517938860":-1,"517938862":-1,"517938864":-1,"517938866":-1,"517938868":-1,"517938870":-1,"517939225":1,"517996578":1,"517996583":1,"517996588":-1,"517996590":-1,"517996599":1,"517996609":-1,"517996736":-1,"517996737":-1,"517996738":-1,"517996739":-1,"517996780":1,"517996802":-1,"517996841":2,"518004384":-1,"518004386":-1,"518004388":-1,"518004390":-1,"518004392":-1,"518004394":-1,"518004396":-1,"518004398":-1,"518004400":-1,"518004402":-1,"518004404":-1,"518004406":-1,"518062124":-1,"518062126":-1,"518062143":1,"518062145":-1,"518062172":2,"518062196":1,"518062272":-1,"518062273":-1,"518062274":-1,"518062275":-1,"518062338":-1,"518062352":1,"518069920":-1,"518069922":-1,"518069924":-1,"518069926":-1,"518069928":-1,"518069930":-1,"518069932":-1,"518069934":-1,"518069936":-1,"518069938":-1,"518069940":-1,"518069942":-1,"518070297":1,"518127650":1,"518127655":1,"518127660":-1,"518127662":-1,"518127671":1,"518127681":-1,"518127808":-1,"518127809":-1,"518127810":-1,"518127811":-1,"518127852":1,"518127874":-1,"518127913":2,"518135456":-1,"518135458":-1,"518135460":-1,"518135462":-1,"518135464":-1,"518135466":-1,"518135468":-1,"518135470":-1,"518135472":-1,"518135474":-1,"518135476":-1,"518135478":-1,"518193196":-1,"518193198":-1,"518193215":1,"518193217":-1,"518193244":2,"518193268":1,"518193344":-1,"518193345":-1,"518193346":-1,"518193347":-1,"518193410":-1,"518193424":1,"518200992":-1,"518200994":-1,"518200996":-1,"518200998":-1,"518201000":-1,"518201002":-1,"518201004":-1,"518201006":-1,"518201008":-1,"518201010":-1,"518201012":-1,"518201014":-1,"518201369":1,"518258732":-1,"518258734":-1,"518258735":-1,"518258780":1,"518258783":-1,"518324308":-2,"518324310":-1,"518324311":-1,"518324313":-2,"518324445":-2,"518332146":-2,"518332148":-2,"518332150":-2,"518332152":-2,"518389804":-1,"518389806":-1,"518389807":-1,"518389852":1,"518389855":-1,"518455380":-2,"518455382":-1,"518455383":-1,"518455385":-2,"518455517":-2,"518463218":-2,"518463220":-2,"518463222":-2,"518463224":-2,"518520870":-1,"518520873":1,"518520875":-2,"518520876":-3,"518520877":-2,"518520878":-3,"518520879":-1,"518520880":-1,"518520884":-1,"518520886":-1,"518520890":-2,"518520891":-2,"518520892":-2,"518520893":-2,"518520897":-2,"518520899":-1,"518520903":-1,"518520906":-3,"518520911":-1,"518520913":-1,"518520921":1,"518520925":1,"518520929":-2,"518520931":-2,"518520932":-2,"518520933":-2,"518520935":-2,"518520941":-2,"518520942":-2,"518520943":-2,"518520944":-2,"518520945":-2,"518520946":-2,"518520947":-2,"518520948":-1,"518520949":-2,"518520950":-2,"518520951":-1,"518520952":-1,"518520953":-2,"518520954":-2,"518520957":1,"518520958":-2,"518521024":-2,"518521025":-2,"518521026":-2,"518521027":-2,"518521042":-1,"518521043":-1,"518521044":-1,"518521045":-1,"518521053":1,"518521056":-2,"518521057":-2,"518521058":-2,"518521059":-2,"518521064":-2,"518521065":-2,"518521066":-2,"518521068":2,"518521074":-2,"518521075":-2,"518521076":-2,"518521077":-2,"518521081":-2,"518521082":-2,"518521085":-2,"518521090":-2,"518521091":-2,"518521105":-2,"518521129":2,"518521193":-2,"518521248":-1,"518521249":-2,"518521264":-2,"518528672":-2,"518528673":-2,"518528674":-2,"518528675":-2,"518528676":-2,"518528677":-2,"518528678":-2,"518528679":-2,"518528680":-2,"518528681":-2,"518528682":-2,"518528683":-2,"518528684":-2,"518528685":-2,"518528686":-2,"518528687":-2,"518528688":-2,"518528689":-2,"518528690":-2,"518528691":-2,"518528692":-2,"518528693":-2,"518528694":-2,"518528695":-2,"518528697":-2,"518528699":-2,"518528701":-2,"518528703":-2,"518528705":-2,"518528707":-2,"518528709":-2,"518528711":-2,"518528716":-1,"518528717":-2,"518528718":-1,"518528719":-2,"518528720":-1,"518528721":-2,"518528722":-1,"518528723":-2,"518528724":-1,"518528725":-2,"518528726":-1,"518528727":-2,"518528728":-1,"518528729":-2,"518528730":-1,"518528731":-2,"518528732":-1,"518528733":-2,"518528734":-1,"518528735":-2,"518528736":-1,"518528737":-2,"518528738":-1,"518528739":-2,"518528741":-2,"518528743":-2,"518528745":-2,"518528747":-2,"518528749":-2,"518528751":-2,"518528753":-2,"518528754":1,"518528755":-2,"518528756":1,"518528757":-2,"518528758":1,"518528759":-2,"518528760":1,"518528761":-2,"518586409":1,"518586412":-1,"518586414":-1,"518586415":-1,"518586417":1,"518586420":-1,"518586428":-1,"518586431":1,"518586433":-1,"518586442":-1,"518586460":1,"518586461":1,"518586463":-1,"518586467":-1,"518586468":-1,"518586469":-1,"518586471":-1,"518586479":-1,"518586481":-1,"518586493":1,"518586560":-1,"518586561":-1,"518586562":-1,"518586563":-1,"518586600":-1,"518586601":-1,"518586602":-1,"518586610":-1,"518586611":-1,"518586612":-1,"518586613":-1,"518586626":-1,"518586641":-1,"518586785":-1,"518594208":-1,"518594210":-1,"518594212":-1,"518594214":-1,"518594216":-1,"518594218":-1,"518594220":-1,"518594222":-1,"518594224":-1,"518594226":-1,"518594228":-1,"518594230":-1,"518594233":-1,"518594235":-1,"518594237":-1,"518594239":-1,"518594241":-1,"518594243":-1,"518594245":-1,"518594247":-1,"518594253":-1,"518594255":-1,"518594257":-1,"518594259":-1,"518594261":-1,"518594263":-1,"518594265":-1,"518594267":-1,"518594269":-1,"518594271":-1,"518594273":-1,"518594275":-1,"518594585":1,"518651942":-1,"518651945":1,"518651947":-2,"518651948":-3,"518651949":-2,"518651950":-3,"518651951":-1,"518651952":-1,"518651956":-1,"518651958":-1,"518651962":-2,"518651963":-2,"518651964":-2,"518651965":-2,"518651969":-2,"518651971":-1,"518651975":-1,"518651978":-3,"518651983":-1,"518651985":-1,"518651993":1,"518651997":1,"518652001":-2,"518652003":-2,"518652004":-2,"518652005":-2,"518652007":-2,"518652013":-2,"518652014":-2,"518652015":-2,"518652016":-2,"518652017":-2,"518652018":-2,"518652019":-2,"518652020":-1,"518652021":-2,"518652022":-2,"518652023":-1,"518652024":-1,"518652025":-2,"518652026":-2,"518652029":1,"518652030":-2,"518652096":-2,"518652097":-2,"518652098":-2,"518652099":-2,"518652114":-1,"518652115":-1,"518652116":-1,"518652117":-1,"518652125":1,"518652128":-2,"518652129":-2,"518652130":-2,"518652131":-2,"518652136":-2,"518652137":-2,"518652138":-2,"518652140":2,"518652146":-2,"518652147":-2,"518652148":-2,"518652149":-2,"518652153":-2,"518652154":-2,"518652157":-2,"518652162":-2,"518652163":-2,"518652177":-2,"518652201":2,"518652265":-2,"518652320":-1,"518652321":-2,"518652336":-2,"518659744":-2,"518659745":-2,"518659746":-2,"518659747":-2,"518659748":-2,"518659749":-2,"518659750":-2,"518659751":-2,"518659752":-2,"518659753":-2,"518659754":-2,"518659755":-2,"518659756":-2,"518659757":-2,"518659758":-2,"518659759":-2,"518659760":-2,"518659761":-2,"518659762":-2,"518659763":-2,"518659764":-2,"518659765":-2,"518659766":-2,"518659767":-2,"518659769":-2,"518659771":-2,"518659773":-2,"518659775":-2,"518659777":-2,"518659779":-2,"518659781":-2,"518659783":-2,"518659788":-1,"518659789":-2,"518659790":-1,"518659791":-2,"518659792":-1,"518659793":-2,"518659794":-1,"518659795":-2,"518659796":-1,"518659797":-2,"518659798":-1,"518659799":-2,"518659800":-1,"518659801":-2,"518659802":-1,"518659803":-2,"518659804":-1,"518659805":-2,"518659806":-1,"518659807":-2,"518659808":-1,"518659809":-2,"518659810":-1,"518659811":-2,"518659813":-2,"518659815":-2,"518659817":-2,"518659819":-2,"518659821":-2,"518659823":-2,"518659825":-2,"518659826":1,"518659827":-2,"518659828":1,"518659829":-2,"518659830":1,"518659831":-2,"518659832":1,"518659833":-2,"518717481":1,"518717484":-1,"518717486":-1,"518717487":-1,"518717489":1,"518717492":-1,"518717500":-1,"518717503":1,"518717505":-1,"518717514":-1,"518717532":1,"518717533":1,"518717535":-1,"518717539":-1,"518717540":-1,"518717541":-1,"518717543":-1,"518717551":-1,"518717553":-1,"518717565":1,"518717632":-1,"518717633":-1,"518717634":-1,"518717635":-1,"518717672":-1,"518717673":-1,"518717674":-1,"518717682":-1,"518717683":-1,"518717684":-1,"518717685":-1,"518717698":-1,"518717713":-1,"518717857":-1,"518725280":-1,"518725282":-1,"518725284":-1,"518725286":-1,"518725288":-1,"518725290":-1,"518725292":-1,"518725294":-1,"518725296":-1,"518725298":-1,"518725300":-1,"518725302":-1,"518725305":-1,"518725307":-1,"518725309":-1,"518725311":-1,"518725313":-1,"518725315":-1,"518725317":-1,"518725319":-1,"518725325":-1,"518725327":-1,"518725329":-1,"518725331":-1,"518725333":-1,"518725335":-1,"518725337":-1,"518725339":-1,"518725341":-1,"518725343":-1,"518725345":-1,"518725347":-1,"518725657":1,"518783014":-1,"518783017":1,"518783019":-2,"518783020":-3,"518783021":-2,"518783022":-3,"518783023":-1,"518783024":-1,"518783028":-1,"518783030":-1,"518783034":-2,"518783035":-2,"518783036":-2,"518783037":-2,"518783041":-2,"518783043":-1,"518783047":-1,"518783050":-3,"518783055":-1,"518783057":-1,"518783065":1,"518783069":1,"518783073":-2,"518783075":-2,"518783076":-2,"518783077":-2,"518783079":-2,"518783085":-2,"518783086":-2,"518783087":-2,"518783088":-2,"518783089":-2,"518783090":-2,"518783091":-2,"518783092":-1,"518783093":-2,"518783094":-2,"518783095":-1,"518783096":-1,"518783097":-2,"518783098":-2,"518783101":1,"518783102":-2,"518783168":-2,"518783169":-2,"518783170":-2,"518783171":-2,"518783186":-1,"518783187":-1,"518783188":-1,"518783189":-1,"518783197":1,"518783200":-2,"518783201":-2,"518783202":-2,"518783203":-2,"518783208":-2,"518783209":-2,"518783210":-2,"518783212":2,"518783218":-2,"518783219":-2,"518783220":-2,"518783221":-2,"518783225":-2,"518783226":-2,"518783229":-2,"518783234":-2,"518783235":-2,"518783249":-2,"518783273":2,"518783337":-2,"518783392":-1,"518783393":-2,"518783408":-2,"518790816":-2,"518790817":-2,"518790818":-2,"518790819":-2,"518790820":-2,"518790821":-2,"518790822":-2,"518790823":-2,"518790824":-2,"518790825":-2,"518790826":-2,"518790827":-2,"518790828":-2,"518790829":-2,"518790830":-2,"518790831":-2,"518790832":-2,"518790833":-2,"518790834":-2,"518790835":-2,"518790836":-2,"518790837":-2,"518790838":-2,"518790839":-2,"518790841":-2,"518790843":-2,"518790845":-2,"518790847":-2,"518790849":-2,"518790851":-2,"518790853":-2,"518790855":-2,"518790860":-1,"518790861":-2,"518790862":-1,"518790863":-2,"518790864":-1,"518790865":-2,"518790866":-1,"518790867":-2,"518790868":-1,"518790869":-2,"518790870":-1,"518790871":-2,"518790872":-1,"518790873":-2,"518790874":-1,"518790875":-2,"518790876":-1,"518790877":-2,"518790878":-1,"518790879":-2,"518790880":-1,"518790881":-2,"518790882":-1,"518790883":-2,"518790885":-2,"518790887":-2,"518790889":-2,"518790891":-2,"518790893":-2,"518790895":-2,"518790897":-2,"518790898":1,"518790899":-2,"518790900":1,"518790901":-2,"518790902":1,"518790903":-2,"518790904":1,"518790905":-2,"518848553":1,"518848556":-1,"518848558":-1,"518848559":-1,"518848561":1,"518848564":-1,"518848572":-1,"518848575":1,"518848577":-1,"518848586":-1,"518848604":1,"518848605":1,"518848607":-1,"518848611":-1,"518848612":-1,"518848613":-1,"518848615":-1,"518848623":-1,"518848625":-1,"518848637":1,"518848704":-1,"518848705":-1,"518848706":-1,"518848707":-1,"518848744":-1,"518848745":-1,"518848746":-1,"518848754":-1,"518848755":-1,"518848756":-1,"518848757":-1,"518848770":-1,"518848785":-1,"518848929":-1,"518856352":-1,"518856354":-1,"518856356":-1,"518856358":-1,"518856360":-1,"518856362":-1,"518856364":-1,"518856366":-1,"518856368":-1,"518856370":-1,"518856372":-1,"518856374":-1,"518856377":-1,"518856379":-1,"518856381":-1,"518856383":-1,"518856385":-1,"518856387":-1,"518856389":-1,"518856391":-1,"518856397":-1,"518856399":-1,"518856401":-1,"518856403":-1,"518856405":-1,"518856407":-1,"518856409":-1,"518856411":-1,"518856413":-1,"518856415":-1,"518856417":-1,"518856419":-1,"518856729":1,"518914086":-1,"518914089":1,"518914091":-2,"518914092":-3,"518914093":-2,"518914094":-3,"518914095":-1,"518914096":-1,"518914100":-1,"518914102":-1,"518914106":-2,"518914107":-2,"518914108":-2,"518914109":-2,"518914113":-2,"518914115":-1,"518914119":-1,"518914122":-3,"518914127":-1,"518914129":-1,"518914137":1,"518914141":1,"518914145":-2,"518914147":-2,"518914148":-2,"518914149":-2,"518914151":-2,"518914157":-2,"518914158":-2,"518914159":-2,"518914160":-2,"518914161":-2,"518914162":-2,"518914163":-2,"518914164":-1,"518914165":-2,"518914166":-2,"518914167":-1,"518914168":-1,"518914169":-2,"518914170":-2,"518914173":1,"518914174":-2,"518914240":-2,"518914241":-2,"518914242":-2,"518914243":-2,"518914258":-1,"518914259":-1,"518914260":-1,"518914261":-1,"518914269":1,"518914272":-2,"518914273":-2,"518914274":-2,"518914275":-2,"518914280":-2,"518914281":-2,"518914282":-2,"518914284":2,"518914290":-2,"518914291":-2,"518914292":-2,"518914293":-2,"518914297":-2,"518914298":-2,"518914301":-2,"518914306":-2,"518914307":-2,"518914321":-2,"518914345":2,"518914409":-2,"518914464":-1,"518914465":-2,"518914480":-2,"518921888":-2,"518921889":-2,"518921890":-2,"518921891":-2,"518921892":-2,"518921893":-2,"518921894":-2,"518921895":-2,"518921896":-2,"518921897":-2,"518921898":-2,"518921899":-2,"518921900":-2,"518921901":-2,"518921902":-2,"518921903":-2,"518921904":-2,"518921905":-2,"518921906":-2,"518921907":-2,"518921908":-2,"518921909":-2,"518921910":-2,"518921911":-2,"518921913":-2,"518921915":-2,"518921917":-2,"518921919":-2,"518921921":-2,"518921923":-2,"518921925":-2,"518921927":-2,"518921932":-1,"518921933":-2,"518921934":-1,"518921935":-2,"518921936":-1,"518921937":-2,"518921938":-1,"518921939":-2,"518921940":-1,"518921941":-2,"518921942":-1,"518921943":-2,"518921944":-1,"518921945":-2,"518921946":-1,"518921947":-2,"518921948":-1,"518921949":-2,"518921950":-1,"518921951":-2,"518921952":-1,"518921953":-2,"518921954":-1,"518921955":-2,"518921957":-2,"518921959":-2,"518921961":-2,"518921963":-2,"518921965":-2,"518921967":-2,"518921969":-2,"518921970":1,"518921971":-2,"518921972":1,"518921973":-2,"518921974":1,"518921975":-2,"518921976":1,"518921977":-2,"518979625":1,"518979628":-1,"518979630":-1,"518979631":-1,"518979633":1,"518979636":-1,"518979644":-1,"518979647":1,"518979649":-1,"518979658":-1,"518979676":1,"518979677":1,"518979679":-1,"518979683":-1,"518979684":-1,"518979685":-1,"518979687":-1,"518979695":-1,"518979697":-1,"518979709":1,"518979776":-1,"518979777":-1,"518979778":-1,"518979779":-1,"518979816":-1,"518979817":-1,"518979818":-1,"518979826":-1,"518979827":-1,"518979828":-1,"518979829":-1,"518979842":-1,"518979857":-1,"518980001":-1,"518987424":-1,"518987426":-1,"518987428":-1,"518987430":-1,"518987432":-1,"518987434":-1,"518987436":-1,"518987438":-1,"518987440":-1,"518987442":-1,"518987444":-1,"518987446":-1,"518987449":-1,"518987451":-1,"518987453":-1,"518987455":-1,"518987457":-1,"518987459":-1,"518987461":-1,"518987463":-1,"518987469":-1,"518987471":-1,"518987473":-1,"518987475":-1,"518987477":-1,"518987479":-1,"518987481":-1,"518987483":-1,"518987485":-1,"518987487":-1,"518987489":-1,"518987491":-1,"518987801":1,"519045158":-1,"519045161":1,"519045163":-2,"519045164":-3,"519045165":-2,"519045166":-3,"519045167":-1,"519045168":-1,"519045172":-1,"519045174":-1,"519045178":-2,"519045179":-2,"519045180":-2,"519045181":-2,"519045185":-2,"519045187":-1,"519045191":-1,"519045194":-3,"519045199":-1,"519045201":-1,"519045209":1,"519045213":1,"519045217":-2,"519045219":-2,"519045220":-2,"519045221":-2,"519045223":-2,"519045229":-2,"519045230":-2,"519045231":-2,"519045232":-2,"519045233":-2,"519045234":-2,"519045235":-2,"519045236":-1,"519045237":-2,"519045238":-2,"519045239":-1,"519045240":-1,"519045241":-2,"519045242":-2,"519045245":1,"519045246":-2,"519045312":-2,"519045313":-2,"519045314":-2,"519045315":-2,"519045330":-1,"519045331":-1,"519045332":-1,"519045333":-1,"519045341":1,"519045344":-2,"519045345":-2,"519045346":-2,"519045347":-2,"519045352":-2,"519045353":-2,"519045354":-2,"519045356":2,"519045362":-2,"519045363":-2,"519045364":-2,"519045365":-2,"519045369":-2,"519045370":-2,"519045373":-2,"519045378":-2,"519045379":-2,"519045393":-2,"519045417":2,"519045481":-2,"519045536":-1,"519045537":-2,"519045552":-2,"519052960":-2,"519052961":-2,"519052962":-2,"519052963":-2,"519052964":-2,"519052965":-2,"519052966":-2,"519052967":-2,"519052968":-2,"519052969":-2,"519052970":-2,"519052971":-2,"519052972":-2,"519052973":-2,"519052974":-2,"519052975":-2,"519052976":-2,"519052977":-2,"519052978":-2,"519052979":-2,"519052980":-2,"519052981":-2,"519052982":-2,"519052983":-2,"519052985":-2,"519052987":-2,"519052989":-2,"519052991":-2,"519052993":-2,"519052995":-2,"519052997":-2,"519052999":-2,"519053004":-1,"519053005":-2,"519053006":-1,"519053007":-2,"519053008":-1,"519053009":-2,"519053010":-1,"519053011":-2,"519053012":-1,"519053013":-2,"519053014":-1,"519053015":-2,"519053016":-1,"519053017":-2,"519053018":-1,"519053019":-2,"519053020":-1,"519053021":-2,"519053022":-1,"519053023":-2,"519053024":-1,"519053025":-2,"519053026":-1,"519053027":-2,"519053029":-2,"519053031":-2,"519053033":-2,"519053035":-2,"519053037":-2,"519053039":-2,"519053041":-2,"519053042":1,"519053043":-2,"519053044":1,"519053045":-2,"519053046":1,"519053047":-2,"519053048":1,"519053049":-2,"519110697":1,"519110700":-1,"519110702":-1,"519110703":-1,"519110705":1,"519110708":-1,"519110716":-1,"519110719":1,"519110721":-1,"519110730":-1,"519110748":1,"519110749":1,"519110751":-1,"519110755":-1,"519110756":-1,"519110757":-1,"519110759":-1,"519110767":-1,"519110769":-1,"519110781":1,"519110848":-1,"519110849":-1,"519110850":-1,"519110851":-1,"519110888":-1,"519110889":-1,"519110890":-1,"519110898":-1,"519110899":-1,"519110900":-1,"519110901":-1,"519110914":-1,"519110929":-1,"519111073":-1,"519118496":-1,"519118498":-1,"519118500":-1,"519118502":-1,"519118504":-1,"519118506":-1,"519118508":-1,"519118510":-1,"519118512":-1,"519118514":-1,"519118516":-1,"519118518":-1,"519118521":-1,"519118523":-1,"519118525":-1,"519118527":-1,"519118529":-1,"519118531":-1,"519118533":-1,"519118535":-1,"519118541":-1,"519118543":-1,"519118545":-1,"519118547":-1,"519118549":-1,"519118551":-1,"519118553":-1,"519118555":-1,"519118557":-1,"519118559":-1,"519118561":-1,"519118563":-1,"519118873":1,"519176230":-2,"519176235":-2,"519176236":-3,"519176237":-2,"519176238":-3,"519176239":-2,"519176240":-1,"519176243":-1,"519176244":-2,"519176246":-1,"519176248":-1,"519176250":-2,"519176251":-2,"519176252":-3,"519176253":-3,"519176257":-2,"519176259":-1,"519176263":-1,"519176266":-2,"519176271":-1,"519176273":-1,"519176287":-3,"519176289":-2,"519176291":-2,"519176292":-2,"519176293":-2,"519176294":-1,"519176295":-2,"519176301":-2,"519176302":-2,"519176303":-2,"519176304":-2,"519176305":-2,"519176306":-2,"519176307":-2,"519176309":-2,"519176310":-1,"519176311":-1,"519176312":-1,"519176313":-1,"519176314":-1,"519176384":-2,"519176385":-2,"519176386":-2,"519176387":-2,"519176402":-1,"519176403":-1,"519176404":-1,"519176405":-1,"519176416":-2,"519176417":-2,"519176418":-2,"519176419":-2,"519176424":-2,"519176425":-2,"519176426":-2,"519176434":-2,"519176435":-2,"519176436":-2,"519176437":-2,"519176441":-2,"519176442":-2,"519176445":-1,"519176450":-2,"519176451":-2,"519176465":-2,"519176553":-2,"519176608":-1,"519176609":-2,"519176624":-2,"519184032":-2,"519184033":-2,"519184034":-2,"519184035":-2,"519184036":-2,"519184037":-2,"519184038":-2,"519184039":-2,"519184040":-2,"519184041":-2,"519184042":-2,"519184043":-2,"519184044":-2,"519184045":-2,"519184046":-2,"519184047":-2,"519184048":-2,"519184049":-2,"519184050":-2,"519184051":-2,"519184052":-2,"519184053":-2,"519184054":-2,"519184055":-2,"519184057":-2,"519184059":-2,"519184061":-2,"519184063":-2,"519184065":-2,"519184067":-2,"519184069":-2,"519184071":-2,"519184076":-1,"519184077":-2,"519184078":-1,"519184079":-2,"519184080":-1,"519184081":-2,"519184082":-1,"519184083":-2,"519184084":-1,"519184085":-2,"519184086":-1,"519184087":-2,"519184088":-1,"519184089":-2,"519184090":-1,"519184091":-2,"519184092":-1,"519184093":-2,"519184094":-1,"519184095":-2,"519184096":-1,"519184097":-2,"519184098":-1,"519184099":-2,"519184101":-2,"519184103":-2,"519184105":-2,"519184107":-2,"519184109":-2,"519184111":-2,"519184113":-2,"519184115":-1,"519184117":-1,"519184119":-1,"519184121":-1,"519241766":-1,"519241772":-2,"519241774":-2,"519241775":-2,"519241780":-1,"519241788":-1,"519241789":-1,"519241793":-2,"519241802":-2,"519241812":-2,"519241816":-1,"519241817":-1,"519241818":-1,"519241823":-2,"519241825":-1,"519241827":-1,"519241828":-1,"519241829":-1,"519241831":-1,"519241839":-1,"519241841":-1,"519241920":-2,"519241921":-2,"519241922":-2,"519241923":-2,"519241949":-1,"519241952":-1,"519241953":-1,"519241954":-1,"519241955":-1,"519241960":-1,"519241961":-1,"519241962":-1,"519241970":-1,"519241971":-1,"519241972":-1,"519241973":-1,"519241986":-2,"519241987":-1,"519242001":-1,"519242145":-1,"519249568":-2,"519249569":-1,"519249570":-2,"519249571":-1,"519249572":-2,"519249573":-1,"519249574":-2,"519249575":-1,"519249576":-2,"519249577":-1,"519249578":-2,"519249579":-1,"519249580":-2,"519249581":-1,"519249582":-2,"519249583":-1,"519249584":-2,"519249585":-1,"519249586":-2,"519249587":-1,"519249588":-2,"519249589":-1,"519249590":-2,"519249591":-1,"519249593":-1,"519249595":-1,"519249597":-1,"519249599":-1,"519249601":-1,"519249603":-1,"519249605":-1,"519249607":-1,"519249613":-1,"519249615":-1,"519249617":-1,"519249619":-1,"519249621":-1,"519249623":-1,"519249625":-1,"519249627":-1,"519249629":-1,"519249631":-1,"519249633":-1,"519249635":-1,"519249650":-1,"519249652":-1,"519249654":-1,"519249656":-1,"519307302":-2,"519307307":-2,"519307308":-3,"519307309":-2,"519307310":-3,"519307311":-2,"519307312":-1,"519307315":-1,"519307316":-2,"519307318":-1,"519307320":-1,"519307322":-2,"519307323":-2,"519307324":-3,"519307325":-3,"519307329":-2,"519307331":-1,"519307335":-1,"519307338":-2,"519307343":-1,"519307345":-1,"519307359":-3,"519307361":-2,"519307363":-2,"519307364":-2,"519307365":-2,"519307366":-1,"519307367":-2,"519307373":-2,"519307374":-2,"519307375":-2,"519307376":-2,"519307377":-2,"519307378":-2,"519307379":-2,"519307381":-2,"519307382":-1,"519307383":-1,"519307384":-1,"519307385":-1,"519307386":-1,"519307456":-2,"519307457":-2,"519307458":-2,"519307459":-2,"519307474":-1,"519307475":-1,"519307476":-1,"519307477":-1,"519307488":-2,"519307489":-2,"519307490":-2,"519307491":-2,"519307496":-2,"519307497":-2,"519307498":-2,"519307506":-2,"519307507":-2,"519307508":-2,"519307509":-2,"519307513":-2,"519307514":-2,"519307517":-1,"519307522":-2,"519307523":-2,"519307537":-2,"519307625":-2,"519307680":-1,"519307681":-2,"519307696":-2,"519315104":-2,"519315105":-2,"519315106":-2,"519315107":-2,"519315108":-2,"519315109":-2,"519315110":-2,"519315111":-2,"519315112":-2,"519315113":-2,"519315114":-2,"519315115":-2,"519315116":-2,"519315117":-2,"519315118":-2,"519315119":-2,"519315120":-2,"519315121":-2,"519315122":-2,"519315123":-2,"519315124":-2,"519315125":-2,"519315126":-2,"519315127":-2,"519315129":-2,"519315131":-2,"519315133":-2,"519315135":-2,"519315137":-2,"519315139":-2,"519315141":-2,"519315143":-2,"519315148":-1,"519315149":-2,"519315150":-1,"519315151":-2,"519315152":-1,"519315153":-2,"519315154":-1,"519315155":-2,"519315156":-1,"519315157":-2,"519315158":-1,"519315159":-2,"519315160":-1,"519315161":-2,"519315162":-1,"519315163":-2,"519315164":-1,"519315165":-2,"519315166":-1,"519315167":-2,"519315168":-1,"519315169":-2,"519315170":-1,"519315171":-2,"519315173":-2,"519315175":-2,"519315177":-2,"519315179":-2,"519315181":-2,"519315183":-2,"519315185":-2,"519315187":-1,"519315189":-1,"519315191":-1,"519315193":-1,"519372838":-1,"519372844":-2,"519372846":-2,"519372847":-2,"519372852":-1,"519372860":-1,"519372861":-1,"519372865":-2,"519372874":-2,"519372884":-2,"519372888":-1,"519372889":-1,"519372890":-1,"519372895":-2,"519372897":-1,"519372899":-1,"519372900":-1,"519372901":-1,"519372903":-1,"519372911":-1,"519372913":-1,"519372992":-2,"519372993":-2,"519372994":-2,"519372995":-2,"519373021":-1,"519373024":-1,"519373025":-1,"519373026":-1,"519373027":-1,"519373032":-1,"519373033":-1,"519373034":-1,"519373042":-1,"519373043":-1,"519373044":-1,"519373045":-1,"519373058":-2,"519373059":-1,"519373073":-1,"519373217":-1,"519380640":-2,"519380641":-1,"519380642":-2,"519380643":-1,"519380644":-2,"519380645":-1,"519380646":-2,"519380647":-1,"519380648":-2,"519380649":-1,"519380650":-2,"519380651":-1,"519380652":-2,"519380653":-1,"519380654":-2,"519380655":-1,"519380656":-2,"519380657":-1,"519380658":-2,"519380659":-1,"519380660":-2,"519380661":-1,"519380662":-2,"519380663":-1,"519380665":-1,"519380667":-1,"519380669":-1,"519380671":-1,"519380673":-1,"519380675":-1,"519380677":-1,"519380679":-1,"519380685":-1,"519380687":-1,"519380689":-1,"519380691":-1,"519380693":-1,"519380695":-1,"519380697":-1,"519380699":-1,"519380701":-1,"519380703":-1,"519380705":-1,"519380707":-1,"519380722":-1,"519380724":-1,"519380726":-1,"519380728":-1,"519438374":-2,"519438379":-2,"519438380":-3,"519438381":-2,"519438382":-3,"519438383":-2,"519438384":-1,"519438387":-1,"519438388":-2,"519438390":-1,"519438392":-1,"519438394":-2,"519438395":-2,"519438396":-3,"519438397":-3,"519438401":-2,"519438403":-1,"519438407":-1,"519438410":-2,"519438415":-1,"519438417":-1,"519438431":-3,"519438433":-2,"519438435":-2,"519438436":-2,"519438437":-2,"519438438":-1,"519438439":-2,"519438445":-2,"519438446":-2,"519438447":-2,"519438448":-2,"519438449":-2,"519438450":-2,"519438451":-2,"519438453":-2,"519438454":-1,"519438455":-1,"519438456":-1,"519438457":-1,"519438458":-1,"519438528":-2,"519438529":-2,"519438530":-2,"519438531":-2,"519438546":-1,"519438547":-1,"519438548":-1,"519438549":-1,"519438560":-2,"519438561":-2,"519438562":-2,"519438563":-2,"519438568":-2,"519438569":-2,"519438570":-2,"519438578":-2,"519438579":-2,"519438580":-2,"519438581":-2,"519438585":-2,"519438586":-2,"519438589":-1,"519438594":-2,"519438595":-2,"519438609":-2,"519438697":-2,"519438752":-1,"519438753":-2,"519438768":-2,"519446176":-2,"519446177":-2,"519446178":-2,"519446179":-2,"519446180":-2,"519446181":-2,"519446182":-2,"519446183":-2,"519446184":-2,"519446185":-2,"519446186":-2,"519446187":-2,"519446188":-2,"519446189":-2,"519446190":-2,"519446191":-2,"519446192":-2,"519446193":-2,"519446194":-2,"519446195":-2,"519446196":-2,"519446197":-2,"519446198":-2,"519446199":-2,"519446201":-2,"519446203":-2,"519446205":-2,"519446207":-2,"519446209":-2,"519446211":-2,"519446213":-2,"519446215":-2,"519446220":-1,"519446221":-2,"519446222":-1,"519446223":-2,"519446224":-1,"519446225":-2,"519446226":-1,"519446227":-2,"519446228":-1,"519446229":-2,"519446230":-1,"519446231":-2,"519446232":-1,"519446233":-2,"519446234":-1,"519446235":-2,"519446236":-1,"519446237":-2,"519446238":-1,"519446239":-2,"519446240":-1,"519446241":-2,"519446242":-1,"519446243":-2,"519446245":-2,"519446247":-2,"519446249":-2,"519446251":-2,"519446253":-2,"519446255":-2,"519446257":-2,"519446259":-1,"519446261":-1,"519446263":-1,"519446265":-1,"519503910":-1,"519503916":-2,"519503918":-2,"519503919":-2,"519503924":-1,"519503932":-1,"519503933":-1,"519503937":-2,"519503946":-2,"519503956":-2,"519503960":-1,"519503961":-1,"519503962":-1,"519503967":-2,"519503969":-1,"519503971":-1,"519503972":-1,"519503973":-1,"519503975":-1,"519503983":-1,"519503985":-1,"519504064":-2,"519504065":-2,"519504066":-2,"519504067":-2,"519504093":-1,"519504097":-1,"519504105":-1,"519504115":-1,"519504130":-2,"519504145":-1,"519504289":-1,"519511712":-2,"519511713":-1,"519511714":-2,"519511715":-1,"519511716":-2,"519511718":-2,"519511720":-2,"519511722":-2,"519511724":-2,"519511726":-2,"519511728":-2,"519511730":-2,"519511732":-2,"519511734":-2,"519511737":-1,"519511739":-1,"519511757":-1,"519511759":-1,"519511771":-1,"519511775":-1,"519511779":-1,"519511794":-1,"519511796":-1,"519511798":-1,"519511800":-1,"519569446":-2,"519569451":-2,"519569452":-3,"519569453":-2,"519569454":-3,"519569455":-2,"519569456":-1,"519569459":-1,"519569460":-2,"519569462":-1,"519569464":-1,"519569466":-2,"519569467":-2,"519569468":-3,"519569469":-3,"519569473":-2,"519569475":-1,"519569479":-1,"519569482":-2,"519569487":-1,"519569489":-1,"519569503":-3,"519569505":-2,"519569507":-2,"519569508":-2,"519569509":-2,"519569510":-1,"519569511":-2,"519569517":-2,"519569518":-2,"519569519":-2,"519569520":-2,"519569521":-2,"519569522":-2,"519569523":-2,"519569525":-2,"519569526":-1,"519569527":-1,"519569528":-1,"519569529":-1,"519569530":-1,"519569600":-2,"519569601":-2,"519569602":-2,"519569603":-2,"519569618":-1,"519569619":-1,"519569620":-1,"519569621":-1,"519569632":-2,"519569633":-2,"519569634":-2,"519569635":-2,"519569640":-2,"519569641":-2,"519569642":-2,"519569650":-2,"519569651":-2,"519569652":-2,"519569653":-2,"519569657":-2,"519569658":-2,"519569661":-1,"519569666":-2,"519569667":-2,"519569681":-2,"519569769":-2,"519569824":-1,"519569825":-2,"519569840":-2,"519577248":-2,"519577249":-2,"519577250":-2,"519577251":-2,"519577252":-2,"519577253":-2,"519577254":-2,"519577255":-2,"519577256":-2,"519577257":-2,"519577258":-2,"519577259":-2,"519577260":-2,"519577261":-2,"519577262":-2,"519577263":-2,"519577264":-2,"519577265":-2,"519577266":-2,"519577267":-2,"519577268":-2,"519577269":-2,"519577270":-2,"519577271":-2,"519577273":-2,"519577275":-2,"519577277":-2,"519577279":-2,"519577281":-2,"519577283":-2,"519577285":-2,"519577287":-2,"519577292":-1,"519577293":-2,"519577294":-1,"519577295":-2,"519577296":-1,"519577297":-2,"519577298":-1,"519577299":-2,"519577300":-1,"519577301":-2,"519577302":-1,"519577303":-2,"519577304":-1,"519577305":-2,"519577306":-1,"519577307":-2,"519577308":-1,"519577309":-2,"519577310":-1,"519577311":-2,"519577312":-1,"519577313":-2,"519577314":-1,"519577315":-2,"519577317":-2,"519577319":-2,"519577321":-2,"519577323":-2,"519577325":-2,"519577327":-2,"519577329":-2,"519577331":-1,"519577333":-1,"519577335":-1,"519577337":-1,"519634982":-1,"519634988":-2,"519634990":-2,"519634991":-2,"519634996":-1,"519635004":-1,"519635005":-1,"519635009":-2,"519635018":-2,"519635028":-2,"519635032":-1,"519635033":-1,"519635034":-1,"519635039":-2,"519635041":-1,"519635043":-1,"519635044":-1,"519635045":-1,"519635047":-1,"519635055":-1,"519635057":-1,"519635136":-2,"519635137":-2,"519635138":-2,"519635139":-2,"519635165":-1,"519635169":-1,"519635177":-1,"519635187":-1,"519635202":-2,"519635217":-1,"519635361":-1,"519642784":-2,"519642785":-1,"519642786":-2,"519642787":-1,"519642788":-2,"519642790":-2,"519642792":-2,"519642794":-2,"519642796":-2,"519642798":-2,"519642800":-2,"519642802":-2,"519642804":-2,"519642806":-2,"519642809":-1,"519642811":-1,"519642829":-1,"519642831":-1,"519642843":-1,"519642847":-1,"519642851":-1,"519642866":-1,"519642868":-1,"519642870":-1,"519642872":-1,"538509347":-4,"538509350":-2,"538509354":-1,"538509355":-2,"538509356":-6,"538509357":-2,"538509358":-6,"538509359":-4,"538509360":-1,"538509364":-3,"538509366":-1,"538509368":-1,"538509370":-2,"538509371":-2,"538509372":-3,"538509373":-2,"538509377":-4,"538509379":-1,"538509383":-1,"538509386":-4,"538509391":-1,"538509393":-1,"538509406":-1,"538509407":-1,"538509409":-2,"538509411":-2,"538509412":-2,"538509413":-2,"538509415":-2,"538509423":-2,"538509425":-2,"538509427":-2,"538509429":-1,"538509430":-1,"538509431":-1,"538509432":-1,"538509433":-1,"538509434":-1,"538509435":-1,"538509438":-1,"538509504":-4,"538509505":-4,"538509506":-4,"538509507":-4,"538509522":-1,"538509523":-1,"538509524":-1,"538509525":-1,"538509536":-2,"538509537":-2,"538509538":-2,"538509539":-2,"538509544":-2,"538509545":-2,"538509546":-2,"538509554":-2,"538509555":-2,"538509556":-2,"538509557":-2,"538509561":-1,"538509562":-1,"538509565":-1,"538509570":-4,"538509571":-2,"538509585":-2,"538509673":-1,"538509728":-1,"538509729":-2,"538509744":-1,"538517152":-4,"538517153":-2,"538517154":-4,"538517155":-2,"538517156":-4,"538517157":-2,"538517158":-4,"538517159":-2,"538517160":-4,"538517161":-2,"538517162":-4,"538517163":-2,"538517164":-4,"538517165":-2,"538517166":-4,"538517167":-2,"538517168":-4,"538517169":-2,"538517170":-4,"538517171":-2,"538517172":-4,"538517173":-2,"538517174":-4,"538517175":-2,"538517177":-2,"538517179":-2,"538517181":-2,"538517183":-2,"538517185":-2,"538517187":-2,"538517189":-2,"538517191":-2,"538517196":-1,"538517197":-2,"538517198":-1,"538517199":-2,"538517200":-1,"538517201":-2,"538517202":-1,"538517203":-2,"538517204":-1,"538517205":-2,"538517206":-1,"538517207":-2,"538517208":-1,"538517209":-2,"538517210":-1,"538517211":-2,"538517212":-1,"538517213":-2,"538517214":-1,"538517215":-2,"538517216":-1,"538517217":-2,"538517218":-1,"538517219":-2,"538517221":-1,"538517223":-1,"538517225":-1,"538517227":-1,"538517229":-1,"538517231":-1,"538517233":-1,"538517235":-1,"538517237":-1,"538517239":-1,"538517241":-1}}]],0,0,[0],[11],[74]],[[[28,"Material",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{},{},{}],[[[{"metallic":0},"mainColor",8,[4,4279068005]],{},{}],11,0,0]]],0,0,[0],[5],[2]],[[[57,"Deco"],[80,"Deco",[[130,-2,[14,"c54HsVy6FHa59YdYQUJwpG"],[0],[13],1],[158,-3,[14,"daDMG4Lt9K8akGcbtHM+JX"],[2,3,4,5,6,7,8,9]]],[2,"d64RtPKVhDeq+0RyCzlZ7F",-1,0],[3,-4.329780281177465e-17,0.7071067811865476,0.7071067811865475,4.3297802811774677e-17],[1,100,100,100],[1,-89.99999999999999,180,1.4124500153760508e-30]]],0,[0,10,1,0,0,1,0,0,1,0,13,1,3],[0,0,0,0,0,0,0,0,0,0],[-1,7,-1,-2,-3,-4,-5,-6,-7,-8],[75,76,34,77,78,79,80,81,82,83]],[[[26,"UTM-Cafe",45,{"commonHeight":58,"fontSize":45,"atlasName":"UTM-Cafe.png","fontDefDictionary":{"0":{"xOffset":-1,"yOffset":1,"xAdvance":111,"rect":{"x":381,"y":281,"width":111,"height":56}},"10":{"xOffset":-1,"yOffset":0,"xAdvance":0,"rect":{"x":0,"y":0,"width":0,"height":0}},"32":{"xOffset":-1,"yOffset":0,"xAdvance":9,"rect":{"x":0,"y":0,"width":0,"height":0}},"33":{"xOffset":1,"yOffset":14,"xAdvance":10,"rect":{"x":260,"y":247,"width":8,"height":34}},"34":{"xOffset":0,"yOffset":14,"xAdvance":14,"rect":{"x":225,"y":281,"width":14,"height":15}},"35":{"xOffset":0,"yOffset":13,"xAdvance":35,"rect":{"x":114,"y":177,"width":35,"height":36}},"36":{"xOffset":0,"yOffset":9,"xAdvance":18,"rect":{"x":46,"y":50,"width":18,"height":44}},"37":{"xOffset":-1,"yOffset":13,"xAdvance":23,"rect":{"x":89,"y":177,"width":25,"height":36}},"38":{"xOffset":0,"yOffset":13,"xAdvance":20,"rect":{"x":149,"y":177,"width":20,"height":36}},"39":{"xOffset":0,"yOffset":14,"xAdvance":7,"rect":{"x":239,"y":281,"width":7,"height":15}},"40":{"xOffset":1,"yOffset":13,"xAdvance":12,"rect":{"x":497,"y":95,"width":12,"height":40}},"41":{"xOffset":-1,"yOffset":13,"xAdvance":12,"rect":{"x":96,"y":137,"width":13,"height":40}},"42":{"xOffset":0,"yOffset":14,"xAdvance":17,"rect":{"x":171,"y":281,"width":17,"height":17}},"43":{"xOffset":4,"yOffset":19,"xAdvance":37,"rect":{"x":366,"y":247,"width":29,"height":29}},"44":{"xOffset":1,"yOffset":41,"xAdvance":10,"rect":{"x":275,"y":281,"width":8,"height":13}},"45":{"xOffset":0,"yOffset":32,"xAdvance":14,"rect":{"x":367,"y":281,"width":14,"height":6}},"46":{"xOffset":1,"yOffset":41,"xAdvance":10,"rect":{"x":334,"y":281,"width":8,"height":7}},"47":{"xOffset":-5,"yOffset":13,"xAdvance":11,"rect":{"x":130,"y":137,"width":24,"height":40}},"48":{"xOffset":0,"yOffset":13,"xAdvance":18,"rect":{"x":71,"y":177,"width":18,"height":36}},"49":{"xOffset":-2,"yOffset":14,"xAdvance":12,"rect":{"x":214,"y":247,"width":12,"height":34}},"50":{"xOffset":0,"yOffset":13,"xAdvance":18,"rect":{"x":310,"y":177,"width":17,"height":35}},"51":{"xOffset":0,"yOffset":13,"xAdvance":17,"rect":{"x":494,"y":137,"width":17,"height":36}},"52":{"xOffset":0,"yOffset":14,"xAdvance":18,"rect":{"x":226,"y":247,"width":18,"height":34}},"53":{"xOffset":0,"yOffset":14,"xAdvance":17,"rect":{"x":327,"y":177,"width":17,"height":35}},"54":{"xOffset":0,"yOffset":13,"xAdvance":18,"rect":{"x":18,"y":177,"width":18,"height":36}},"55":{"xOffset":-1,"yOffset":14,"xAdvance":14,"rect":{"x":244,"y":247,"width":16,"height":34}},"56":{"xOffset":0,"yOffset":13,"xAdvance":17,"rect":{"x":36,"y":177,"width":17,"height":36}},"57":{"xOffset":0,"yOffset":13,"xAdvance":18,"rect":{"x":53,"y":177,"width":18,"height":36}},"58":{"xOffset":1,"yOffset":32,"xAdvance":10,"rect":{"x":188,"y":281,"width":8,"height":16}},"59":{"xOffset":1,"yOffset":32,"xAdvance":10,"rect":{"x":163,"y":281,"width":8,"height":22}},"60":{"xOffset":4,"yOffset":20,"xAdvance":37,"rect":{"x":0,"y":281,"width":29,"height":27}},"61":{"xOffset":4,"yOffset":26,"xAdvance":37,"rect":{"x":246,"y":281,"width":29,"height":15}},"62":{"xOffset":4,"yOffset":20,"xAdvance":37,"rect":{"x":29,"y":281,"width":29,"height":27}},"63":{"xOffset":-1,"yOffset":13,"xAdvance":14,"rect":{"x":344,"y":177,"width":16,"height":35}},"64":{"xOffset":1,"yOffset":13,"xAdvance":45,"rect":{"x":0,"y":95,"width":43,"height":42}},"65":{"xOffset":-1,"yOffset":14,"xAdvance":17,"rect":{"x":360,"y":177,"width":20,"height":34}},"66":{"xOffset":1,"yOffset":14,"xAdvance":19,"rect":{"x":380,"y":177,"width":18,"height":34}},"67":{"xOffset":0,"yOffset":13,"xAdvance":19,"rect":{"x":339,"y":137,"width":19,"height":36}},"68":{"xOffset":1,"yOffset":14,"xAdvance":19,"rect":{"x":398,"y":177,"width":18,"height":34}},"69":{"xOffset":1,"yOffset":14,"xAdvance":17,"rect":{"x":416,"y":177,"width":16,"height":34}},"70":{"xOffset":1,"yOffset":14,"xAdvance":15,"rect":{"x":432,"y":177,"width":16,"height":34}},"71":{"xOffset":0,"yOffset":13,"xAdvance":19,"rect":{"x":358,"y":137,"width":18,"height":36}},"72":{"xOffset":1,"yOffset":14,"xAdvance":20,"rect":{"x":448,"y":177,"width":18,"height":34}},"73":{"xOffset":1,"yOffset":14,"xAdvance":10,"rect":{"x":466,"y":177,"width":8,"height":34}},"74":{"xOffset":-2,"yOffset":14,"xAdvance":10,"rect":{"x":474,"y":177,"width":12,"height":34}},"75":{"xOffset":1,"yOffset":14,"xAdvance":18,"rect":{"x":486,"y":177,"width":19,"height":34}},"76":{"xOffset":2,"yOffset":14,"xAdvance":15,"rect":{"x":169,"y":177,"width":15,"height":35}},"77":{"xOffset":1,"yOffset":14,"xAdvance":25,"rect":{"x":0,"y":213,"width":23,"height":34}},"78":{"xOffset":1,"yOffset":14,"xAdvance":21,"rect":{"x":23,"y":213,"width":19,"height":34}},"79":{"xOffset":0,"yOffset":13,"xAdvance":19,"rect":{"x":376,"y":137,"width":19,"height":36}},"80":{"xOffset":1,"yOffset":14,"xAdvance":18,"rect":{"x":42,"y":213,"width":18,"height":34}},"81":{"xOffset":0,"yOffset":13,"xAdvance":19,"rect":{"x":285,"y":137,"width":19,"height":38}},"82":{"xOffset":1,"yOffset":14,"xAdvance":19,"rect":{"x":60,"y":213,"width":18,"height":34}},"83":{"xOffset":0,"yOffset":13,"xAdvance":18,"rect":{"x":395,"y":137,"width":18,"height":36}},"84":{"xOffset":-2,"yOffset":14,"xAdvance":15,"rect":{"x":78,"y":213,"width":18,"height":34}},"85":{"xOffset":1,"yOffset":14,"xAdvance":19,"rect":{"x":184,"y":177,"width":18,"height":35}},"86":{"xOffset":-1,"yOffset":14,"xAdvance":17,"rect":{"x":96,"y":213,"width":19,"height":34}},"87":{"xOffset":-1,"yOffset":14,"xAdvance":25,"rect":{"x":115,"y":213,"width":27,"height":34}},"88":{"xOffset":-2,"yOffset":14,"xAdvance":17,"rect":{"x":142,"y":213,"width":20,"height":34}},"89":{"xOffset":-2,"yOffset":14,"xAdvance":15,"rect":{"x":162,"y":213,"width":19,"height":34}},"90":{"xOffset":0,"yOffset":14,"xAdvance":17,"rect":{"x":181,"y":213,"width":17,"height":34}},"91":{"xOffset":2,"yOffset":13,"xAdvance":12,"rect":{"x":109,"y":137,"width":10,"height":40}},"92":{"xOffset":-4,"yOffset":13,"xAdvance":11,"rect":{"x":154,"y":137,"width":25,"height":40}},"93":{"xOffset":0,"yOffset":13,"xAdvance":12,"rect":{"x":119,"y":137,"width":11,"height":40}},"94":{"xOffset":8,"yOffset":13,"xAdvance":45,"rect":{"x":196,"y":281,"width":29,"height":16}},"95":{"xOffset":-1,"yOffset":52,"xAdvance":23,"rect":{"x":342,"y":281,"width":25,"height":7}},"96":{"xOffset":5,"yOffset":15,"xAdvance":23,"rect":{"x":324,"y":281,"width":10,"height":8}},"97":{"xOffset":0,"yOffset":21,"xAdvance":16,"rect":{"x":395,"y":247,"width":16,"height":28}},"98":{"xOffset":1,"yOffset":14,"xAdvance":16,"rect":{"x":202,"y":177,"width":15,"height":35}},"99":{"xOffset":0,"yOffset":21,"xAdvance":16,"rect":{"x":411,"y":247,"width":16,"height":28}},"100":{"xOffset":1,"yOffset":14,"xAdvance":16,"rect":{"x":217,"y":177,"width":15,"height":35}},"101":{"xOffset":-1,"yOffset":21,"xAdvance":16,"rect":{"x":427,"y":247,"width":16,"height":28}},"102":{"xOffset":-1,"yOffset":14,"xAdvance":10,"rect":{"x":198,"y":213,"width":13,"height":34}},"103":{"xOffset":-1,"yOffset":21,"xAdvance":16,"rect":{"x":232,"y":177,"width":18,"height":35}},"104":{"xOffset":1,"yOffset":14,"xAdvance":17,"rect":{"x":211,"y":213,"width":15,"height":34}},"105":{"xOffset":1,"yOffset":14,"xAdvance":9,"rect":{"x":226,"y":213,"width":7,"height":34}},"106":{"xOffset":-2,"yOffset":14,"xAdvance":9,"rect":{"x":187,"y":50,"width":10,"height":42}},"107":{"xOffset":1,"yOffset":14,"xAdvance":16,"rect":{"x":233,"y":213,"width":16,"height":34}},"108":{"xOffset":-1,"yOffset":15,"xAdvance":9,"rect":{"x":268,"y":247,"width":11,"height":33}},"109":{"xOffset":1,"yOffset":22,"xAdvance":25,"rect":{"x":58,"y":281,"width":23,"height":26}},"110":{"xOffset":1,"yOffset":22,"xAdvance":17,"rect":{"x":492,"y":247,"width":15,"height":26}},"111":{"xOffset":0,"yOffset":21,"xAdvance":16,"rect":{"x":443,"y":247,"width":16,"height":28}},"112":{"xOffset":1,"yOffset":22,"xAdvance":16,"rect":{"x":249,"y":213,"width":15,"height":34}},"113":{"xOffset":0,"yOffset":22,"xAdvance":16,"rect":{"x":264,"y":213,"width":16,"height":34}},"114":{"xOffset":1,"yOffset":22,"xAdvance":12,"rect":{"x":81,"y":281,"width":12,"height":26}},"115":{"xOffset":-1,"yOffset":21,"xAdvance":15,"rect":{"x":459,"y":247,"width":17,"height":28}},"116":{"xOffset":-1,"yOffset":15,"xAdvance":12,"rect":{"x":280,"y":213,"width":13,"height":34}},"117":{"xOffset":0,"yOffset":22,"xAdvance":17,"rect":{"x":476,"y":247,"width":16,"height":27}},"118":{"xOffset":-1,"yOffset":22,"xAdvance":13,"rect":{"x":93,"y":281,"width":16,"height":26}},"119":{"xOffset":-1,"yOffset":22,"xAdvance":21,"rect":{"x":109,"y":281,"width":23,"height":26}},"120":{"xOffset":-2,"yOffset":22,"xAdvance":14,"rect":{"x":132,"y":281,"width":17,"height":26}},"121":{"xOffset":-1,"yOffset":22,"xAdvance":14,"rect":{"x":293,"y":213,"width":16,"height":34}},"122":{"xOffset":0,"yOffset":22,"xAdvance":14,"rect":{"x":149,"y":281,"width":14,"height":26}},"123":{"xOffset":2,"yOffset":13,"xAdvance":23,"rect":{"x":0,"y":50,"width":19,"height":45}},"124":{"xOffset":8,"yOffset":11,"xAdvance":23,"rect":{"x":168,"y":0,"width":7,"height":48}},"125":{"xOffset":2,"yOffset":13,"xAdvance":23,"rect":{"x":19,"y":50,"width":18,"height":45}},"126":{"xOffset":2,"yOffset":28,"xAdvance":37,"rect":{"x":291,"y":281,"width":33,"height":11}},"192":{"xOffset":-1,"yOffset":7,"xAdvance":17,"rect":{"x":484,"y":50,"width":20,"height":41}},"193":{"xOffset":-1,"yOffset":7,"xAdvance":17,"rect":{"x":63,"y":95,"width":20,"height":41}},"194":{"xOffset":-1,"yOffset":7,"xAdvance":17,"rect":{"x":103,"y":95,"width":20,"height":41}},"195":{"xOffset":-1,"yOffset":7,"xAdvance":17,"rect":{"x":43,"y":95,"width":20,"height":41}},"200":{"xOffset":1,"yOffset":7,"xAdvance":17,"rect":{"x":123,"y":95,"width":16,"height":41}},"201":{"xOffset":1,"yOffset":7,"xAdvance":17,"rect":{"x":155,"y":95,"width":16,"height":41}},"202":{"xOffset":1,"yOffset":7,"xAdvance":17,"rect":{"x":187,"y":95,"width":16,"height":41}},"204":{"xOffset":-2,"yOffset":7,"xAdvance":10,"rect":{"x":203,"y":95,"width":11,"height":41}},"205":{"xOffset":1,"yOffset":7,"xAdvance":10,"rect":{"x":228,"y":95,"width":11,"height":41}},"210":{"xOffset":0,"yOffset":7,"xAdvance":19,"rect":{"x":213,"y":50,"width":19,"height":42}},"211":{"xOffset":0,"yOffset":7,"xAdvance":19,"rect":{"x":251,"y":50,"width":19,"height":42}},"212":{"xOffset":0,"yOffset":7,"xAdvance":19,"rect":{"x":289,"y":50,"width":19,"height":42}},"213":{"xOffset":0,"yOffset":7,"xAdvance":19,"rect":{"x":232,"y":50,"width":19,"height":42}},"217":{"xOffset":1,"yOffset":7,"xAdvance":19,"rect":{"x":348,"y":50,"width":18,"height":42}},"218":{"xOffset":1,"yOffset":7,"xAdvance":19,"rect":{"x":384,"y":50,"width":18,"height":42}},"221":{"xOffset":-2,"yOffset":7,"xAdvance":15,"rect":{"x":327,"y":95,"width":19,"height":41}},"224":{"xOffset":0,"yOffset":15,"xAdvance":16,"rect":{"x":309,"y":213,"width":16,"height":34}},"225":{"xOffset":0,"yOffset":15,"xAdvance":16,"rect":{"x":341,"y":213,"width":16,"height":34}},"226":{"xOffset":0,"yOffset":15,"xAdvance":16,"rect":{"x":389,"y":213,"width":16,"height":34}},"227":{"xOffset":0,"yOffset":15,"xAdvance":16,"rect":{"x":325,"y":213,"width":16,"height":34}},"232":{"xOffset":-1,"yOffset":15,"xAdvance":16,"rect":{"x":425,"y":213,"width":16,"height":34}},"233":{"xOffset":-1,"yOffset":15,"xAdvance":16,"rect":{"x":457,"y":213,"width":16,"height":34}},"234":{"xOffset":-1,"yOffset":15,"xAdvance":16,"rect":{"x":489,"y":213,"width":16,"height":34}},"236":{"xOffset":-2,"yOffset":15,"xAdvance":9,"rect":{"x":279,"y":247,"width":10,"height":33}},"237":{"xOffset":0,"yOffset":15,"xAdvance":9,"rect":{"x":304,"y":247,"width":11,"height":33}},"242":{"xOffset":0,"yOffset":15,"xAdvance":16,"rect":{"x":0,"y":247,"width":16,"height":34}},"243":{"xOffset":0,"yOffset":15,"xAdvance":16,"rect":{"x":32,"y":247,"width":16,"height":34}},"244":{"xOffset":0,"yOffset":15,"xAdvance":16,"rect":{"x":64,"y":247,"width":16,"height":34}},"245":{"xOffset":0,"yOffset":15,"xAdvance":16,"rect":{"x":16,"y":247,"width":16,"height":34}},"249":{"xOffset":0,"yOffset":15,"xAdvance":17,"rect":{"x":114,"y":247,"width":16,"height":34}},"250":{"xOffset":0,"yOffset":15,"xAdvance":17,"rect":{"x":146,"y":247,"width":16,"height":34}},"253":{"xOffset":-1,"yOffset":15,"xAdvance":14,"rect":{"x":311,"y":95,"width":16,"height":41}},"258":{"xOffset":-1,"yOffset":8,"xAdvance":17,"rect":{"x":365,"y":95,"width":20,"height":40}},"259":{"xOffset":0,"yOffset":15,"xAdvance":16,"rect":{"x":373,"y":213,"width":16,"height":34}},"272":{"xOffset":-1,"yOffset":14,"xAdvance":20,"rect":{"x":405,"y":213,"width":20,"height":34}},"273":{"xOffset":1,"yOffset":14,"xAdvance":16,"rect":{"x":250,"y":177,"width":16,"height":35}},"296":{"xOffset":-2,"yOffset":7,"xAdvance":10,"rect":{"x":214,"y":95,"width":14,"height":41}},"297":{"xOffset":-2,"yOffset":15,"xAdvance":9,"rect":{"x":289,"y":247,"width":15,"height":33}},"360":{"xOffset":1,"yOffset":7,"xAdvance":19,"rect":{"x":366,"y":50,"width":18,"height":42}},"361":{"xOffset":0,"yOffset":15,"xAdvance":17,"rect":{"x":130,"y":247,"width":16,"height":34}},"416":{"xOffset":0,"yOffset":10,"xAdvance":19,"rect":{"x":243,"y":137,"width":20,"height":39}},"417":{"xOffset":0,"yOffset":18,"xAdvance":16,"rect":{"x":331,"y":247,"width":17,"height":31}},"431":{"xOffset":1,"yOffset":10,"xAdvance":19,"rect":{"x":263,"y":137,"width":22,"height":39}},"432":{"xOffset":0,"yOffset":18,"xAdvance":17,"rect":{"x":348,"y":247,"width":18,"height":31}},"7840":{"xOffset":-1,"yOffset":14,"xAdvance":17,"rect":{"x":83,"y":95,"width":20,"height":41}},"7841":{"xOffset":0,"yOffset":21,"xAdvance":16,"rect":{"x":357,"y":213,"width":16,"height":34}},"7842":{"xOffset":-1,"yOffset":5,"xAdvance":17,"rect":{"x":64,"y":50,"width":20,"height":43}},"7843":{"xOffset":0,"yOffset":13,"xAdvance":16,"rect":{"x":413,"y":137,"width":16,"height":36}},"7844":{"xOffset":-1,"yOffset":1,"xAdvance":17,"rect":{"x":215,"y":0,"width":20,"height":47}},"7845":{"xOffset":0,"yOffset":9,"xAdvance":16,"rect":{"x":449,"y":95,"width":16,"height":40}},"7846":{"xOffset":-1,"yOffset":1,"xAdvance":17,"rect":{"x":195,"y":0,"width":20,"height":47}},"7847":{"xOffset":0,"yOffset":9,"xAdvance":16,"rect":{"x":433,"y":95,"width":16,"height":40}},"7848":{"xOffset":-1,"yOffset":-1,"xAdvance":17,"rect":{"x":39,"y":0,"width":20,"height":49}},"7849":{"xOffset":0,"yOffset":6,"xAdvance":16,"rect":{"x":84,"y":50,"width":16,"height":43}},"7850":{"xOffset":-1,"yOffset":2,"xAdvance":17,"rect":{"x":346,"y":0,"width":20,"height":46}},"7851":{"xOffset":0,"yOffset":10,"xAdvance":16,"rect":{"x":195,"y":137,"width":16,"height":39}},"7852":{"xOffset":-1,"yOffset":7,"xAdvance":17,"rect":{"x":75,"y":0,"width":20,"height":48}},"7853":{"xOffset":0,"yOffset":15,"xAdvance":16,"rect":{"x":465,"y":95,"width":16,"height":40}},"7854":{"xOffset":-1,"yOffset":2,"xAdvance":17,"rect":{"x":326,"y":0,"width":20,"height":46}},"7855":{"xOffset":0,"yOffset":9,"xAdvance":16,"rect":{"x":401,"y":95,"width":16,"height":40}},"7856":{"xOffset":-1,"yOffset":2,"xAdvance":17,"rect":{"x":286,"y":0,"width":20,"height":46}},"7857":{"xOffset":0,"yOffset":9,"xAdvance":16,"rect":{"x":385,"y":95,"width":16,"height":40}},"7858":{"xOffset":-1,"yOffset":-1,"xAdvance":17,"rect":{"x":19,"y":0,"width":20,"height":49}},"7859":{"xOffset":0,"yOffset":7,"xAdvance":16,"rect":{"x":197,"y":50,"width":16,"height":42}},"7860":{"xOffset":-1,"yOffset":2,"xAdvance":17,"rect":{"x":306,"y":0,"width":20,"height":46}},"7861":{"xOffset":0,"yOffset":10,"xAdvance":16,"rect":{"x":179,"y":137,"width":16,"height":39}},"7862":{"xOffset":-1,"yOffset":8,"xAdvance":17,"rect":{"x":175,"y":0,"width":20,"height":47}},"7863":{"xOffset":0,"yOffset":15,"xAdvance":16,"rect":{"x":417,"y":95,"width":16,"height":40}},"7864":{"xOffset":1,"yOffset":14,"xAdvance":17,"rect":{"x":171,"y":95,"width":16,"height":41}},"7865":{"xOffset":-1,"yOffset":21,"xAdvance":16,"rect":{"x":473,"y":213,"width":16,"height":34}},"7866":{"xOffset":1,"yOffset":5,"xAdvance":17,"rect":{"x":100,"y":50,"width":16,"height":43}},"7867":{"xOffset":-1,"yOffset":13,"xAdvance":16,"rect":{"x":429,"y":137,"width":16,"height":36}},"7868":{"xOffset":1,"yOffset":7,"xAdvance":17,"rect":{"x":139,"y":95,"width":16,"height":41}},"7869":{"xOffset":-1,"yOffset":15,"xAdvance":16,"rect":{"x":441,"y":213,"width":16,"height":34}},"7870":{"xOffset":1,"yOffset":1,"xAdvance":17,"rect":{"x":251,"y":0,"width":16,"height":47}},"7871":{"xOffset":-1,"yOffset":9,"xAdvance":16,"rect":{"x":0,"y":137,"width":16,"height":40}},"7872":{"xOffset":1,"yOffset":1,"xAdvance":17,"rect":{"x":235,"y":0,"width":16,"height":47}},"7873":{"xOffset":-1,"yOffset":9,"xAdvance":16,"rect":{"x":481,"y":95,"width":16,"height":40}},"7874":{"xOffset":1,"yOffset":-1,"xAdvance":17,"rect":{"x":59,"y":0,"width":16,"height":49}},"7875":{"xOffset":-1,"yOffset":6,"xAdvance":16,"rect":{"x":116,"y":50,"width":16,"height":43}},"7876":{"xOffset":1,"yOffset":2,"xAdvance":17,"rect":{"x":366,"y":0,"width":16,"height":46}},"7877":{"xOffset":-1,"yOffset":10,"xAdvance":16,"rect":{"x":211,"y":137,"width":16,"height":39}},"7878":{"xOffset":1,"yOffset":7,"xAdvance":17,"rect":{"x":95,"y":0,"width":16,"height":48}},"7879":{"xOffset":-1,"yOffset":15,"xAdvance":16,"rect":{"x":16,"y":137,"width":16,"height":40}},"7880":{"xOffset":1,"yOffset":4,"xAdvance":10,"rect":{"x":37,"y":50,"width":9,"height":44}},"7881":{"xOffset":0,"yOffset":13,"xAdvance":9,"rect":{"x":266,"y":177,"width":9,"height":35}},"7882":{"xOffset":1,"yOffset":14,"xAdvance":10,"rect":{"x":503,"y":0,"width":8,"height":41}},"7883":{"xOffset":1,"yOffset":14,"xAdvance":9,"rect":{"x":504,"y":50,"width":7,"height":41}},"7884":{"xOffset":0,"yOffset":13,"xAdvance":19,"rect":{"x":270,"y":50,"width":19,"height":42}},"7885":{"xOffset":0,"yOffset":21,"xAdvance":16,"rect":{"x":48,"y":247,"width":16,"height":34}},"7886":{"xOffset":0,"yOffset":4,"xAdvance":19,"rect":{"x":382,"y":0,"width":19,"height":45}},"7887":{"xOffset":0,"yOffset":13,"xAdvance":16,"rect":{"x":445,"y":137,"width":16,"height":36}},"7888":{"xOffset":0,"yOffset":1,"xAdvance":19,"rect":{"x":130,"y":0,"width":19,"height":48}},"7889":{"xOffset":0,"yOffset":9,"xAdvance":16,"rect":{"x":48,"y":137,"width":16,"height":40}},"7890":{"xOffset":0,"yOffset":1,"xAdvance":19,"rect":{"x":111,"y":0,"width":19,"height":48}},"7891":{"xOffset":0,"yOffset":9,"xAdvance":16,"rect":{"x":32,"y":137,"width":16,"height":40}},"7892":{"xOffset":0,"yOffset":-1,"xAdvance":19,"rect":{"x":0,"y":0,"width":19,"height":50}},"7893":{"xOffset":0,"yOffset":6,"xAdvance":16,"rect":{"x":132,"y":50,"width":16,"height":43}},"7894":{"xOffset":0,"yOffset":2,"xAdvance":19,"rect":{"x":267,"y":0,"width":19,"height":47}},"7895":{"xOffset":0,"yOffset":10,"xAdvance":16,"rect":{"x":227,"y":137,"width":16,"height":39}},"7896":{"xOffset":0,"yOffset":7,"xAdvance":19,"rect":{"x":149,"y":0,"width":19,"height":48}},"7897":{"xOffset":0,"yOffset":15,"xAdvance":16,"rect":{"x":64,"y":137,"width":16,"height":40}},"7898":{"xOffset":0,"yOffset":7,"xAdvance":19,"rect":{"x":328,"y":50,"width":20,"height":42}},"7899":{"xOffset":0,"yOffset":15,"xAdvance":16,"rect":{"x":97,"y":247,"width":17,"height":34}},"7900":{"xOffset":0,"yOffset":7,"xAdvance":19,"rect":{"x":308,"y":50,"width":20,"height":42}},"7901":{"xOffset":0,"yOffset":15,"xAdvance":16,"rect":{"x":80,"y":247,"width":17,"height":34}},"7902":{"xOffset":0,"yOffset":4,"xAdvance":19,"rect":{"x":401,"y":0,"width":20,"height":45}},"7903":{"xOffset":0,"yOffset":13,"xAdvance":16,"rect":{"x":461,"y":137,"width":17,"height":36}},"7904":{"xOffset":0,"yOffset":6,"xAdvance":19,"rect":{"x":148,"y":50,"width":20,"height":43}},"7905":{"xOffset":0,"yOffset":14,"xAdvance":16,"rect":{"x":275,"y":177,"width":17,"height":35}},"7906":{"xOffset":0,"yOffset":10,"xAdvance":19,"rect":{"x":421,"y":0,"width":20,"height":45}},"7907":{"xOffset":0,"yOffset":18,"xAdvance":16,"rect":{"x":304,"y":137,"width":17,"height":37}},"7908":{"xOffset":1,"yOffset":14,"xAdvance":19,"rect":{"x":239,"y":95,"width":18,"height":41}},"7909":{"xOffset":0,"yOffset":22,"xAdvance":17,"rect":{"x":315,"y":247,"width":16,"height":33}},"7910":{"xOffset":1,"yOffset":4,"xAdvance":19,"rect":{"x":441,"y":0,"width":18,"height":45}},"7911":{"xOffset":0,"yOffset":13,"xAdvance":17,"rect":{"x":478,"y":137,"width":16,"height":36}},"7912":{"xOffset":1,"yOffset":7,"xAdvance":19,"rect":{"x":446,"y":50,"width":22,"height":42}},"7913":{"xOffset":0,"yOffset":15,"xAdvance":17,"rect":{"x":180,"y":247,"width":18,"height":34}},"7914":{"xOffset":1,"yOffset":7,"xAdvance":19,"rect":{"x":402,"y":50,"width":22,"height":42}},"7915":{"xOffset":0,"yOffset":15,"xAdvance":17,"rect":{"x":162,"y":247,"width":18,"height":34}},"7916":{"xOffset":1,"yOffset":4,"xAdvance":19,"rect":{"x":459,"y":0,"width":22,"height":45}},"7917":{"xOffset":0,"yOffset":13,"xAdvance":17,"rect":{"x":0,"y":177,"width":18,"height":36}},"7918":{"xOffset":1,"yOffset":7,"xAdvance":19,"rect":{"x":424,"y":50,"width":22,"height":42}},"7919":{"xOffset":0,"yOffset":14,"xAdvance":17,"rect":{"x":292,"y":177,"width":18,"height":35}},"7920":{"xOffset":1,"yOffset":10,"xAdvance":19,"rect":{"x":481,"y":0,"width":22,"height":45}},"7921":{"xOffset":0,"yOffset":18,"xAdvance":17,"rect":{"x":321,"y":137,"width":18,"height":37}},"7922":{"xOffset":-2,"yOffset":7,"xAdvance":15,"rect":{"x":273,"y":95,"width":19,"height":41}},"7923":{"xOffset":-1,"yOffset":15,"xAdvance":14,"rect":{"x":257,"y":95,"width":16,"height":41}},"7924":{"xOffset":-2,"yOffset":14,"xAdvance":15,"rect":{"x":346,"y":95,"width":19,"height":41}},"7925":{"xOffset":-1,"yOffset":22,"xAdvance":14,"rect":{"x":198,"y":247,"width":16,"height":34}},"7926":{"xOffset":-2,"yOffset":5,"xAdvance":15,"rect":{"x":168,"y":50,"width":19,"height":43}},"7927":{"xOffset":-1,"yOffset":14,"xAdvance":14,"rect":{"x":468,"y":50,"width":16,"height":42}},"7928":{"xOffset":-2,"yOffset":7,"xAdvance":15,"rect":{"x":292,"y":95,"width":19,"height":41}},"7929":{"xOffset":-1,"yOffset":16,"xAdvance":14,"rect":{"x":80,"y":137,"width":16,"height":40}},"8217":{"xOffset":1,"yOffset":14,"xAdvance":10,"rect":{"x":283,"y":281,"width":8,"height":13}}},"kerningDict":{}}]],0,0,[0],[11],[84]],[[[21,".bin",2447058113,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":192,"length":24,"count":6,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":192,"count":4,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.009999999776482582,-0.009999999776482582,0],"maxPosition",8,[1,0.009999999776482582,0.009999999776482582,0]]],-1],0,0,[],[],[]],[[[59,"1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true,"USE_ALPHA_TEST":true,"ALPHA_TEST_CHANNEL":"r"},{},{}],[[[{"alphaThreshold":0,"metallic":0},"mainColor",8,[4,13421772],"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[9,5],[34,85]],[[[28,"Material.003",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{},{},{}],[[[{"metallic":0},"mainColor",8,[4,4290419174]],{},{}],11,0,0]]],0,0,[0],[5],[2]],[[[58,"../models/hole/deco",[{"hash":2511723302,"name":"../models/hole/deco|standard-vs:vert|standard-fs:frag","blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1},{"name":"albedo","type":16,"count":1},{"name":"albedoScaleAndCutoff","type":16,"count":1},{"name":"pbrParams","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScaleParam","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"albedoMap","type":28,"count":1,"stageFlags":16,"binding":1,"defines":["USE_ALBEDO_MAP"]},{"name":"normalMap","type":28,"count":1,"stageFlags":16,"binding":2,"defines":["USE_NORMAL_MAP"]},{"name":"pbrMap","type":28,"count":1,"stageFlags":16,"binding":3,"defines":["USE_PBR_MAP"]},{"name":"metallicRoughnessMap","type":28,"count":1,"stageFlags":16,"binding":4,"defines":["USE_METALLIC_ROUGHNESS_MAP"]},{"name":"occlusionMap","type":28,"count":1,"stageFlags":16,"binding":5,"defines":["USE_OCCLUSION_MAP"]},{"name":"emissiveMap","type":28,"count":1,"stageFlags":16,"binding":6,"defines":["USE_EMISSIVE_MAP"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBias","format":21,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","CC_RECEIVE_SHADOW"]},{"name":"a_vertexId","format":11,"location":12,"defines":["CC_USE_MORPH"]},{"name":"a_color","format":44,"location":13,"defines":["USE_VERTEX_COLOR"]},{"name":"a_texCoord1","format":21,"location":14,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define CC_LIGHTMAP_DISABLED 0\n#define CC_LIGHTMAP_ALL_IN_ONE 1\n#define CC_LIGHTMAP_CC_LIGHTMAP_INDIRECT_OCCLUSION 2\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_RECEIVE_SHADOW\n    attribute vec2 a_localShadowBias;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\n#if CC_USE_MORPH\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In.position, In.normal, In.tangent);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In.position, In.normal, In.tangent);\n  #endif\n}\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_fogBase;\n  uniform mediump vec4 cc_fogAdd;\n#if !USE_INSTANCING\n  uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n  uniform highp vec4 cc_lightingMapUVParam;\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n}\n    uniform vec4 tilingOffset;\n#if CC_USE_FOG != 4\n  float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {\n      vec4 wPos = pos;\n      float cam_dis = distance(cameraPos, wPos.xyz);\n      return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n  }\n  float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * fogDensity);\n      return f;\n  }\n  float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n      return f;\n  }\n  float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {\n      vec4 wPos = pos;\n      vec3 camWorldProj = cameraPos.xyz;\n      camWorldProj.y = 0.;\n      vec3 worldPosProj = wPos.xyz;\n      worldPosProj.y = 0.;\n      float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n      float fDeltaY, fDensityIntegral;\n      if (cameraPos.y > fogTop) {\n          if (wPos.y < fogTop) {\n              fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;\n              fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n          }\n          else {\n              fDeltaY = 0.;\n              fDensityIntegral = 0.;\n          }\n      }\n      else {\n          if (wPos.y < fogTop) {\n              float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;\n              float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;\n              fDeltaY = abs(fDeltaA - fDeltaB);\n              fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n          }\n          else {\n              fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;\n              fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n          }\n      }\n      float fDensity;\n      if (fDeltaY != 0.) {\n          fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n      }\n      else {\n          fDensity = 0.;\n      }\n      float f = exp(-fDensity);\n      return f;\n  }\n#endif\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\n\tfactor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);\n#elif CC_USE_FOG == 1\n\tfactor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 2\n\tfactor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 3\n\tfactor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);\n#else\n\tfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nvarying mediump float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\n    CC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #endif\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotShadowMap;\n  #if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #else\n  #endif\n#endif\n#if CC_RECEIVE_SHADOW\n#endif\n#if USE_VERTEX_COLOR\n  attribute vec4 a_color;\n  varying vec4 v_color;\n#endif\nvarying vec3 v_position;\nvarying vec3 v_normal;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\n#if USE_NORMAL_MAP\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n#endif\n#if HAS_SECOND_UV || CC_USE_LIGHTMAP\n  attribute vec2 a_texCoord1;\n#endif\n#if CC_USE_LIGHTMAP && !CC_FORWARD_ADD\n  varying vec3 v_luv;\n  void CCLightingMapCaclUV()\n  {\n  #if !USE_INSTANCING\n    v_luv.xy = cc_lightingMapUVParam.xy + a_texCoord1 * cc_lightingMapUVParam.z;\n    v_luv.z = cc_lightingMapUVParam.w;\n  #else\n    v_luv.xy = a_lightingMapUVParam.xy + a_texCoord1 * a_lightingMapUVParam.z;\n    v_luv.z = a_lightingMapUVParam.w;\n  #endif\n  }\n#endif\nvec4 vert () {\n  StandardVertInput In;\n  CCVertInput(In);\n  mat4 matWorld, matWorldIT;\n  CCGetWorldMatrixFull(matWorld, matWorldIT);\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  #if USE_TWOSIDE\n    vec3 viewDirect = normalize(cc_cameraPos.xyz - v_position);\n    v_normal *= dot(v_normal, viewDirect) < 0.0 ? -1.0 : 1.0;\n  #endif\n  #if USE_NORMAL_MAP\n    v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  #endif\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if SAMPLE_FROM_RT\n    v_uv = cc_cameraPos.w > 1.0 ? vec2(v_uv.x, 1.0 - v_uv.y) : v_uv;\n  #endif\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n    #if SAMPLE_FROM_RT\n      v_uv1 = cc_cameraPos.w > 1.0 ? vec2(v_uv1.x, 1.0 - v_uv1.y) : v_uv1;\n    #endif\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n  CC_TRANSFER_FOG(pos);\n  v_shadowPos = cc_matLightViewProj * pos;\n  #if CC_USE_LIGHTMAP && !CC_FORWARD_ADD\n    CCLightingMapCaclUV();\n  #endif\n  return cc_matProj * (cc_matView * matWorld) * In.position;\n}\nvoid main() { gl_Position = vert(); }","frag":"\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives: enable\n#endif\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod: enable\n#endif\nprecision highp float;\nuniform mediump vec4 cc_debug_view_mode;\n  uniform mediump vec4 cc_debug_view_composite_pack_1;\n  uniform mediump vec4 cc_debug_view_composite_pack_2;\n  uniform mediump vec4 cc_debug_view_composite_pack_3;\nuniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_surfaceTransform;\n  uniform mediump vec4 cc_exposure;\n  uniform mediump vec4 cc_mainLitDir;\n  uniform mediump vec4 cc_mainLitColor;\n  uniform mediump vec4 cc_ambientSky;\n  uniform mediump vec4 cc_ambientGround;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define CC_LIGHTMAP_DISABLED 0\n#define CC_LIGHTMAP_ALL_IN_ONE 1\n#define CC_LIGHTMAP_CC_LIGHTMAP_INDIRECT_OCCLUSION 2\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_WORLD_POS CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR CC_SURFACES_DEBUG_VIEW_WORLD_POS + 1\n#define CC_SURFACES_DEBUG_VIEW_FACE_SIDE CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR + 1\n#define CC_SURFACES_DEBUG_VIEW_UV0 CC_SURFACES_DEBUG_VIEW_FACE_SIDE + 1\n#define CC_SURFACES_DEBUG_VIEW_UV1 CC_SURFACES_DEBUG_VIEW_UV0 + 1\n#define CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP CC_SURFACES_DEBUG_VIEW_UV1 + 1\n#define CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP + 1\n#define CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_BASE_COLOR CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR CC_SURFACES_DEBUG_VIEW_BASE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_TRANSPARENCY CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_METALLIC CC_SURFACES_DEBUG_VIEW_TRANSPARENCY + 1\n#define CC_SURFACES_DEBUG_VIEW_ROUGHNESS CC_SURFACES_DEBUG_VIEW_METALLIC + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY CC_SURFACES_DEBUG_VIEW_ROUGHNESS + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_ALL CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE CC_SURFACES_DEBUG_VIEW_DIRECT_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_ALL CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_EMISSIVE CC_SURFACES_DEBUG_VIEW_ENV_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_LIGHT_MAP CC_SURFACES_DEBUG_VIEW_EMISSIVE + 1\n#define CC_SURFACES_DEBUG_VIEW_SHADOW CC_SURFACES_DEBUG_VIEW_LIGHT_MAP + 1\n#define CC_SURFACES_DEBUG_VIEW_AO CC_SURFACES_DEBUG_VIEW_SHADOW + 1\n#define CC_SURFACES_DEBUG_VIEW_FOG CC_SURFACES_DEBUG_VIEW_AO + 1\n#define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#define IS_DEBUG_VIEW_LIGHTING_ENABLE_WITH_ALBEDO (cc_debug_view_mode.y > 0.0)\n#define IS_DEBUG_VIEW_MISC_ENABLE_CSM_LAYER_COLORATION (cc_debug_view_mode.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_DIFFUSE (cc_debug_view_composite_pack_1.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_SPECULAR (cc_debug_view_composite_pack_1.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_DIFFUSE (cc_debug_view_composite_pack_1.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_SPECULAR (cc_debug_view_composite_pack_1.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_EMISSIVE (cc_debug_view_composite_pack_2.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_LIGHT_MAP (cc_debug_view_composite_pack_2.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_SHADOW (cc_debug_view_composite_pack_2.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_AO (cc_debug_view_composite_pack_2.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_NORMAL_MAP (cc_debug_view_composite_pack_3.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_FOG (cc_debug_view_composite_pack_3.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_TONE_MAPPING (cc_debug_view_composite_pack_3.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION (cc_debug_view_composite_pack_3.w > 0.0)\nvec3 SRGBToLinear (vec3 gamma) {\n#ifdef CC_USE_SURFACE_SHADER\n  #if CC_USE_DEBUG_VIEW == CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    if (!IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION) {\n      return gamma;\n    }\n  #endif\n#endif\n  return gamma * gamma;\n}\nvec3 LinearToSRGB(vec3 linear) {\n#ifdef CC_USE_SURFACE_SHADER\n  #if CC_USE_DEBUG_VIEW == CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    if (!IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION) {\n      return linear;\n    }\n  #endif\n#endif\n  return sqrt(linear);\n}\nuniform highp mat4 cc_matLightView;\n  uniform highp mat4 cc_matLightViewProj;\n  uniform highp vec4 cc_shadowProjDepthInfo;\n  uniform highp vec4 cc_shadowProjInfo;\n  uniform mediump vec4 cc_shadowNFLSInfo;\n  uniform mediump vec4 cc_shadowWHPBInfo;\n  uniform mediump vec4 cc_shadowLPNNInfo;\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  uniform highp vec4 cc_csmViewDir0[4];\n  uniform highp vec4 cc_csmViewDir1[4];\n  uniform highp vec4 cc_csmViewDir2[4];\n  uniform highp vec4 cc_csmAtlas[4];\n  uniform highp mat4 cc_matCSMViewProj[4];\n  uniform highp vec4 cc_csmProjDepthInfo[4];\n  uniform highp vec4 cc_csmProjInfo[4];\n#endif\nvec3 RotationVecFromAxisY(vec3 v, float cosTheta, float sinTheta)\n{\n    vec3 result;\n    result.x = dot(v, vec3(cosTheta, 0.0, -sinTheta));\n    result.y = v.y;\n    result.z = dot(v, vec3(sinTheta, 0.0,  cosTheta));\n    return result;\n}\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotShadowMap;\n    highp float unpackHighpData (float mainPart, float modPart) {\n      highp float data = mainPart;\n      return data + modPart;\n    }\n    void packHighpData (out float mainPart, out float modPart, highp float data) {\n      mainPart = fract(data);\n      modPart = data - mainPart;\n    }\n    highp float unpackHighpData (float mainPart, float modPart, const float modValue) {\n      highp float data = mainPart * modValue;\n      return data + modPart * modValue;\n    }\n    void packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\n      highp float divide = data / modValue;\n      mainPart = floor(divide);\n      modPart = (data - mainPart * modValue) / modValue;\n    }\n    highp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\n      highp vec2 data = mainPart;\n      return data + modPart;\n    }\n    void packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\n      mainPart = fract(data);\n      modPart = data - mainPart;\n    }\n    highp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\n      highp vec2 data = mainPart * modValue;\n      return data + modPart * modValue;\n    }\n    void packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\n      highp vec2 divide = data / modValue;\n      mainPart = floor(divide);\n      modPart = (data - mainPart * modValue) / modValue;\n    }\n    highp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\n      highp vec3 data = mainPart;\n      return data + modPart;\n    }\n    void packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\n      mainPart = fract(data);\n      modPart = data - mainPart;\n    }\n    highp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\n      highp vec3 data = mainPart * modValue;\n      return data + modPart * modValue;\n    }\n    void packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\n      highp vec3 divide = data / modValue;\n      mainPart = floor(divide);\n      modPart = (data - mainPart * modValue) / modValue;\n    }\n    highp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\n      highp vec4 data = mainPart;\n      return data + modPart;\n    }\n    void packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\n      mainPart = fract(data);\n      modPart = data - mainPart;\n    }\n    highp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\n      highp vec4 data = mainPart * modValue;\n      return data + modPart * modValue;\n    }\n    void packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\n      highp vec4 divide = data / modValue;\n      mainPart = floor(divide);\n      modPart = (data - mainPart * modValue) / modValue;\n    }\n  float NativePCFShadowFactorHard (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n  {\n    #if CC_SHADOWMAP_FORMAT == 1\n      return step(shadowNDCPos.z, dot(texture2D(shadowMap, shadowNDCPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    #else\n      return step(shadowNDCPos.z, texture2D(shadowMap, shadowNDCPos.xy).x);\n    #endif\n  }\n  float NativePCFShadowFactorSoft (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n  {\n    vec2 oneTap = 1.0 / shadowMapResolution;\n    vec2 shadowNDCPos_offset = shadowNDCPos.xy + oneTap;\n    float block0, block1, block2, block3;\n    #if CC_SHADOWMAP_FORMAT == 1\n      block0 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    #else\n      block0 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)).x);\n      block1 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos.y)).x);\n      block2 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset.y)).x);\n      block3 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos_offset.y)).x);\n    #endif\n    float coefX   = mod(shadowNDCPos.x, oneTap.x) * shadowMapResolution.x;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block2, block3, coefX);\n    float coefY   = mod(shadowNDCPos.y, oneTap.y) * shadowMapResolution.y;\n    return mix(resultX, resultY, coefY);\n  }\n  float NativePCFShadowFactorSoft3X (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n  {\n    vec2 oneTap = 1.0 / shadowMapResolution;\n    float shadowNDCPos_offset_L = shadowNDCPos.x - oneTap.x;\n    float shadowNDCPos_offset_R = shadowNDCPos.x + oneTap.x;\n    float shadowNDCPos_offset_U = shadowNDCPos.y - oneTap.y;\n    float shadowNDCPos_offset_D = shadowNDCPos.y + oneTap.y;\n    float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n    #if CC_SHADOWMAP_FORMAT == 1\n      block0 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block1 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    #else\n      block0 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_U)).x);\n      block1 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_U)).x);\n      block2 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_U)).x);\n      block3 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos.y)).x);\n      block4 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)).x);\n      block5 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos.y)).x);\n      block6 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_D)).x);\n      block7 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_D)).x);\n      block8 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_D)).x);\n    #endif\n    float coefX = mod(shadowNDCPos.x, oneTap.x) * shadowMapResolution.x;\n    float coefY = mod(shadowNDCPos.y, oneTap.y) * shadowMapResolution.y;\n    float shadow = 0.0;\n    float resultX = mix(block0, block1, coefX);\n    float resultY = mix(block3, block4, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block1, block2, coefX);\n    resultY = mix(block4, block5, coefX);\n    shadow += mix(resultX , resultY, coefY);\n    resultX = mix(block3, block4, coefX);\n    resultY = mix(block6, block7, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    resultX = mix(block4, block5, coefX);\n    resultY = mix(block7, block8, coefX);\n    shadow += mix(resultX, resultY, coefY);\n    return shadow * 0.25;\n  }\n  float NativePCFShadowFactorSoft5X (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n  {\n    vec2 oneTap = 1.0 / shadowMapResolution;\n    vec2 twoTap = oneTap * 2.0;\n    vec2 offset1 = shadowNDCPos.xy + vec2(-twoTap.x, -twoTap.y);\n    vec2 offset2 = shadowNDCPos.xy + vec2(-oneTap.x, -twoTap.y);\n    vec2 offset3 = shadowNDCPos.xy + vec2(0.0, -twoTap.y);\n    vec2 offset4 = shadowNDCPos.xy + vec2(oneTap.x, -twoTap.y);\n    vec2 offset5 = shadowNDCPos.xy + vec2(twoTap.x, -twoTap.y);\n    vec2 offset6 = shadowNDCPos.xy + vec2(-twoTap.x, -oneTap.y);\n    vec2 offset7 = shadowNDCPos.xy + vec2(-oneTap.x, -oneTap.y);\n    vec2 offset8 = shadowNDCPos.xy + vec2(0.0, -oneTap.y);\n    vec2 offset9 = shadowNDCPos.xy + vec2(oneTap.x, -oneTap.y);\n    vec2 offset10 = shadowNDCPos.xy + vec2(twoTap.x, -oneTap.y);\n    vec2 offset11 = shadowNDCPos.xy + vec2(-twoTap.x, 0.0);\n    vec2 offset12 = shadowNDCPos.xy + vec2(-oneTap.x, 0.0);\n    vec2 offset13 = shadowNDCPos.xy + vec2(0.0, 0.0);\n    vec2 offset14 = shadowNDCPos.xy + vec2(oneTap.x, 0.0);\n    vec2 offset15 = shadowNDCPos.xy + vec2(twoTap.x, 0.0);\n    vec2 offset16 = shadowNDCPos.xy + vec2(-twoTap.x, oneTap.y);\n    vec2 offset17 = shadowNDCPos.xy + vec2(-oneTap.x, oneTap.y);\n    vec2 offset18 = shadowNDCPos.xy + vec2(0.0, oneTap.y);\n    vec2 offset19 = shadowNDCPos.xy + vec2(oneTap.x, oneTap.y);\n    vec2 offset20 = shadowNDCPos.xy + vec2(twoTap.x, oneTap.y);\n    vec2 offset21 = shadowNDCPos.xy + vec2(-twoTap.x, twoTap.y);\n    vec2 offset22 = shadowNDCPos.xy + vec2(-oneTap.x, twoTap.y);\n    vec2 offset23 = shadowNDCPos.xy + vec2(0.0, twoTap.y);\n    vec2 offset24 = shadowNDCPos.xy + vec2(oneTap.x, twoTap.y);\n    vec2 offset25 = shadowNDCPos.xy + vec2(twoTap.x, twoTap.y);\n    float block1, block2, block3, block4, block5, block6, block7, block8, block9, block10, block11, block12, block13, block14, block15, block16, block17, block18, block19, block20, block21, block22, block23, block24, block25;\n    #if CC_SHADOWMAP_FORMAT == 1\n      block1 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset1), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block2 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset2), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block3 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset3), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block4 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset4), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block5 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset5), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block6 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset6), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block7 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset7), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block8 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset8), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block9 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset9), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block10 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset10), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block11 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset11), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block12 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset12), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block13 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset13), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block14 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset14), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block15 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset15), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block16 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset16), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block17 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset17), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block18 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset18), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block19 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset19), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block20 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset20), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block21 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset21), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block22 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset22), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block23 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset23), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block24 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset24), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n      block25 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset25), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n    #else\n      block1 = step(shadowNDCPos.z, texture2D(shadowMap, offset1).x);\n      block2 = step(shadowNDCPos.z, texture2D(shadowMap, offset2).x);\n      block3 = step(shadowNDCPos.z, texture2D(shadowMap, offset3).x);\n      block4 = step(shadowNDCPos.z, texture2D(shadowMap, offset4).x);\n      block5 = step(shadowNDCPos.z, texture2D(shadowMap, offset5).x);\n      block6 = step(shadowNDCPos.z, texture2D(shadowMap, offset6).x);\n      block7 = step(shadowNDCPos.z, texture2D(shadowMap, offset7).x);\n      block8 = step(shadowNDCPos.z, texture2D(shadowMap, offset8).x);\n      block9 = step(shadowNDCPos.z, texture2D(shadowMap, offset9).x);\n      block10 = step(shadowNDCPos.z, texture2D(shadowMap, offset10).x);\n      block11 = step(shadowNDCPos.z, texture2D(shadowMap, offset11).x);\n      block12 = step(shadowNDCPos.z, texture2D(shadowMap, offset12).x);\n      block13 = step(shadowNDCPos.z, texture2D(shadowMap, offset13).x);\n      block14 = step(shadowNDCPos.z, texture2D(shadowMap, offset14).x);\n      block15 = step(shadowNDCPos.z, texture2D(shadowMap, offset15).x);\n      block16 = step(shadowNDCPos.z, texture2D(shadowMap, offset16).x);\n      block17 = step(shadowNDCPos.z, texture2D(shadowMap, offset17).x);\n      block18 = step(shadowNDCPos.z, texture2D(shadowMap, offset18).x);\n      block19 = step(shadowNDCPos.z, texture2D(shadowMap, offset19).x);\n      block20 = step(shadowNDCPos.z, texture2D(shadowMap, offset20).x);\n      block21 = step(shadowNDCPos.z, texture2D(shadowMap, offset21).x);\n      block22 = step(shadowNDCPos.z, texture2D(shadowMap, offset22).x);\n      block23 = step(shadowNDCPos.z, texture2D(shadowMap, offset23).x);\n      block24 = step(shadowNDCPos.z, texture2D(shadowMap, offset24).x);\n      block25 = step(shadowNDCPos.z, texture2D(shadowMap, offset25).x);\n    #endif\n    vec2 coef = fract(shadowNDCPos.xy * shadowMapResolution);\n    vec2 v1X1 = mix(vec2(block1, block6), vec2(block2, block7), coef.xx);\n    vec2 v1X2 = mix(vec2(block2, block7), vec2(block3, block8), coef.xx);\n    vec2 v1X3 = mix(vec2(block3, block8), vec2(block4, block9), coef.xx);\n    vec2 v1X4 = mix(vec2(block4, block9), vec2(block5, block10), coef.xx);\n    float v1 = mix(v1X1.x, v1X1.y, coef.y) + mix(v1X2.x, v1X2.y, coef.y) + mix(v1X3.x, v1X3.y, coef.y) + mix(v1X4.x, v1X4.y, coef.y);\n    vec2 v2X1 = mix(vec2(block6, block11), vec2(block7, block12), coef.xx);\n    vec2 v2X2 = mix(vec2(block7, block12), vec2(block8, block13), coef.xx);\n    vec2 v2X3 = mix(vec2(block8, block13), vec2(block9, block14), coef.xx);\n    vec2 v2X4 = mix(vec2(block9, block14), vec2(block10, block15), coef.xx);\n    float v2 = mix(v2X1.x, v2X1.y, coef.y) + mix(v2X2.x, v2X2.y, coef.y) + mix(v2X3.x, v2X3.y, coef.y) + mix(v2X4.x, v2X4.y, coef.y);\n    vec2 v3X1 = mix(vec2(block11, block16), vec2(block12, block17), coef.xx);\n    vec2 v3X2 = mix(vec2(block12, block17), vec2(block13, block18), coef.xx);\n    vec2 v3X3 = mix(vec2(block13, block18), vec2(block14, block19), coef.xx);\n    vec2 v3X4 = mix(vec2(block14, block19), vec2(block15, block20), coef.xx);\n    float v3 = mix(v3X1.x, v3X1.y, coef.y) + mix(v3X2.x, v3X2.y, coef.y) + mix(v3X3.x, v3X3.y, coef.y) + mix(v3X4.x, v3X4.y, coef.y);\n    vec2 v4X1 = mix(vec2(block16, block21), vec2(block17, block22), coef.xx);\n    vec2 v4X2 = mix(vec2(block17, block22), vec2(block18, block23), coef.xx);\n    vec2 v4X3 = mix(vec2(block18, block23), vec2(block19, block24), coef.xx);\n    vec2 v4X4 = mix(vec2(block19, block24), vec2(block20, block25), coef.xx);\n    float v4 = mix(v4X1.x, v4X1.y, coef.y) + mix(v4X2.x, v4X2.y, coef.y) + mix(v4X3.x, v4X3.y, coef.y) + mix(v4X4.x, v4X4.y, coef.y);\n    float fAvg = (v1 + v2 + v3 + v4) * 0.0625;\n    return fAvg;\n  }\n  bool GetShadowNDCPos(out vec3 shadowNDCPos, vec4 shadowPosWithDepthBias)\n  {\n  \tshadowNDCPos = shadowPosWithDepthBias.xyz / shadowPosWithDepthBias.w * 0.5 + 0.5;\n  \tif (shadowNDCPos.x < 0.0 || shadowNDCPos.x > 1.0 ||\n  \t\tshadowNDCPos.y < 0.0 || shadowNDCPos.y > 1.0 ||\n  \t\tshadowNDCPos.z < 0.0 || shadowNDCPos.z > 1.0) {\n  \t\treturn false;\n  \t}\n  \tshadowNDCPos.xy = cc_cameraPos.w == 1.0 ? vec2(shadowNDCPos.xy.x, 1.0 - shadowNDCPos.xy.y) : shadowNDCPos.xy;\n  \treturn true;\n  }\n  vec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias, vec3 matViewDir0, vec3 matViewDir1, vec3 matViewDir2, vec2 projScaleXY)\n  {\n    vec4 newShadowPos = shadowPos;\n    if (normalBias > EPSILON_LOWP)\n    {\n      vec3 viewNormal = vec3(dot(matViewDir0, worldNormal), dot(matViewDir1, worldNormal), dot(matViewDir2, worldNormal));\n      if (viewNormal.z < 0.1)\n        newShadowPos.xy += viewNormal.xy * projScaleXY * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n    }\n    return newShadowPos;\n  }\n  vec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias, mat4 matLightView, vec2 projScaleXY)\n  {\n  \tvec4 newShadowPos = shadowPos;\n  \tif (normalBias > EPSILON_LOWP)\n  \t{\n  \t\tvec4 viewNormal = matLightView * vec4(worldNormal, 0.0);\n  \t\tif (viewNormal.z < 0.1)\n  \t\t\tnewShadowPos.xy += viewNormal.xy * projScaleXY * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n  \t}\n  \treturn newShadowPos;\n  }\n  vec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias, float projScaleZ, float projBiasZ)\n  {\n  \tfloat coeffA = projScaleZ;\n  \tfloat coeffB = projBiasZ;\n  \tfloat viewSpacePos_z = (shadowPos.z - coeffB) / coeffA;\n  \tviewSpacePos_z += viewspaceDepthBias;\n  \tvec4 result = shadowPos;\n  \tresult.z = viewSpacePos_z * coeffA + coeffB;\n  \treturn result;\n  }\n  float CCGetDirLightShadowFactorHard (vec4 shadowPosWithDepthBias) {\n\t  vec3 shadowNDCPos;\n\t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n\t\t  return 1.0;\n\t  }\n    return NativePCFShadowFactorHard(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n  }\n  float CCGetDirLightShadowFactorSoft (vec4 shadowPosWithDepthBias) {\n\t  vec3 shadowNDCPos;\n\t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n\t\t  return 1.0;\n\t  }\n    return NativePCFShadowFactorSoft(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n  }\n  float CCGetDirLightShadowFactorSoft3X (vec4 shadowPosWithDepthBias) {\n\t  vec3 shadowNDCPos;\n\t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n\t\t  return 1.0;\n\t  }\n    return NativePCFShadowFactorSoft3X(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n  }\n  float CCGetDirLightShadowFactorSoft5X (vec4 shadowPosWithDepthBias) {\n\t  vec3 shadowNDCPos;\n\t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n\t\t  return 1.0;\n\t  }\n    return NativePCFShadowFactorSoft5X(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n  }\n  float CCShadowFactorBase(vec4 shadowPos, vec3 N, vec2 shadowBias)\n  {\n    vec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N, shadowBias.y, cc_matLightView, cc_shadowProjInfo.xy);\n    pos = ApplyShadowDepthBias_Orthographic(pos, shadowBias.x, cc_shadowProjDepthInfo.x, cc_shadowProjDepthInfo.y);\n    float realtimeShadow = 1.0;\n    #if CC_DIR_SHADOW_PCF_TYPE == 3\n      realtimeShadow = CCGetDirLightShadowFactorSoft5X(pos);\n    #endif\n    #if CC_DIR_SHADOW_PCF_TYPE == 2\n      realtimeShadow =  CCGetDirLightShadowFactorSoft3X(pos);\n    #endif\n    #if CC_DIR_SHADOW_PCF_TYPE == 1\n      realtimeShadow = CCGetDirLightShadowFactorSoft(pos);\n    #endif\n    #if CC_DIR_SHADOW_PCF_TYPE == 0\n      realtimeShadow = CCGetDirLightShadowFactorHard(pos);\n    #endif\n    return mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n  }\n  #if CC_SUPPORT_CASCADED_SHADOW_MAP\n    int CCGetCSMLevel(out vec4 csmPos, out vec4 shadowProjDepthInfo, out vec4 shadowProjInfo, out vec3 shadowViewDir0, out vec3 shadowViewDir1, out vec3 shadowViewDir2, vec3 worldPos) {\n      int layer = -1;\n      highp float layerThreshold = cc_csmViewDir0[0].w;\n      for (int i = 0; i < 4; i++) {\n        vec4 shadowPos = cc_matCSMViewProj[i] * vec4(worldPos.xyz, 1.0);\n        vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n        if (clipPos.x >= (0.0 + layerThreshold) && clipPos.x <= (1.0 - layerThreshold) &&\n            clipPos.y >= (0.0 + layerThreshold) && clipPos.y <= (1.0 - layerThreshold) &&\n            clipPos.z >= 0.0 && clipPos.z <= 1.0 && layer < 0) {\n          csmPos = cc_matCSMViewProj[i] * vec4(worldPos.xyz, 1.0);\n          csmPos.xy = csmPos.xy * cc_csmAtlas[i].xy + cc_csmAtlas[i].zw;\n          shadowProjDepthInfo = cc_csmProjDepthInfo[i];\n          shadowProjInfo = cc_csmProjInfo[i];\n          shadowViewDir0 = cc_csmViewDir0[i].xyz;\n          shadowViewDir1 = cc_csmViewDir1[i].xyz;\n          shadowViewDir2 = cc_csmViewDir2[i].xyz;\n          layer = i;\n        }\n      }\n      return layer;\n    }\n    float CCCSMFactorBase(vec3 worldPos, vec3 N, vec2 shadowBias)\n    {\n      vec4 csmPos = vec4(1.0);\n      vec4 shadowProjDepthInfo, shadowProjInfo;\n      vec3 shadowViewDir0, shadowViewDir1, shadowViewDir2;\n      int level = CCGetCSMLevel(csmPos, shadowProjDepthInfo, shadowProjInfo, shadowViewDir0, shadowViewDir1, shadowViewDir2, worldPos);\n      if (level < 0) { return 1.0; }\n      vec4 pos = ApplyShadowDepthBias_FaceNormal(csmPos, N, shadowBias.y, shadowViewDir0, shadowViewDir1, shadowViewDir2, shadowProjInfo.xy);\n      pos = ApplyShadowDepthBias_Orthographic(pos, shadowBias.x, shadowProjDepthInfo.x, shadowProjDepthInfo.y);\n      float realtimeShadow = 1.0;\n      #if CC_DIR_SHADOW_PCF_TYPE == 3\n        realtimeShadow = CCGetDirLightShadowFactorSoft5X(pos);\n      #endif\n      #if CC_DIR_SHADOW_PCF_TYPE == 2\n        realtimeShadow = CCGetDirLightShadowFactorSoft3X(pos);\n      #endif\n      #if CC_DIR_SHADOW_PCF_TYPE == 1\n        realtimeShadow = CCGetDirLightShadowFactorSoft(pos);\n      #endif\n      #if CC_DIR_SHADOW_PCF_TYPE == 0\n        realtimeShadow = CCGetDirLightShadowFactorHard(pos);\n      #endif\n      return mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n    }\n  #else\n    int CCGetCSMLevel(out vec4 csmPos, out vec4 shadowProjDepthInfo, out vec4 shadowProjInfo, out vec3 shadowViewDir0, out vec3 shadowViewDir1, out vec3 shadowViewDir2, vec3 worldPos) {\n      return -1;\n    }\n    float CCCSMFactorBase(vec3 worldPos, vec3 N, vec2 shadowBias) {\n      vec4 shadowPos = cc_matLightViewProj * vec4(worldPos, 1.0);\n      return CCShadowFactorBase(shadowPos, N, shadowBias);\n    }\n  #endif\n#endif\n#if CC_USE_IBL\n  uniform samplerCube cc_environment;\n  vec4 fragTextureLod (sampler2D tex, vec2 coord, float lod) {\n      #ifdef GL_EXT_shader_texture_lod\n        return texture2DLodEXT(tex, coord, lod);\n      #else\n        return texture2D(tex, coord, lod);\n      #endif\n  }\n  vec4 fragTextureLod (samplerCube tex, vec3 coord, float lod) {\n      #ifdef GL_EXT_shader_texture_lod\n        return textureCubeLodEXT(tex, coord, lod);\n      #else\n        return textureCube(tex, coord, lod);\n      #endif\n  }\n  vec3 unpackRGBE (vec4 rgbe) {\n    return rgbe.rgb * pow(1.1, rgbe.a * 255.0 - 128.0);\n  }\n  #if CC_USE_DIFFUSEMAP\n    uniform samplerCube cc_diffuseMap;\n  #endif\n#endif\nfloat GGXMobile (float roughness, float NoH, vec3 H, vec3 N) {\n  vec3 NxH = cross(N, H);\n  float OneMinusNoHSqr = dot(NxH, NxH);\n  float a = roughness * roughness;\n  float n = NoH * a;\n  float p = a / (OneMinusNoHSqr + n * n);\n  return p * p;\n}\nfloat CalcSpecular (float roughness, float NoH, vec3 H, vec3 N) {\n  return (roughness * 0.25 + 0.25) * GGXMobile(roughness, NoH, H, N);\n}\nvec3 BRDFApprox (vec3 specular, float roughness, float NoV) {\n  const vec4 c0 = vec4(-1.0, -0.0275, -0.572, 0.022);\n  const vec4 c1 = vec4(1.0, 0.0425, 1.04, -0.04);\n  vec4 r = roughness * c0 + c1;\n  float a004 = min(r.x * r.x, exp2(-9.28 * NoV)) * r.x + r.y;\n  vec2 AB = vec2(-1.04, 1.04) * a004 + r.zw;\n  AB.y *= clamp(50.0 * specular.g, 0.0, 1.0);\n  return specular * AB.x + AB.y;\n}\n#if USE_REFLECTION_DENOISE\n  vec3 GetEnvReflectionWithMipFiltering(vec3 R, float roughness, float mipCount, float denoiseIntensity) {\n    #if CC_USE_IBL\n    \tfloat mip = roughness * (mipCount - 1.0);\n    \tfloat delta = (dot(dFdx(R), dFdy(R))) * 1000.0;\n    \tfloat mipBias = mix(0.0, 5.0, clamp(delta, 0.0, 1.0));\n    \tvec4 biased = fragTextureLod(cc_environment, R, mip + mipBias);\n     \tvec4 filtered = textureCube(cc_environment, R);\n      #if CC_USE_IBL == 2\n      \tbiased.rgb = unpackRGBE(biased);\n      \tfiltered.rgb = unpackRGBE(filtered);\n      #else\n      \tbiased.rgb = SRGBToLinear(biased.rgb);\n      \tfiltered.rgb = SRGBToLinear(filtered.rgb);\n      #endif\n      return mix(biased.rgb, filtered.rgb, denoiseIntensity);\n    #else\n      return vec3(0.0, 0.0, 0.0);\n    #endif\n  }\n#endif\nstruct StandardSurface {\n  vec4 albedo;\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    vec3 position, position_fract_part;\n    #else\n    vec3 position;\n    #endif\n  vec3 normal;\n  vec3 emissive;\n  vec3 lightmap;\n  float lightmap_test;\n  float roughness;\n  float metallic;\n  float occlusion;\n  float specularIntensity;\n  #if CC_RECEIVE_SHADOW\n    vec2 shadowBias;\n  #endif\n};\nvec4 CCStandardShadingBase (StandardSurface s, vec4 shadowPos) {\n  vec3 diffuse = s.albedo.rgb * (1.0 - s.metallic);\n  vec3 specular = mix(vec3(0.08 * s.specularIntensity), s.albedo.rgb, s.metallic);\n  vec3 position;\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    position = unpackHighpData(s.position, s.position_fract_part);\n    #else\n    position = s.position;\n    #endif\n  vec3 N = normalize(s.normal);\n  vec3 V = normalize(cc_cameraPos.xyz - position);\n  vec3 L = normalize(-cc_mainLitDir.xyz);\n  float NL = max(dot(N, L), 0.0);\n  float shadow = 1.0;\n  #if CC_RECEIVE_SHADOW && CC_SHADOW_TYPE == 2\n    if (NL > 0.0 && cc_mainLitDir.w > 0.0) {\n      if (cc_shadowLPNNInfo.w > 0.0) {\n        #if CC_DIR_LIGHT_SHADOW_TYPE == 2\n          shadow = CCCSMFactorBase(position, N, s.shadowBias);\n        #endif\n      } else {\n        #if CC_DIR_LIGHT_SHADOW_TYPE == 1\n          shadow = CCShadowFactorBase(shadowPos, N, s.shadowBias);\n        #endif\n      }\n    }\n  #endif\n  #if CC_USE_LIGHTMAP && !CC_FORWARD_ADD\n    vec3 lightmap = s.lightmap.rgb;\n    #if CC_USE_HDR\n        lightmap.rgb *= cc_exposure.w * cc_exposure.x;\n    #endif\n    vec3 finalColor = diffuse * lightmap.rgb * shadow;\n  #else\n    float NV = max(abs(dot(N, V)), 0.0);\n    specular = BRDFApprox(specular, s.roughness, NV);\n    vec3 H = normalize(L + V);\n    float NH = max(dot(N, H), 0.0);\n    vec3 finalColor = NL * cc_mainLitColor.rgb * cc_mainLitColor.w;\n    vec3 diffuseContrib = diffuse / PI;\n    vec3 specularContrib = specular * CalcSpecular(s.roughness, NH, H, N);\n    vec3 dirlightContrib = (diffuseContrib + specularContrib);\n    dirlightContrib *= shadow;\n    finalColor *= dirlightContrib;\n  #endif\n  float fAmb = 0.5 - N.y * 0.5;\n  vec3 ambDiff = mix(cc_ambientSky.rgb, cc_ambientGround.rgb, fAmb);\n  #if CC_USE_IBL\n    #if CC_USE_DIFFUSEMAP\n      vec4 diffuseMap = textureCube(cc_diffuseMap, N);\n      #if CC_USE_DIFFUSEMAP == 2\n        ambDiff = unpackRGBE(diffuseMap);\n      #else\n        ambDiff = SRGBToLinear(diffuseMap.rgb);\n      #endif\n    #endif\n    vec3 R = normalize(reflect(-V, N));\n    vec3 rotationDir = RotationVecFromAxisY(R.xyz, cc_surfaceTransform.z, cc_surfaceTransform.w);\n    #if USE_REFLECTION_DENOISE && !CC_IBL_CONVOLUTED\n      vec3 env = GetEnvReflectionWithMipFiltering(rotationDir, s.roughness, cc_ambientGround.w, 0.6);\n    #else\n      vec4 envmap = fragTextureLod(cc_environment, rotationDir, s.roughness * (cc_ambientGround.w - 1.0));\n      #if CC_USE_IBL == 2\n        vec3 env = unpackRGBE(envmap);\n      #else\n        vec3 env = SRGBToLinear(envmap.rgb);\n      #endif\n    #endif\n    finalColor += env * cc_ambientSky.w * specular * s.occlusion;\n  #endif\n  finalColor += ambDiff.rgb * cc_ambientSky.w * diffuse * s.occlusion;\n  finalColor += s.emissive;\n  return vec4(finalColor, s.albedo.a);\n}\n#if CC_FORWARD_ADD\n#if CC_PIPELINE_TYPE == 0\n  #define LIGHTS_PER_PASS 1\n#else\n  #define LIGHTS_PER_PASS 10\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\n#endif\n#if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\n#endif\n#endif\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = ACESToneMap(color.rgb);\n  #endif\n  color.rgb = LinearToSRGB(color.rgb);\n  return color;\n}\n    uniform vec4 albedo;\n    uniform vec4 albedoScaleAndCutoff;\n    uniform vec4 pbrParams;\n    uniform vec4 emissive;\n    uniform vec4 emissiveScaleParam;\n#if CC_USE_FOG != 4\n#endif\n#if !CC_USE_ACCURATE_FOG\nvarying mediump float v_fog_factor;\n#endif\nvarying highp vec4 v_shadowPos;\n#if CC_RECEIVE_SHADOW && CC_SHADOW_TYPE == 2\n#endif\n#if CC_USE_LIGHTMAP && !CC_FORWARD_ADD\n  varying vec3 v_luv;\n  uniform sampler2D cc_lightingMap;\n#endif\nvarying vec3 v_position;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec3 v_normal;\n#if USE_VERTEX_COLOR\n  varying vec4 v_color;\n#endif\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_NORMAL_MAP\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n  uniform sampler2D normalMap;\n#endif\n#if USE_PBR_MAP\n  uniform sampler2D pbrMap;\n#endif\n#if USE_METALLIC_ROUGHNESS_MAP\n  uniform sampler2D metallicRoughnessMap;\n#endif\n#if USE_OCCLUSION_MAP\n  uniform sampler2D occlusionMap;\n#endif\n#if USE_EMISSIVE_MAP\n  uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out StandardSurface s) {\n  vec4 baseColor = vec4(1.);\n  #if USE_VERTEX_COLOR\n    baseColor.rgb *= SRGBToLinear(v_color.rgb);\n    baseColor.a *= v_color.a;\n  #endif\n  #if USE_ALBEDO_MAP\n    vec4 texColor = texture2D(albedoMap, ALBEDO_UV);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    baseColor *= texColor;\n  #endif\n  #if USE_ALPHA_TEST\n    float alpha = baseColor.ALPHA_TEST_CHANNEL;\n    #if USE_PBR_MAP\n      vec4 res = texture2D(pbrMap, PBR_UV);\n      alpha *= res.r;\n    #endif\n    if (alpha < albedoScaleAndCutoff.w) discard;\n  #endif\n  float edge = step(alpha - .02, albedoScaleAndCutoff.w);\n  s.albedo = baseColor * (1. - edge) + albedo * edge;\n  s.albedo.rgb *= albedoScaleAndCutoff.xyz;\n  #if CC_USE_LIGHTMAP && !CC_FORWARD_ADD\n    vec4 lightColor = texture2D(cc_lightingMap, v_luv.xy);\n    s.lightmap = lightColor.rgb;\n    s.lightmap_test = v_luv.z;\n  #endif\n  s.normal = v_normal;\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture2D(normalMap, NORMAL_UV).xyz - vec3(0.5);\n    s.normal =\n      (nmmp.x * emissiveScaleParam.w) * normalize(v_tangent) +\n      (nmmp.y * emissiveScaleParam.w) * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    packHighpData(s.position, s.position_fract_part, v_position);\n    #else\n    s.position = v_position;\n    #endif\n  vec4 pbr = pbrParams;\n  #if USE_PBR_MAP\n  #endif\n  #if USE_METALLIC_ROUGHNESS_MAP\n    vec4 metallicRoughness = texture2D(metallicRoughnessMap, PBR_UV);\n    pbr.z *= metallicRoughness.b;\n    pbr.y *= metallicRoughness.g;\n  #endif\n  #if USE_OCCLUSION_MAP\n    pbr.x *= texture2D(occlusionMap, PBR_UV).r;\n  #endif\n  s.occlusion = pbr.x;\n  s.roughness = pbr.y;\n  s.specularIntensity = 0.5;\n  s.metallic = pbr.z;\n  s.emissive = emissive.rgb * emissiveScaleParam.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture2D(emissiveMap, EMISSIVE_UV).rgb);\n  #endif\n}\nvec4 frag () {\n  StandardSurface s; surf(s);\n  vec4 color = CCStandardShadingBase(s, v_shadowPos);\n  return CCFragOutput(color);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]},{"name":"CCShadow","defines":[]},{"name":"CCCSM","defines":["CC_SUPPORT_CASCADED_SHADOW_MAP"]}],"samplerTextures":[{"name":"cc_shadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotShadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_environment","defines":["CC_USE_IBL"]},{"name":"cc_diffuseMap","defines":["CC_USE_DIFFUSEMAP"]}],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"CCLocal","defines":["!USE_INSTANCING"]},{"name":"CCForwardLight","defines":["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"cc_lightingMap","defines":["CC_USE_LIGHTMAP","!CC_FORWARD_ADD"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":135,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":107}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"},{"name":"CC_MORPH_TARGET_COUNT","type":"number","range":[2,8]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean"},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean"},{"name":"CC_USE_REAL_TIME_JOINT_TEXTURE","type":"boolean"},{"name":"CC_USE_FOG","type":"number","range":[0,4]},{"name":"CC_USE_ACCURATE_FOG","type":"boolean"},{"name":"CC_SUPPORT_CASCADED_SHADOW_MAP","type":"boolean"},{"name":"USE_VERTEX_COLOR","type":"boolean"},{"name":"USE_NORMAL_MAP","type":"boolean"},{"name":"HAS_SECOND_UV","type":"boolean"},{"name":"CC_FORWARD_ADD","type":"boolean"},{"name":"USE_TWOSIDE","type":"boolean"},{"name":"SAMPLE_FROM_RT","type":"boolean"},{"name":"CC_USE_DEBUG_VIEW","type":"number","range":[0,3]},{"name":"CC_SHADOWMAP_FORMAT","type":"number","range":[0,3]},{"name":"CC_DIR_SHADOW_PCF_TYPE","type":"number","range":[0,3]},{"name":"CC_USE_IBL","type":"number","range":[0,2]},{"name":"CC_USE_DIFFUSEMAP","type":"number","range":[0,2]},{"name":"USE_REFLECTION_DENOISE","type":"boolean"},{"name":"CC_SHADOW_TYPE","type":"number","range":[0,3]},{"name":"CC_DIR_LIGHT_SHADOW_TYPE","type":"number","range":[0,3]},{"name":"CC_USE_HDR","type":"boolean"},{"name":"CC_IBL_CONVOLUTED","type":"boolean"},{"name":"CC_PIPELINE_TYPE","type":"number","range":[0,1]},{"name":"CC_FORCE_FORWARD_SHADING","type":"boolean"},{"name":"USE_ALBEDO_MAP","type":"boolean"},{"name":"ALBEDO_UV","type":"string","options":["v_uv","v_uv1"]},{"name":"NORMAL_UV","type":"string","options":["v_uv","v_uv1"]},{"name":"PBR_UV","type":"string","options":["v_uv","v_uv1"]},{"name":"USE_PBR_MAP","type":"boolean"},{"name":"USE_METALLIC_ROUGHNESS_MAP","type":"boolean"},{"name":"USE_OCCLUSION_MAP","type":"boolean"},{"name":"USE_EMISSIVE_MAP","type":"boolean"},{"name":"EMISSIVE_UV","type":"string","options":["v_uv","v_uv1"]},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"ALPHA_TEST_CHANNEL","type":"string","options":["a","r"]}]},{"hash":958241198,"name":"../models/hole/deco|shadow-caster-vs:vert|shadow-caster-fs:frag","blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1},{"name":"albedo","type":16,"count":1},{"name":"albedoScaleAndCutoff","type":16,"count":1},{"name":"pbrParams","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScaleParam","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"albedoMap","type":28,"count":1,"stageFlags":16,"binding":1,"defines":["USE_ALBEDO_MAP"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBias","format":21,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","CC_RECEIVE_SHADOW"]},{"name":"a_vertexId","format":11,"location":12,"defines":["CC_USE_MORPH"]},{"name":"a_texCoord1","format":21,"location":13,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl1":{"vert":"\n  precision highp float;\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183f\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define CC_LIGHTMAP_DISABLED 0\n  #define CC_LIGHTMAP_ALL_IN_ONE 1\n  #define CC_LIGHTMAP_CC_LIGHTMAP_INDIRECT_OCCLUSION 2\n  struct StandardVertInput {\n    highp vec4 position;\n    vec3 normal;\n    vec4 tangent;\n  };\n  attribute vec3 a_position;\n  attribute vec3 a_normal;\n  attribute vec2 a_texCoord;\n  attribute vec4 a_tangent;\n  #if CC_USE_SKINNING\n      attribute vec4 a_joints;\n    attribute vec4 a_weights;\n  #endif\n  #if USE_INSTANCING\n    #if CC_USE_BAKED_ANIMATION\n      attribute highp vec4 a_jointAnimInfo;\n    #endif\n    attribute vec4 a_matWorld0;\n    attribute vec4 a_matWorld1;\n    attribute vec4 a_matWorld2;\n    #if CC_USE_LIGHTMAP\n      attribute vec4 a_lightingMapUVParam;\n    #endif\n    #if CC_RECEIVE_SHADOW\n      attribute vec2 a_localShadowBias;\n    #endif\n  #endif\n  #if CC_USE_MORPH\n      attribute float a_vertexId;\n      int getVertexId() {\n        return int(a_vertexId);\n      }\n  #endif\n  highp float decode32 (highp vec4 rgba) {\n    rgba = rgba * 255.0;\n    highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n    highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n    highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n    return Sign * exp2(Exponent - 23.0) * Mantissa;\n  }\n  #if CC_USE_MORPH\n    uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n    #if CC_MORPH_TARGET_HAS_POSITION\n      uniform sampler2D cc_PositionDisplacements;\n    #endif\n    #if CC_MORPH_TARGET_HAS_NORMAL\n      uniform sampler2D cc_NormalDisplacements;\n    #endif\n    #if CC_MORPH_TARGET_HAS_TANGENT\n      uniform sampler2D cc_TangentDisplacements;\n    #endif\n    vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n      float pixelIndexF = float(pixelIndex);\n      float x = mod(pixelIndexF, textureResolution.x);\n      float y = floor(pixelIndexF / textureResolution.x);\n      return vec2(x, y);\n    }\n    vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n      return (vec2(location.x, location.y) + .5) / textureResolution;\n    }\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n          int pixelIndex = elementIndex;\n          vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n          vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n          return texture2D(tex, uv);\n        }\n    #else\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex * 4;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n        vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n        return vec4(\n          decode32(texture2D(tex, x)),\n          decode32(texture2D(tex, y)),\n          decode32(texture2D(tex, z)),\n          1.0\n        );\n      }\n    #endif\n    float getDisplacementWeight(int index) {\n      int quot = index / 4;\n      int remainder = index - quot * 4;\n      if (remainder == 0) {\n        return cc_displacementWeights[quot].x;\n      } else if (remainder == 1) {\n        return cc_displacementWeights[quot].y;\n      } else if (remainder == 2) {\n        return cc_displacementWeights[quot].z;\n      } else {\n        return cc_displacementWeights[quot].w;\n      }\n    }\n    vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n    #if CC_MORPH_PRECOMPUTED\n      return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n    #else\n      vec3 result = vec3(0, 0, 0);\n      int nVertices = int(cc_displacementTextureInfo.z);\n      for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n        result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n      }\n      return result;\n    #endif\n    }\n    #if CC_MORPH_TARGET_HAS_POSITION\n    vec3 getPositionDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n    }\n    #endif\n    #if CC_MORPH_TARGET_HAS_NORMAL\n    vec3 getNormalDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n    }\n    #endif\n    #if CC_MORPH_TARGET_HAS_TANGENT\n    vec3 getTangentDisplacement(int vertexId) {\n        return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n    }\n    #endif\n    void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n      int vertexId = getVertexId();\n    #if CC_MORPH_TARGET_HAS_POSITION\n      position.xyz = position.xyz + getPositionDisplacement(vertexId);\n    #endif\n    #if CC_MORPH_TARGET_HAS_NORMAL\n      normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n    #endif\n    #if CC_MORPH_TARGET_HAS_TANGENT\n      tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n    #endif\n    }\n    void applyMorph (inout vec4 position) {\n    #if CC_MORPH_TARGET_HAS_POSITION\n      position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n    #endif\n    }\n  #endif\n  #if CC_USE_SKINNING\n    #if CC_USE_BAKED_ANIMATION\n      uniform highp vec4 cc_jointTextureInfo;\n      uniform highp vec4 cc_jointAnimInfo;\n      uniform highp sampler2D cc_jointTexture;\n      void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n      {\n        #if USE_INSTANCING\n          highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n        #else\n          highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n        #endif\n        invSize = cc_jointTextureInfo.w;\n        highp float tempY = floor(temp * invSize);\n        x = floor(temp - tempY * cc_jointTextureInfo.x);\n        y = (tempY + 0.5) * invSize;\n      }\n    #else\n      #if CC_USE_REAL_TIME_JOINT_TEXTURE\n        uniform highp sampler2D cc_realtimeJoint;\n      #else\n        uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n      #endif\n    #endif\n    #if CC_USE_BAKED_ANIMATION\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          highp float x, y, invSize;\n          CCGetJointTextureCoords(3.0, i, x, y, invSize);\n          vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n          vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n          vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n          highp float x, y, invSize;\n          CCGetJointTextureCoords(12.0, i, x, y, invSize);\n          vec4 v1 = vec4(\n            decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n            decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      #if CC_USE_REAL_TIME_JOINT_TEXTURE\n        #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n          mat4 getJointMatrix (float i) {\n            float x = i;\n            vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n            vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n            vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n            return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n          }\n        #else\n          mat4 getJointMatrix (float i) {\n           float x = 4.0 * i;\n            vec4 v1 = vec4(\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n            );\n            vec4 v2 = vec4(\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n            );\n            vec4 v3 = vec4(\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n              decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n            );\n            return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n          }\n        #endif\n      #else\n        mat4 getJointMatrix (float i) {\n          int idx = int(i);\n          vec4 v1 = cc_joints[idx * 3];\n          vec4 v2 = cc_joints[idx * 3 + 1];\n          vec4 v3 = cc_joints[idx * 3 + 2];\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #endif\n    mat4 skinMatrix () {\n      vec4 joints = vec4(a_joints);\n      return getJointMatrix(joints.x) * a_weights.x\n           + getJointMatrix(joints.y) * a_weights.y\n           + getJointMatrix(joints.z) * a_weights.z\n           + getJointMatrix(joints.w) * a_weights.w;\n    }\n    void CCSkin (inout vec4 position) {\n      mat4 m = skinMatrix();\n      position = m * position;\n    }\n    void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n      mat4 m = skinMatrix();\n      position = m * position;\n      normal = (m * vec4(normal, 0.0)).xyz;\n      tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n    }\n  #endif\n  void CCVertInput(inout StandardVertInput In)\n  {\n        In.position = vec4(a_position, 1.0);\n        In.normal = a_normal;\n        In.tangent = a_tangent;\n    #if CC_USE_MORPH\n      applyMorph(In.position, In.normal, In.tangent);\n    #endif\n    #if CC_USE_SKINNING\n      CCSkin(In.position, In.normal, In.tangent);\n    #endif\n  }\n  #if !USE_INSTANCING\n    uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n  #endif\n  void CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n  {\n    #if USE_INSTANCING\n      matWorld = mat4(\n        vec4(a_matWorld0.xyz, 0.0),\n        vec4(a_matWorld1.xyz, 0.0),\n        vec4(a_matWorld2.xyz, 0.0),\n        vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n      );\n      matWorldIT = matWorld;\n    #else\n      matWorld = cc_matWorld;\n      matWorldIT = cc_matWorldIT;\n    #endif\n  }\n            uniform vec4 tilingOffset;\n  uniform highp mat4 cc_matLightViewProj;\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #endif\n  #if HAS_SECOND_UV || CC_USE_LIGHTMAP\n    attribute vec2 a_texCoord1;\n  #endif\n  varying vec2 v_uv;\n  varying vec2 v_uv1;\n  varying vec4 v_worldPos;\n  varying float v_clip_depth;\n  vec4 vert () {\n    StandardVertInput In;\n    CCVertInput(In);\n    mat4 matWorld, matWorldIT;\n    CCGetWorldMatrixFull(matWorld, matWorldIT);\n    v_worldPos = matWorld * In.position;\n    vec4 clipPos = cc_matLightViewProj * v_worldPos;\n    v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n    #if HAS_SECOND_UV\n      v_uv1 = a_texCoord1 * tilingOffset.xy + tilingOffset.zw;\n    #endif\n    v_clip_depth = clipPos.z / clipPos.w * 0.5 + 0.5;\n    return clipPos;\n  }\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n   uniform vec4 albedo;\n   uniform vec4 albedoScaleAndCutoff;\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\n  ret = fract(ret);\n  ret -= vec4(ret.yzw, 0.0) / 255.0;\n  return ret;\n}\nuniform highp mat4 cc_matLightView;\n  uniform mediump vec4 cc_shadowNFLSInfo;\n  uniform mediump vec4 cc_shadowLPNNInfo;\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #endif\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define CC_LIGHTMAP_DISABLED 0\n#define CC_LIGHTMAP_ALL_IN_ONE 1\n#define CC_LIGHTMAP_CC_LIGHTMAP_INDIRECT_OCCLUSION 2\nfloat GetLinearDepthFromViewSpace(vec3 viewPos, float near, float far) {\n  float dist = length(viewPos);\n  return (dist - near) / (far - near);\n}\nfloat CCGetLinearDepth(vec3 worldPos, float viewSpaceBias) {\n\tvec4 viewPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  viewPos.z += viewSpaceBias;\n\treturn GetLinearDepthFromViewSpace(viewPos.xyz, cc_shadowNFLSInfo.x, cc_shadowNFLSInfo.y);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n\treturn CCGetLinearDepth(worldPos, 0.0);\n}\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotShadowMap;\n  #if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #else\n  #endif\n#endif\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_worldPos;\nvarying float v_clip_depth;\n#if USE_ALBEDO_MAP\n  uniform sampler2D albedoMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = albedo;\n  #if USE_ALBEDO_MAP\n    baseColor *= texture2D(albedoMap, ALBEDO_UV);\n  #endif\n  #if USE_ALPHA_TEST\n    if (baseColor.ALPHA_TEST_CHANNEL < albedoScaleAndCutoff.w) discard;\n  #endif\n  if(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\n    if (cc_shadowNFLSInfo.z > 0.000001) {\n      return vec4(CCGetLinearDepth(v_worldPos.xyz), 1.0, 1.0, 1.0);\n    }\n  }\n  if (cc_shadowLPNNInfo.y > 0.000001) {\n    return packDepthToRGBA(v_clip_depth);\n  }\n  return vec4(v_clip_depth, 1.0, 1.0, 1.0);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCShadow","defines":[]},{"name":"CCCSM","defines":["CC_SUPPORT_CASCADED_SHADOW_MAP"]},{"name":"CCGlobal","defines":["CC_RECEIVE_SHADOW"]},{"name":"CCCamera","defines":["CC_RECEIVE_SHADOW"]}],"samplerTextures":[{"name":"cc_shadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotShadowMap","defines":["CC_RECEIVE_SHADOW"]}],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"CCLocal","defines":["!USE_INSTANCING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":91,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":107}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"},{"name":"CC_MORPH_TARGET_COUNT","type":"number","range":[2,8]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean"},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean"},{"name":"CC_USE_REAL_TIME_JOINT_TEXTURE","type":"boolean"},{"name":"CC_SUPPORT_CASCADED_SHADOW_MAP","type":"boolean"},{"name":"HAS_SECOND_UV","type":"boolean"},{"name":"USE_ALBEDO_MAP","type":"boolean"},{"name":"ALBEDO_UV","type":"string","options":["v_uv","v_uv1"]},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"ALPHA_TEST_CHANNEL","type":"string","options":["a","r"]}]}],[{"name":"opaque","passes":[{"program":"../models/hole/deco|standard-vs:vert|standard-fs:frag","properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"linear":true,"type":16,"value":[1,1,1,1],"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"handleInfo":["pbrParams",2,13]},"SpecularIntensity":{"type":13,"value":[0.5],"handleInfo":["pbrParams",3,13]},"emissive":{"linear":true,"type":16,"value":[0,0,0,1]},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"normalStrenth":{"type":13,"value":[1],"handleInfo":["emissiveScaleParam",3,13]},"mainTexture":{"value":"grey","type":28,"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]},"pbrParams":{"type":16,"value":[1,0.8,0.6,0.5]},"emissiveScaleParam":{"type":16,"value":[1,1,1,1]},"albedoMap":{"type":28,"value":"grey"}}},{"phase":"forward-add","propertyIndex":0,"program":"../models/hole/deco|standard-vs:vert|standard-fs:frag","embeddedMacros":{"CC_FORWARD_ADD":true},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":1,"blendSrcAlpha":0,"blendDstAlpha":1}]},"depthStencilState":{"depthFunc":2,"depthTest":true,"depthWrite":false}},{"phase":"shadow-caster","propertyIndex":0,"program":"../models/hole/deco|shadow-caster-vs:vert|shadow-caster-fs:frag","rasterizerState":{"cullMode":1},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["albedoScaleAndCutoff",3,13]},"mainTexture":{"value":"grey","type":28,"handleInfo":["albedoMap",0,28]},"albedo":{"type":16,"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]},"albedoMap":{"type":28,"value":"grey"}}}]},{"name":"transparent","passes":[{"program":"../models/hole/deco|standard-vs:vert|standard-fs:frag","embeddedMacros":{"CC_FORCE_FORWARD_SHADING":true},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":true},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"linear":true,"type":16,"value":[1,1,1,1],"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["albedoScaleAndCutoff",3,13]},"occlusion":{"type":13,"value":[1],"handleInfo":["pbrParams",0,13]},"roughness":{"type":13,"value":[0.8],"handleInfo":["pbrParams",1,13]},"metallic":{"type":13,"value":[0.6],"handleInfo":["pbrParams",2,13]},"SpecularIntensity":{"type":13,"value":[0.5],"handleInfo":["pbrParams",3,13]},"emissive":{"linear":true,"type":16,"value":[0,0,0,1]},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleParam",0,15]},"normalStrenth":{"type":13,"value":[1],"handleInfo":["emissiveScaleParam",3,13]},"mainTexture":{"value":"grey","type":28,"handleInfo":["albedoMap",0,28]},"normalMap":{"value":"normal","type":28},"pbrMap":{"value":"grey","type":28},"metallicRoughnessMap":{"value":"grey","type":28},"occlusionMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"albedo":{"type":16,"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]},"pbrParams":{"type":16,"value":[1,0.8,0.6,0.5]},"emissiveScaleParam":{"type":16,"value":[1,1,1,1]},"albedoMap":{"type":28,"value":"grey"}}},{"phase":"forward-add","propertyIndex":0,"program":"../models/hole/deco|standard-vs:vert|standard-fs:frag","embeddedMacros":{"CC_FORWARD_ADD":true},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":1,"blendSrcAlpha":0,"blendDstAlpha":1}]},"depthStencilState":{"depthFunc":2,"depthTest":true,"depthWrite":false}},{"phase":"shadow-caster","propertyIndex":0,"program":"../models/hole/deco|shadow-caster-vs:vert|shadow-caster-fs:frag","rasterizerState":{"cullMode":1},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[1,1,1,1],"handleInfo":["albedo",0,16]},"albedoScale":{"type":15,"value":[1,1,1],"handleInfo":["albedoScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["albedoScaleAndCutoff",3,13]},"mainTexture":{"value":"grey","type":28,"handleInfo":["albedoMap",0,28]},"albedo":{"type":16,"value":[1,1,1,1]},"albedoScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]},"albedoMap":{"type":28,"value":"grey"}}}]}]]],0,0,[],[],[]]]]
